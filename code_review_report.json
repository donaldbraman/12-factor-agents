{
  "review_date": "2025-09-09T10:34:41.240139",
  "directory": "/Users/dbraman/Documents/GitHub/12-factor-agents",
  "files_reviewed": 919,
  "total_issues": 1750,
  "issues_by_type": {
    "missing_type_hints": 844,
    "print_statement": 800,
    "missing_docstring": 20,
    "missing_error_handling": 4,
    "todo_comment": 2,
    "hardcoded_path": 3,
    "undocumented_dependencies": 1,
    "unsafe_deserialization": 36,
    "dangerous_function": 38,
    "hardcoded_secret": 2
  },
  "github_issues_created": [
    {
      "issue_number": "51",
      "url": "https://github.com/donaldbraman/12-factor-agents/issues/51",
      "title": "Fix: 800 print statement issues"
    },
    {
      "issue_number": "52",
      "url": "https://github.com/donaldbraman/12-factor-agents/issues/52",
      "title": "Fix: 4 missing error handling issues"
    },
    {
      "issue_number": "53",
      "url": "https://github.com/donaldbraman/12-factor-agents/issues/53",
      "title": "Fix: 2 todo comment issues"
    },
    {
      "issue_number": "54",
      "url": "https://github.com/donaldbraman/12-factor-agents/issues/54",
      "title": "Fix: 3 hardcoded path issues"
    },
    {
      "issue_number": "55",
      "url": "https://github.com/donaldbraman/12-factor-agents/issues/55",
      "title": "Fix: 36 unsafe deserialization issues"
    },
    {
      "issue_number": "56",
      "url": "https://github.com/donaldbraman/12-factor-agents/issues/56",
      "title": "Fix: 38 dangerous function issues"
    },
    {
      "issue_number": "57",
      "url": "https://github.com/donaldbraman/12-factor-agents/issues/57",
      "title": "Fix: 2 hardcoded secret issues"
    }
  ],
  "all_findings": [
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 13,
      "message": "Function lacks return type hint: def add_context(self, content: str, priority: int = 1):",
      "file": "core/context_manager.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 28,
      "message": "Function lacks return type hint: def prune_to_fit(self):",
      "file": "core/context_manager.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 56,
      "message": "Function lacks return type hint: def restore_snapshot(self, snapshot: Dict[str, Any]):",
      "file": "core/context_manager.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 62,
      "message": "Function lacks return type hint: def get_context(self, search: str):",
      "file": "core/context_manager.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 58,
      "message": "Function lacks return type hint: def emit(",
      "file": "core/triggers.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 93,
      "message": "Function lacks return type hint: def register_file_watcher(",
      "file": "core/triggers.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 119,
      "message": "Function lacks return type hint: def register_schedule(",
      "file": "core/triggers.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 163,
      "message": "Use logging instead of print statements",
      "file": "core/triggers.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 171,
      "message": "Use logging instead of print statements",
      "file": "core/triggers.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 267,
      "message": "Function lacks return type hint: def process_loop():",
      "file": "core/triggers.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 276,
      "message": "Function lacks return type hint: def watcher_loop():",
      "file": "core/triggers.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 286,
      "message": "Function lacks return type hint: def scheduler_loop():",
      "file": "core/triggers.py"
    },
    {
      "type": "missing_docstring",
      "severity": "low",
      "line": 1,
      "message": "Module lacks docstring",
      "file": "core/cli_primer.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 31,
      "message": "Use logging instead of print statements",
      "file": "core/cli_primer.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 32,
      "message": "Use logging instead of print statements",
      "file": "core/cli_primer.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 37,
      "message": "Function lacks return type hint: def create_primer_command(args):",
      "file": "core/cli_primer.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 58,
      "message": "Use logging instead of print statements",
      "file": "core/cli_primer.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 70,
      "message": "Use logging instead of print statements",
      "file": "core/cli_primer.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 72,
      "message": "Use logging instead of print statements",
      "file": "core/cli_primer.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 76,
      "message": "Use logging instead of print statements",
      "file": "core/cli_primer.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 77,
      "message": "Use logging instead of print statements",
      "file": "core/cli_primer.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 78,
      "message": "Use logging instead of print statements",
      "file": "core/cli_primer.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 83,
      "message": "Use logging instead of print statements",
      "file": "core/cli_primer.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 87,
      "message": "Function lacks return type hint: def list_primers_command(args):",
      "file": "core/cli_primer.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 91,
      "message": "Use logging instead of print statements",
      "file": "core/cli_primer.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 92,
      "message": "Use logging instead of print statements",
      "file": "core/cli_primer.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 98,
      "message": "Use logging instead of print statements",
      "file": "core/cli_primer.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 101,
      "message": "Use logging instead of print statements",
      "file": "core/cli_primer.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 105,
      "message": "Use logging instead of print statements",
      "file": "core/cli_primer.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 110,
      "message": "Function lacks return type hint: def validate_template_command(args):",
      "file": "core/cli_primer.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 115,
      "message": "Use logging instead of print statements",
      "file": "core/cli_primer.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 131,
      "message": "Use logging instead of print statements",
      "file": "core/cli_primer.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 132,
      "message": "Use logging instead of print statements",
      "file": "core/cli_primer.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 135,
      "message": "Use logging instead of print statements",
      "file": "core/cli_primer.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 137,
      "message": "Use logging instead of print statements",
      "file": "core/cli_primer.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 139,
      "message": "Use logging instead of print statements",
      "file": "core/cli_primer.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 144,
      "message": "Use logging instead of print statements",
      "file": "core/cli_primer.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 146,
      "message": "Use logging instead of print statements",
      "file": "core/cli_primer.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 152,
      "message": "Use logging instead of print statements",
      "file": "core/cli_primer.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 156,
      "message": "Function lacks return type hint: def interactive_command(args):",
      "file": "core/cli_primer.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 160,
      "message": "Use logging instead of print statements",
      "file": "core/cli_primer.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 161,
      "message": "Use logging instead of print statements",
      "file": "core/cli_primer.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 164,
      "message": "Use logging instead of print statements",
      "file": "core/cli_primer.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 168,
      "message": "Use logging instead of print statements",
      "file": "core/cli_primer.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 188,
      "message": "Use logging instead of print statements",
      "file": "core/cli_primer.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 191,
      "message": "Use logging instead of print statements",
      "file": "core/cli_primer.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 195,
      "message": "Use logging instead of print statements",
      "file": "core/cli_primer.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 216,
      "message": "Use logging instead of print statements",
      "file": "core/cli_primer.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 217,
      "message": "Use logging instead of print statements",
      "file": "core/cli_primer.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 218,
      "message": "Use logging instead of print statements",
      "file": "core/cli_primer.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 219,
      "message": "Use logging instead of print statements",
      "file": "core/cli_primer.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 227,
      "message": "Use logging instead of print statements",
      "file": "core/cli_primer.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 232,
      "message": "Use logging instead of print statements",
      "file": "core/cli_primer.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 236,
      "message": "Function lacks return type hint: def main():",
      "file": "core/cli_primer.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 305,
      "message": "Use logging instead of print statements",
      "file": "core/cli_primer.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 308,
      "message": "Use logging instead of print statements",
      "file": "core/cli_primer.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 36,
      "message": "Function lacks return type hint: def validate(",
      "file": "core/compliance.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 54,
      "message": "Function lacks return type hint: def validate(",
      "file": "core/compliance.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 111,
      "message": "Function lacks return type hint: def validate(",
      "file": "core/compliance.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 171,
      "message": "Function lacks return type hint: def validate(",
      "file": "core/compliance.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 230,
      "message": "Function lacks return type hint: def validate(",
      "file": "core/compliance.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 489,
      "message": "Function lacks return type hint: def generate_compliance_report(",
      "file": "core/compliance.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 541,
      "message": "Function lacks return type hint: def validate_pin_citer_integration():",
      "file": "core/compliance.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 552,
      "message": "Use logging instead of print statements",
      "file": "core/compliance.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 553,
      "message": "Use logging instead of print statements",
      "file": "core/compliance.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 416,
      "message": "Function lacks return type hint: async def _execute_handoff_workflow(",
      "file": "core/handoff.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 519,
      "message": "Function lacks return type hint: async def _generate_handoff_document(",
      "file": "core/handoff.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 574,
      "message": "Function lacks return type hint: async def _validate_handoff_document(",
      "file": "core/handoff.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 636,
      "message": "Function lacks return type hint: async def _execute_handoff_transfer(",
      "file": "core/handoff.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 668,
      "message": "Function lacks return type hint: async def _request_handoff_acknowledgment(",
      "file": "core/handoff.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 734,
      "message": "Function lacks return type hint: def _generate_executive_summary(",
      "file": "core/handoff.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 749,
      "message": "Function lacks return type hint: def _generate_work_completed_section(",
      "file": "core/handoff.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 777,
      "message": "Function lacks return type hint: def _generate_next_priorities(",
      "file": "core/handoff.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 816,
      "message": "Function lacks return type hint: def _generate_recommendations(",
      "file": "core/handoff.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 846,
      "message": "Function lacks return type hint: def _generate_validation_checklist(",
      "file": "core/handoff.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 867,
      "message": "Function lacks return type hint: def _generate_risk_assessment(",
      "file": "core/handoff.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 908,
      "message": "Function lacks return type hint: async def demo_agent_handoff():",
      "file": "core/handoff.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 922,
      "message": "Use logging instead of print statements",
      "file": "core/handoff.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 925,
      "message": "Use logging instead of print statements",
      "file": "core/handoff.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 927,
      "message": "Use logging instead of print statements",
      "file": "core/handoff.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 928,
      "message": "Use logging instead of print statements",
      "file": "core/handoff.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 929,
      "message": "Use logging instead of print statements",
      "file": "core/handoff.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 148,
      "message": "Function lacks return type hint: async def _create_issue_hierarchy(",
      "file": "core/github_integration.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 230,
      "message": "Function lacks return type hint: async def _orchestrate_github_workflow(",
      "file": "core/github_integration.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 280,
      "message": "Function lacks return type hint: async def _execute_workflow_phase(",
      "file": "core/github_integration.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 324,
      "message": "Function lacks return type hint: async def _execute_phase_action(",
      "file": "core/github_integration.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 400,
      "message": "Function lacks return type hint: async def _create_single_issue(",
      "file": "core/github_integration.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 432,
      "message": "Function lacks return type hint: async def _create_pull_request(",
      "file": "core/github_integration.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 457,
      "message": "Function lacks return type hint: async def _add_issue_comment(self, issue_number: int, comment: str):",
      "file": "core/github_integration.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 493,
      "message": "Function lacks return type hint: async def _update_issue_status(",
      "file": "core/github_integration.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 548,
      "message": "Function lacks return type hint: def _generate_project_summary(",
      "file": "core/github_integration.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 581,
      "message": "Function lacks return type hint: def _log_github_action(self, action_type: str, message: str, data: Any = None):",
      "file": "core/github_integration.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 648,
      "message": "Function lacks return type hint: async def _initialize_github_project(self, workflow_data: Dict):",
      "file": "core/github_integration.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 659,
      "message": "Function lacks return type hint: async def _analyze_project_requirements(self, workflow_data: Dict):",
      "file": "core/github_integration.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 677,
      "message": "Function lacks return type hint: async def _create_github_structure(self, workflow_data: Dict):",
      "file": "core/github_integration.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 700,
      "message": "Function lacks return type hint: async def _request_project_approval(self, workflow_data: Dict):",
      "file": "core/github_integration.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 710,
      "message": "Function lacks return type hint: async def _finalize_github_project(self, workflow_data: Dict):",
      "file": "core/github_integration.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 731,
      "message": "Function lacks return type hint: async def demo_github_integration():",
      "file": "core/github_integration.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 744,
      "message": "Use logging instead of print statements",
      "file": "core/github_integration.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 746,
      "message": "Use logging instead of print statements",
      "file": "core/github_integration.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 761,
      "message": "Use logging instead of print statements",
      "file": "core/github_integration.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 763,
      "message": "Use logging instead of print statements",
      "file": "core/github_integration.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 66,
      "message": "Use logging instead of print statements",
      "file": "core/apple_silicon_executor.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 67,
      "message": "Use logging instead of print statements",
      "file": "core/apple_silicon_executor.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 68,
      "message": "Use logging instead of print statements",
      "file": "core/apple_silicon_executor.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 69,
      "message": "Use logging instead of print statements",
      "file": "core/apple_silicon_executor.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 71,
      "message": "Function lacks return type hint: def _setup_background_event_loop(self):",
      "file": "core/apple_silicon_executor.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 77,
      "message": "Function lacks return type hint: def setup_loop():",
      "file": "core/apple_silicon_executor.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 145,
      "message": "Function lacks return type hint: def _apply_apple_silicon_optimizations(self):",
      "file": "core/apple_silicon_executor.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 164,
      "message": "Function lacks return type hint: async def spawn_background_agent(",
      "file": "core/apple_silicon_executor.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 268,
      "message": "Function lacks return type hint: async def optimize_for_workload(self, workload_type: str):",
      "file": "core/apple_silicon_executor.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 295,
      "message": "Use logging instead of print statements",
      "file": "core/apple_silicon_executor.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 296,
      "message": "Use logging instead of print statements",
      "file": "core/apple_silicon_executor.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 297,
      "message": "Use logging instead of print statements",
      "file": "core/apple_silicon_executor.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 298,
      "message": "Use logging instead of print statements",
      "file": "core/apple_silicon_executor.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 300,
      "message": "Function lacks return type hint: async def cleanup_all(self):",
      "file": "core/apple_silicon_executor.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 316,
      "message": "Use logging instead of print statements",
      "file": "core/apple_silicon_executor.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 319,
      "message": "Use logging instead of print statements",
      "file": "core/apple_silicon_executor.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 133,
      "message": "Function lacks return type hint: def execute(",
      "file": "core/tools.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 214,
      "message": "Function lacks return type hint: def execute(",
      "file": "core/tools.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 36,
      "message": "Function lacks return type hint: def _load_all_prompts(self):",
      "file": "core/prompt_manager.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 41,
      "message": "Function lacks return type hint: def _load_prompt_file(self, path: Path):",
      "file": "core/prompt_manager.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 65,
      "message": "Use logging instead of print statements",
      "file": "core/prompt_manager.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 127,
      "message": "Use logging instead of print statements",
      "file": "core/prompt_manager.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 132,
      "message": "Function lacks return type hint: def register_prompt(",
      "file": "core/prompt_manager.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 154,
      "message": "Function lacks return type hint: def save_prompt(self, name: str, template: str, metadata: Dict[str, Any] = None):",
      "file": "core/prompt_manager.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 179,
      "message": "Function lacks return type hint: def clear_cache(self):",
      "file": "core/prompt_manager.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 18,
      "message": "Function lacks return type hint: def __lt__(self, other):",
      "file": "core/context.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 40,
      "message": "Function lacks return type hint: def set_system_prompt(self, prompt: str):",
      "file": "core/context.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 44,
      "message": "Function lacks return type hint: def add_context(self, content: str, priority: int = 5, source: str = \"user\"):",
      "file": "core/context.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 117,
      "message": "Function lacks return type hint: def clear(self):",
      "file": "core/context.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 121,
      "message": "Function lacks return type hint: def remove_old_context(self, keep_recent: int = 10):",
      "file": "core/context.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 183,
      "message": "Function lacks return type hint: def add(self, key: str, value: str):",
      "file": "core/context.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 32,
      "message": "Function lacks return type hint: async def process_async(",
      "file": "core/pipeline.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 93,
      "message": "Function lacks return type hint: def add_stage(self, stage: PipelineStage):",
      "file": "core/pipeline.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 104,
      "message": "Function lacks return type hint: async def process_item_async(",
      "file": "core/pipeline.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 180,
      "message": "Function lacks return type hint: def process_item(",
      "file": "core/pipeline.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 186,
      "message": "Function lacks return type hint: async def process_batch_async(",
      "file": "core/pipeline.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 312,
      "message": "Function lacks return type hint: def reset_pipeline_stats(self):",
      "file": "core/pipeline.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 338,
      "message": "Function lacks return type hint: async def process_async(",
      "file": "core/pipeline.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 382,
      "message": "Function lacks return type hint: async def process_async(",
      "file": "core/pipeline.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 123,
      "message": "Function lacks return type hint: def register_phase_processor(self, phase: WorkflowPhase, processor: Callable):",
      "file": "core/orchestrator.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 128,
      "message": "Function lacks return type hint: def register_approval_callback(self, phase: WorkflowPhase, callback: Callable):",
      "file": "core/orchestrator.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 197,
      "message": "Function lacks return type hint: async def _process_phase(self, phase: WorkflowPhase):",
      "file": "core/orchestrator.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 296,
      "message": "Function lacks return type hint: async def _default_phase_processor(self, phase: WorkflowPhase):",
      "file": "core/orchestrator.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 373,
      "message": "Function lacks return type hint: async def _continue_from_current_phase(self):",
      "file": "core/orchestrator.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 462,
      "message": "Function lacks return type hint: async def _analyze_documents(self, workflow_data: Dict):",
      "file": "core/orchestrator.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 473,
      "message": "Function lacks return type hint: async def _process_citations(self, workflow_data: Dict):",
      "file": "core/orchestrator.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 484,
      "message": "Function lacks return type hint: async def _generate_output(self, workflow_data: Dict):",
      "file": "core/orchestrator.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 129,
      "message": "Function lacks return type hint: def subscribe(self, event_type: str, callback: Callable):",
      "file": "core/background_executor.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 135,
      "message": "Function lacks return type hint: async def publish(self, message: EventBusMessage):",
      "file": "core/background_executor.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 154,
      "message": "Use logging instead of print statements",
      "file": "core/background_executor.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 156,
      "message": "Function lacks return type hint: def get_latest_events(",
      "file": "core/background_executor.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 206,
      "message": "Function lacks return type hint: def _start_background_tasks(self):",
      "file": "core/background_executor.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 212,
      "message": "Function lacks return type hint: async def spawn_background_agent(",
      "file": "core/background_executor.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 288,
      "message": "Function lacks return type hint: async def _spawn_process_agent(self, agent_info: BackgroundAgentInfo):",
      "file": "core/background_executor.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 310,
      "message": "Function lacks return type hint: async def _spawn_thread_agent(self, agent_info: BackgroundAgentInfo):",
      "file": "core/background_executor.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 348,
      "message": "Function lacks return type hint: def update_progress(progress, message=\"\"):",
      "file": "core/background_executor.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 365,
      "message": "Function lacks return type hint: def execute_agent():",
      "file": "core/background_executor.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 433,
      "message": "Function lacks return type hint: def _execute_agent_script(",
      "file": "core/background_executor.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 477,
      "message": "Function lacks return type hint: def _execute_agent_in_thread(",
      "file": "core/background_executor.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 513,
      "message": "Function lacks return type hint: async def _monitor_agent_completion(self, agent_info: BackgroundAgentInfo, future):",
      "file": "core/background_executor.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 517,
      "message": "Function lacks return type hint: def completion_callback():",
      "file": "core/background_executor.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 561,
      "message": "Use logging instead of print statements",
      "file": "core/background_executor.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 563,
      "message": "Function lacks return type hint: async def _write_error(self, agent_info: BackgroundAgentInfo, error_message: str):",
      "file": "core/background_executor.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 623,
      "message": "Function lacks return type hint: async def _read_progress_file(",
      "file": "core/background_executor.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 635,
      "message": "Function lacks return type hint: async def _get_resource_usage(",
      "file": "core/background_executor.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 743,
      "message": "Function lacks return type hint: async def _resource_monitor_loop(self):",
      "file": "core/background_executor.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 787,
      "message": "Use logging instead of print statements",
      "file": "core/background_executor.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 789,
      "message": "Function lacks return type hint: async def _cleanup_loop(self):",
      "file": "core/background_executor.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 813,
      "message": "Use logging instead of print statements",
      "file": "core/background_executor.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 815,
      "message": "Function lacks return type hint: async def shutdown(self):",
      "file": "core/background_executor.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 859,
      "message": "Function lacks return type hint: async def spawn_background_task(",
      "file": "core/background_executor.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 898,
      "message": "Function lacks return type hint: async def wait_for_background_completion(",
      "file": "core/background_executor.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 929,
      "message": "Function lacks return type hint: async def terminate_background_agent(",
      "file": "core/background_executor.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 116,
      "message": "Function lacks return type hint: def decompose(",
      "file": "core/hierarchical_orchestrator.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 193,
      "message": "Function lacks return type hint: def _determine_level(",
      "file": "core/hierarchical_orchestrator.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 275,
      "message": "Function lacks return type hint: def distribute(",
      "file": "core/hierarchical_orchestrator.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 289,
      "message": "Function lacks return type hint: def _round_robin(",
      "file": "core/hierarchical_orchestrator.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 301,
      "message": "Function lacks return type hint: def _least_loaded(",
      "file": "core/hierarchical_orchestrator.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 315,
      "message": "Function lacks return type hint: def _capability_based(",
      "file": "core/hierarchical_orchestrator.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 329,
      "message": "Function lacks return type hint: def _priority_based(",
      "file": "core/hierarchical_orchestrator.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 356,
      "message": "Function lacks return type hint: def _find_best_capability_match(",
      "file": "core/hierarchical_orchestrator.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 435,
      "message": "Function lacks return type hint: async def orchestrate_complex_task(",
      "file": "core/hierarchical_orchestrator.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 508,
      "message": "Function lacks return type hint: async def _store_task_hierarchy(self, task: OrchestrationTask):",
      "file": "core/hierarchical_orchestrator.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 519,
      "message": "Function lacks return type hint: async def _create_agent_hierarchy(",
      "file": "core/hierarchical_orchestrator.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 559,
      "message": "Function lacks return type hint: async def _spawn_agent(",
      "file": "core/hierarchical_orchestrator.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 583,
      "message": "Function lacks return type hint: def count_recursive(t: OrchestrationTask):",
      "file": "core/hierarchical_orchestrator.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 601,
      "message": "Function lacks return type hint: async def _execute_orchestration(",
      "file": "core/hierarchical_orchestrator.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 615,
      "message": "Function lacks return type hint: async def _execute_mapreduce(",
      "file": "core/hierarchical_orchestrator.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 637,
      "message": "Function lacks return type hint: async def _execute_pipeline(",
      "file": "core/hierarchical_orchestrator.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 657,
      "message": "Function lacks return type hint: async def _execute_fork_join(",
      "file": "core/hierarchical_orchestrator.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 681,
      "message": "Function lacks return type hint: async def _execute_scatter_gather(",
      "file": "core/hierarchical_orchestrator.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 700,
      "message": "Function lacks return type hint: async def _execute_saga(",
      "file": "core/hierarchical_orchestrator.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 737,
      "message": "Function lacks return type hint: async def _execute_single_task(",
      "file": "core/hierarchical_orchestrator.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 792,
      "message": "Function lacks return type hint: def _create_compensation_action(",
      "file": "core/hierarchical_orchestrator.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 797,
      "message": "Function lacks return type hint: async def compensate():",
      "file": "core/hierarchical_orchestrator.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 804,
      "message": "Function lacks return type hint: async def _aggregate_results(",
      "file": "core/hierarchical_orchestrator.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 856,
      "message": "Function lacks return type hint: def collect_patterns(t: OrchestrationTask):",
      "file": "core/hierarchical_orchestrator.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 45,
      "message": "Use logging instead of print statements",
      "file": "core/agent_executor.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 56,
      "message": "Use logging instead of print statements",
      "file": "core/agent_executor.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 57,
      "message": "Use logging instead of print statements",
      "file": "core/agent_executor.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 67,
      "message": "Use logging instead of print statements",
      "file": "core/agent_executor.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 68,
      "message": "Use logging instead of print statements",
      "file": "core/agent_executor.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 74,
      "message": "Use logging instead of print statements",
      "file": "core/agent_executor.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 76,
      "message": "Use logging instead of print statements",
      "file": "core/agent_executor.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 78,
      "message": "Use logging instead of print statements",
      "file": "core/agent_executor.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 79,
      "message": "Use logging instead of print statements",
      "file": "core/agent_executor.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 92,
      "message": "Use logging instead of print statements",
      "file": "core/agent_executor.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 93,
      "message": "Use logging instead of print statements",
      "file": "core/agent_executor.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 97,
      "message": "Use logging instead of print statements",
      "file": "core/agent_executor.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 108,
      "message": "Use logging instead of print statements",
      "file": "core/agent_executor.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 110,
      "message": "Use logging instead of print statements",
      "file": "core/agent_executor.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 116,
      "message": "Use logging instead of print statements",
      "file": "core/agent_executor.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 118,
      "message": "Use logging instead of print statements",
      "file": "core/agent_executor.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 120,
      "message": "Use logging instead of print statements",
      "file": "core/agent_executor.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 135,
      "message": "Use logging instead of print statements",
      "file": "core/agent_executor.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 136,
      "message": "Use logging instead of print statements",
      "file": "core/agent_executor.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 147,
      "message": "Use logging instead of print statements",
      "file": "core/agent_executor.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 149,
      "message": "Use logging instead of print statements",
      "file": "core/agent_executor.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 150,
      "message": "Use logging instead of print statements",
      "file": "core/agent_executor.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 158,
      "message": "Use logging instead of print statements",
      "file": "core/agent_executor.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 160,
      "message": "Use logging instead of print statements",
      "file": "core/agent_executor.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 162,
      "message": "Use logging instead of print statements",
      "file": "core/agent_executor.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 167,
      "message": "Use logging instead of print statements",
      "file": "core/agent_executor.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 179,
      "message": "Use logging instead of print statements",
      "file": "core/agent_executor.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 186,
      "message": "Use logging instead of print statements",
      "file": "core/agent_executor.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 192,
      "message": "Use logging instead of print statements",
      "file": "core/agent_executor.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 194,
      "message": "Use logging instead of print statements",
      "file": "core/agent_executor.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 198,
      "message": "Use logging instead of print statements",
      "file": "core/agent_executor.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 202,
      "message": "Use logging instead of print statements",
      "file": "core/agent_executor.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 203,
      "message": "Use logging instead of print statements",
      "file": "core/agent_executor.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 209,
      "message": "Use logging instead of print statements",
      "file": "core/agent_executor.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 213,
      "message": "Use logging instead of print statements",
      "file": "core/agent_executor.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 144,
      "message": "Function lacks return type hint: def _load_builtin_primers(self):",
      "file": "core/dynamic_primer.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 160,
      "message": "Function lacks return type hint: def _load_template_files(self):",
      "file": "core/dynamic_primer.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 168,
      "message": "Function lacks return type hint: def register_primer(self, name: str, primer_func: Callable):",
      "file": "core/dynamic_primer.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 254,
      "message": "Function lacks return type hint: def register_primer_chain(self, name: str, primer_sequence: List[str]):",
      "file": "core/dynamic_primer.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 268,
      "message": "Use logging instead of print statements",
      "file": "core/dynamic_primer.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 281,
      "message": "Use logging instead of print statements",
      "file": "core/dynamic_primer.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 284,
      "message": "Use logging instead of print statements",
      "file": "core/dynamic_primer.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 307,
      "message": "Function lacks return type hint: def _create_primer_context(",
      "file": "core/dynamic_primer.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 327,
      "message": "Function lacks return type hint: def _track_primer_performance(self, primer_name: str, execution_time: float):",
      "file": "core/dynamic_primer.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 348,
      "message": "Function lacks return type hint: async def _prime_feature_development(",
      "file": "core/dynamic_primer.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 417,
      "message": "Function lacks return type hint: async def _prime_bug_fix(",
      "file": "core/dynamic_primer.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 480,
      "message": "Function lacks return type hint: async def _prime_refactoring(",
      "file": "core/dynamic_primer.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 549,
      "message": "Function lacks return type hint: async def _prime_testing(",
      "file": "core/dynamic_primer.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 617,
      "message": "Function lacks return type hint: async def _prime_documentation(",
      "file": "core/dynamic_primer.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 686,
      "message": "Function lacks return type hint: async def _prime_research(",
      "file": "core/dynamic_primer.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 752,
      "message": "Function lacks return type hint: async def _prime_optimization(",
      "file": "core/dynamic_primer.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 820,
      "message": "Function lacks return type hint: async def _prime_migration(",
      "file": "core/dynamic_primer.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 1053,
      "message": "Function lacks return type hint: def _load_template_files(self):",
      "file": "core/dynamic_primer.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 1077,
      "message": "Use logging instead of print statements",
      "file": "core/dynamic_primer.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 159,
      "message": "Function lacks return type hint: async def _execute_autonomous_workflow(",
      "file": "core/autonomous.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 255,
      "message": "Function lacks return type hint: async def _analyze_feature_requirements(",
      "file": "core/autonomous.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 317,
      "message": "Function lacks return type hint: async def _implement_feature_service(",
      "file": "core/autonomous.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 360,
      "message": "Function lacks return type hint: async def _generate_feature_tests(",
      "file": "core/autonomous.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 403,
      "message": "Function lacks return type hint: async def _generate_feature_documentation(",
      "file": "core/autonomous.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 441,
      "message": "Function lacks return type hint: async def _integrate_feature(",
      "file": "core/autonomous.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 480,
      "message": "Function lacks return type hint: async def _validate_complete_implementation(",
      "file": "core/autonomous.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 552,
      "message": "Function lacks return type hint: def _identify_schema_requirements(",
      "file": "core/autonomous.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 562,
      "message": "Function lacks return type hint: def _design_service_architecture(",
      "file": "core/autonomous.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 583,
      "message": "Function lacks return type hint: def _log_implementation_event(",
      "file": "core/autonomous.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 597,
      "message": "Function lacks return type hint: def _generate_schema_content(",
      "file": "core/autonomous.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 617,
      "message": "Function lacks return type hint: def _generate_service_content(",
      "file": "core/autonomous.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 646,
      "message": "Function lacks return type hint: def _generate_test_content(",
      "file": "core/autonomous.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 667,
      "message": "Function lacks return type hint: def service(self):",
      "file": "core/autonomous.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 672,
      "message": "Function lacks return type hint: async def test_basic_functionality(self, service):",
      "file": "core/autonomous.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 678,
      "message": "Function lacks return type hint: async def test_error_handling(self, service):",
      "file": "core/autonomous.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 684,
      "message": "Function lacks return type hint: def _generate_api_documentation(",
      "file": "core/autonomous.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 690,
      "message": "Function lacks return type hint: def _generate_usage_documentation(",
      "file": "core/autonomous.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 712,
      "message": "Function lacks return type hint: def _calculate_test_coverage(",
      "file": "core/autonomous.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 767,
      "message": "Function lacks return type hint: async def demo_autonomous_implementation():",
      "file": "core/autonomous.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 778,
      "message": "Use logging instead of print statements",
      "file": "core/autonomous.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 781,
      "message": "Use logging instead of print statements",
      "file": "core/autonomous.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 782,
      "message": "Use logging instead of print statements",
      "file": "core/autonomous.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 96,
      "message": "Function lacks return type hint: def pause(self):",
      "file": "core/agent.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 114,
      "message": "Function lacks return type hint: def save_checkpoint(self):",
      "file": "core/agent.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 178,
      "message": "Function lacks return type hint: def add_context(self, content: str, priority: int = 5):",
      "file": "core/agent.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 242,
      "message": "Function lacks return type hint: def set_progress(self, progress: float, stage: str = None):",
      "file": "core/agent.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 249,
      "message": "Function lacks return type hint: def increment_progress(self, increment: float = None):",
      "file": "core/agent.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 255,
      "message": "Function lacks return type hint: def set_workflow_stages(self, stages: List[str]):",
      "file": "core/agent.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 264,
      "message": "Function lacks return type hint: def advance_stage(self):",
      "file": "core/agent.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 279,
      "message": "Function lacks return type hint: def add_file_modified(self, file_path: str):",
      "file": "core/agent.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 285,
      "message": "Function lacks return type hint: def set_git_context(self, branch: str = None, issue_number: int = None):",
      "file": "core/agent.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 293,
      "message": "Function lacks return type hint: def handle_error(self, error: Exception, operation: str = None):",
      "file": "core/agent.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 314,
      "message": "Function lacks return type hint: def clear_error(self):",
      "file": "core/agent.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 321,
      "message": "Function lacks return type hint: def _load_agent_prompt(self):",
      "file": "core/agent.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 349,
      "message": "Function lacks return type hint: def set_prompt_variables(self, **variables):",
      "file": "core/agent.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 135,
      "message": "Function lacks return type hint: def remove_redundant_context(",
      "file": "core/context_optimizer.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 152,
      "message": "Function lacks return type hint: def summarize_verbose_sections(",
      "file": "core/context_optimizer.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 174,
      "message": "Function lacks return type hint: def extract_relevant_only(",
      "file": "core/context_optimizer.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 188,
      "message": "Function lacks return type hint: def compress_conversation_history(",
      "file": "core/context_optimizer.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 207,
      "message": "Function lacks return type hint: def identify_delegatable_tasks(",
      "file": "core/context_optimizer.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 239,
      "message": "Function lacks return type hint: def remove_delegated_content(",
      "file": "core/context_optimizer.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 528,
      "message": "Function lacks return type hint: async def spawn_specialized_agent(",
      "file": "core/context_optimizer.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 540,
      "message": "Function lacks return type hint: async def process_with_optimized_context(",
      "file": "core/context_optimizer.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 58,
      "message": "Function lacks return type hint: def set_context(self, context: Dict[str, Any]):",
      "file": "core/base.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 67,
      "message": "Function lacks return type hint: def set_progress(self, progress: float, phase: str = None):",
      "file": "core/base.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 74,
      "message": "Function lacks return type hint: def log_info(self, message: str):",
      "file": "core/base.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 83,
      "message": "Use logging instead of print statements",
      "file": "core/base.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 85,
      "message": "Function lacks return type hint: def log_error(self, message: str, error: Exception = None):",
      "file": "core/base.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 95,
      "message": "Use logging instead of print statements",
      "file": "core/base.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 108,
      "message": "Function lacks return type hint: async def restore_checkpoint(self, checkpoint_id: str):",
      "file": "core/base.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 121,
      "message": "Function lacks return type hint: async def pause(self):",
      "file": "core/base.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 127,
      "message": "Function lacks return type hint: async def resume(self):",
      "file": "core/base.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 133,
      "message": "Function lacks return type hint: async def persist_state(self):",
      "file": "core/base.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 215,
      "message": "Function lacks return type hint: def append_action(",
      "file": "core/context_bundles.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 244,
      "message": "Function lacks return type hint: def _persist_action(self, action: TimestampedAction):",
      "file": "core/context_bundles.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 251,
      "message": "Function lacks return type hint: def update_state(self, state_updates: Dict[str, Any]):",
      "file": "core/context_bundles.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 265,
      "message": "Function lacks return type hint: def create_checkpoint(",
      "file": "core/context_bundles.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 352,
      "message": "Use logging instead of print statements",
      "file": "core/context_bundles.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 387,
      "message": "Use logging instead of print statements",
      "file": "core/context_bundles.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 419,
      "message": "Use logging instead of print statements",
      "file": "core/context_bundles.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 422,
      "message": "Function lacks return type hint: def get_action_history(",
      "file": "core/context_bundles.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 502,
      "message": "Function lacks return type hint: def cleanup_old_bundles(self, max_age_hours: int = 24):",
      "file": "core/context_bundles.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 596,
      "message": "Function lacks return type hint: async def create_handoff(",
      "file": "core/context_bundles.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 7,
      "message": "Function lacks return type hint: def _prime_feature_development(variables):",
      "file": "core/simple_primers.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 35,
      "message": "Function lacks return type hint: def _prime_bug_fix(variables):",
      "file": "core/simple_primers.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 60,
      "message": "Function lacks return type hint: def _prime_refactoring(variables):",
      "file": "core/simple_primers.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 78,
      "message": "Function lacks return type hint: def _prime_testing(variables):",
      "file": "core/simple_primers.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 103,
      "message": "Function lacks return type hint: def _prime_documentation(variables):",
      "file": "core/simple_primers.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 123,
      "message": "Function lacks return type hint: def _prime_research(variables):",
      "file": "core/simple_primers.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 148,
      "message": "Function lacks return type hint: def _prime_optimization(variables):",
      "file": "core/simple_primers.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 173,
      "message": "Function lacks return type hint: def _prime_migration(variables):",
      "file": "core/simple_primers.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 27,
      "message": "Function lacks return type hint: def update(self, tool_response: \"ToolResponse\"):",
      "file": "core/state.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 67,
      "message": "Function lacks return type hint: def set(self, key: str, value: Any, state_type: str = \"business\"):",
      "file": "core/state.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 114,
      "message": "Function lacks return type hint: def clear_errors(self):",
      "file": "core/state.py"
    },
    {
      "type": "missing_docstring",
      "severity": "low",
      "line": 1,
      "message": "Module lacks docstring",
      "file": "bin/event.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 18,
      "message": "Function lacks return type hint: def cli():",
      "file": "bin/event.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 27,
      "message": "Function lacks return type hint: def emit(event_type, data, source):",
      "file": "bin/event.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 43,
      "message": "Function lacks return type hint: def list():",
      "file": "bin/event.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 58,
      "message": "Function lacks return type hint: def process():",
      "file": "bin/event.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 67,
      "message": "Function lacks return type hint: def history(limit):",
      "file": "bin/event.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 83,
      "message": "Function lacks return type hint: def cleanup(days):",
      "file": "bin/event.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 94,
      "message": "Function lacks return type hint: def watch(path, pattern, event):",
      "file": "bin/event.py"
    },
    {
      "type": "missing_docstring",
      "severity": "low",
      "line": 1,
      "message": "Module lacks docstring",
      "file": "bin/__init__.py"
    },
    {
      "type": "missing_docstring",
      "severity": "low",
      "line": 1,
      "message": "Module lacks docstring",
      "file": "bin/agent.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 21,
      "message": "Function lacks return type hint: def main():",
      "file": "bin/agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 104,
      "message": "Use logging instead of print statements",
      "file": "bin/agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 112,
      "message": "Use logging instead of print statements",
      "file": "bin/agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 116,
      "message": "Use logging instead of print statements",
      "file": "bin/agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 119,
      "message": "Use logging instead of print statements",
      "file": "bin/agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 121,
      "message": "Use logging instead of print statements",
      "file": "bin/agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 125,
      "message": "Use logging instead of print statements",
      "file": "bin/agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 128,
      "message": "Use logging instead of print statements",
      "file": "bin/agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 130,
      "message": "Use logging instead of print statements",
      "file": "bin/agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 136,
      "message": "Use logging instead of print statements",
      "file": "bin/agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 140,
      "message": "Use logging instead of print statements",
      "file": "bin/agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 143,
      "message": "Use logging instead of print statements",
      "file": "bin/agent.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 31,
      "message": "Function lacks return type hint: def test_initialization(self):",
      "file": "tests/test_hierarchical_orchestrator.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 39,
      "message": "Function lacks return type hint: def test_complexity_analysis_atomic(self):",
      "file": "tests/test_hierarchical_orchestrator.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 49,
      "message": "Function lacks return type hint: def test_complexity_analysis_simple(self):",
      "file": "tests/test_hierarchical_orchestrator.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 64,
      "message": "Function lacks return type hint: def test_complexity_analysis_moderate(self):",
      "file": "tests/test_hierarchical_orchestrator.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 79,
      "message": "Function lacks return type hint: def test_complexity_analysis_complex(self):",
      "file": "tests/test_hierarchical_orchestrator.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 94,
      "message": "Function lacks return type hint: def test_complexity_analysis_enterprise(self):",
      "file": "tests/test_hierarchical_orchestrator.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 109,
      "message": "Function lacks return type hint: def test_level_determination(self):",
      "file": "tests/test_hierarchical_orchestrator.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 126,
      "message": "Function lacks return type hint: def test_pattern_determination(self):",
      "file": "tests/test_hierarchical_orchestrator.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 152,
      "message": "Function lacks return type hint: def test_task_decomposition(self):",
      "file": "tests/test_hierarchical_orchestrator.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 165,
      "message": "Function lacks return type hint: def test_decomposition_strategies(self):",
      "file": "tests/test_hierarchical_orchestrator.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 197,
      "message": "Function lacks return type hint: def test_initialization(self):",
      "file": "tests/test_hierarchical_orchestrator.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 205,
      "message": "Function lacks return type hint: def test_round_robin_distribution(self):",
      "file": "tests/test_hierarchical_orchestrator.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 232,
      "message": "Function lacks return type hint: def test_least_loaded_distribution(self):",
      "file": "tests/test_hierarchical_orchestrator.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 256,
      "message": "Function lacks return type hint: def test_capability_based_distribution(self):",
      "file": "tests/test_hierarchical_orchestrator.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 289,
      "message": "Function lacks return type hint: def test_distribute_with_strategy(self):",
      "file": "tests/test_hierarchical_orchestrator.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 312,
      "message": "Function lacks return type hint: def test_initialization(self):",
      "file": "tests/test_hierarchical_orchestrator.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 321,
      "message": "Function lacks return type hint: def test_initialization_with_custom_params(self):",
      "file": "tests/test_hierarchical_orchestrator.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 332,
      "message": "Function lacks return type hint: async def test_simple_task_orchestration(self):",
      "file": "tests/test_hierarchical_orchestrator.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 345,
      "message": "Function lacks return type hint: async def test_complex_task_orchestration(self):",
      "file": "tests/test_hierarchical_orchestrator.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 362,
      "message": "Function lacks return type hint: async def test_orchestration_with_custom_id(self):",
      "file": "tests/test_hierarchical_orchestrator.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 375,
      "message": "Function lacks return type hint: async def test_agent_hierarchy_creation(self):",
      "file": "tests/test_hierarchical_orchestrator.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 394,
      "message": "Function lacks return type hint: async def test_spawn_agent(self):",
      "file": "tests/test_hierarchical_orchestrator.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 408,
      "message": "Function lacks return type hint: def test_count_agents_needed(self):",
      "file": "tests/test_hierarchical_orchestrator.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 438,
      "message": "Function lacks return type hint: async def test_execute_single_task(self):",
      "file": "tests/test_hierarchical_orchestrator.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 456,
      "message": "Function lacks return type hint: async def test_coordination_patterns_execution(self):",
      "file": "tests/test_hierarchical_orchestrator.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 483,
      "message": "Function lacks return type hint: def test_calculate_hierarchy_depth(self):",
      "file": "tests/test_hierarchical_orchestrator.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 521,
      "message": "Function lacks return type hint: def test_coordination_overhead_calculation(self):",
      "file": "tests/test_hierarchical_orchestrator.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 541,
      "message": "Function lacks return type hint: async def test_orchestration_status_tracking(self):",
      "file": "tests/test_hierarchical_orchestrator.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 557,
      "message": "Function lacks return type hint: async def test_orchestration_cancellation(self):",
      "file": "tests/test_hierarchical_orchestrator.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 587,
      "message": "Function lacks return type hint: async def test_execute_task_tool_interface(self):",
      "file": "tests/test_hierarchical_orchestrator.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 599,
      "message": "Function lacks return type hint: def test_register_tools(self):",
      "file": "tests/test_hierarchical_orchestrator.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 619,
      "message": "Function lacks return type hint: def test_orchestration_task_creation(self):",
      "file": "tests/test_hierarchical_orchestrator.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 637,
      "message": "Function lacks return type hint: def test_agent_info_creation(self):",
      "file": "tests/test_hierarchical_orchestrator.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 652,
      "message": "Function lacks return type hint: def test_orchestration_result_creation(self):",
      "file": "tests/test_hierarchical_orchestrator.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 33,
      "message": "Function lacks return type hint: def test_create_timestamped_action(self):",
      "file": "tests/test_context_bundles.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 50,
      "message": "Function lacks return type hint: def test_action_serialization(self):",
      "file": "tests/test_context_bundles.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 75,
      "message": "Function lacks return type hint: def test_create_checkpoint(self):",
      "file": "tests/test_context_bundles.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 90,
      "message": "Function lacks return type hint: def test_checkpoint_serialization(self):",
      "file": "tests/test_context_bundles.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 112,
      "message": "Function lacks return type hint: def sample_bundle(self):",
      "file": "tests/test_context_bundles.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 156,
      "message": "Function lacks return type hint: def test_bundle_creation(self, sample_bundle):",
      "file": "tests/test_context_bundles.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 164,
      "message": "Function lacks return type hint: def test_bundle_serialization(self, sample_bundle):",
      "file": "tests/test_context_bundles.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 179,
      "message": "Function lacks return type hint: def test_bundle_compression(self, sample_bundle):",
      "file": "tests/test_context_bundles.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 192,
      "message": "Function lacks return type hint: def test_bundle_size_calculation(self, sample_bundle):",
      "file": "tests/test_context_bundles.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 206,
      "message": "Function lacks return type hint: def manager(self):",
      "file": "tests/test_context_bundles.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 211,
      "message": "Function lacks return type hint: def filesystem_manager(self):",
      "file": "tests/test_context_bundles.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 218,
      "message": "Function lacks return type hint: def init_with_temp(self, session_id=None, storage_backend=\"memory\"):",
      "file": "tests/test_context_bundles.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 245,
      "message": "Function lacks return type hint: def test_session_id_generation(self):",
      "file": "tests/test_context_bundles.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 254,
      "message": "Function lacks return type hint: def test_append_only_logging(self, manager):",
      "file": "tests/test_context_bundles.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 274,
      "message": "Function lacks return type hint: def test_state_updates(self, manager):",
      "file": "tests/test_context_bundles.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 296,
      "message": "Function lacks return type hint: def test_checkpoint_creation(self, manager):",
      "file": "tests/test_context_bundles.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 330,
      "message": "Function lacks return type hint: def test_bundle_snapshot_creation(self, manager):",
      "file": "tests/test_context_bundles.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 347,
      "message": "Function lacks return type hint: async def test_memory_storage(self, manager):",
      "file": "tests/test_context_bundles.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 363,
      "message": "Function lacks return type hint: def test_context_remounting(self, manager):",
      "file": "tests/test_context_bundles.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 404,
      "message": "Function lacks return type hint: def test_action_history_filtering(self, manager):",
      "file": "tests/test_context_bundles.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 433,
      "message": "Function lacks return type hint: def test_checkpoint_restoration(self, manager):",
      "file": "tests/test_context_bundles.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 459,
      "message": "Function lacks return type hint: def test_bundle_statistics(self, manager):",
      "file": "tests/test_context_bundles.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 499,
      "message": "Function lacks return type hint: def agent(self):",
      "file": "tests/test_context_bundles.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 504,
      "message": "Function lacks return type hint: async def test_task_execution_with_bundles(self, agent):",
      "file": "tests/test_context_bundles.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 527,
      "message": "Function lacks return type hint: async def test_handoff_creation(self, agent):",
      "file": "tests/test_context_bundles.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 560,
      "message": "Function lacks return type hint: async def test_handoff_reception(self, agent):",
      "file": "tests/test_context_bundles.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 597,
      "message": "Function lacks return type hint: def test_handoff_summary(self, agent):",
      "file": "tests/test_context_bundles.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 623,
      "message": "Function lacks return type hint: def test_large_bundle_performance(self):",
      "file": "tests/test_context_bundles.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 658,
      "message": "Function lacks return type hint: def test_compression_efficiency(self):",
      "file": "tests/test_context_bundles.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 26,
      "message": "Function lacks return type hint: def optimizer(self):",
      "file": "tests/test_context_optimizer.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 31,
      "message": "Function lacks return type hint: def sample_context(self):",
      "file": "tests/test_context_optimizer.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 48,
      "message": "Function lacks return type hint: def test_remove_redundant_context(self, optimizer, sample_context):",
      "file": "tests/test_context_optimizer.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 64,
      "message": "Function lacks return type hint: def test_summarize_verbose_sections(self, optimizer, sample_context):",
      "file": "tests/test_context_optimizer.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 81,
      "message": "Function lacks return type hint: def test_extract_relevant_only(self, optimizer, sample_context):",
      "file": "tests/test_context_optimizer.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 96,
      "message": "Function lacks return type hint: def test_compress_conversation_history(self, optimizer):",
      "file": "tests/test_context_optimizer.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 112,
      "message": "Function lacks return type hint: def test_optimize_context_achieves_reduction(self, optimizer, sample_context):",
      "file": "tests/test_context_optimizer.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 128,
      "message": "Function lacks return type hint: def test_delegation_triggered_at_threshold(self, optimizer):",
      "file": "tests/test_context_optimizer.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 154,
      "message": "Function lacks return type hint: def test_identify_delegatable_tasks(self, optimizer, sample_context):",
      "file": "tests/test_context_optimizer.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 167,
      "message": "Function lacks return type hint: def test_token_estimation(self, optimizer):",
      "file": "tests/test_context_optimizer.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 177,
      "message": "Function lacks return type hint: def test_cost_savings_calculation(self, optimizer):",
      "file": "tests/test_context_optimizer.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 189,
      "message": "Function lacks return type hint: def test_keyword_extraction(self, optimizer):",
      "file": "tests/test_context_optimizer.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 204,
      "message": "Function lacks return type hint: def test_relevance_checking(self, optimizer):",
      "file": "tests/test_context_optimizer.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 218,
      "message": "Function lacks return type hint: def test_session_id_generation(self, optimizer):",
      "file": "tests/test_context_optimizer.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 228,
      "message": "Function lacks return type hint: def test_optimization_report(self, optimizer, sample_context):",
      "file": "tests/test_context_optimizer.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 247,
      "message": "Function lacks return type hint: def test_agent_recommendation(self, optimizer):",
      "file": "tests/test_context_optimizer.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 269,
      "message": "Function lacks return type hint: def test_specialized_knowledge_detection(self, optimizer):",
      "file": "tests/test_context_optimizer.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 276,
      "message": "Function lacks return type hint: def test_important_message_extraction(self, optimizer):",
      "file": "tests/test_context_optimizer.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 301,
      "message": "Function lacks return type hint: def agent(self):",
      "file": "tests/test_context_optimizer.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 306,
      "message": "Function lacks return type hint: async def test_execute_task_with_optimization(self, agent):",
      "file": "tests/test_context_optimizer.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 332,
      "message": "Function lacks return type hint: async def test_delegation_handling(self, agent):",
      "file": "tests/test_context_optimizer.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 358,
      "message": "Function lacks return type hint: async def test_specialized_agent_spawning(self, agent):",
      "file": "tests/test_context_optimizer.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 374,
      "message": "Function lacks return type hint: def test_end_to_end_optimization(self):",
      "file": "tests/test_context_optimizer.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 398,
      "message": "Function lacks return type hint: \"code_samples\": \"def example():\\n    pass\\n\" * 20,",
      "file": "tests/test_context_optimizer.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 422,
      "message": "Function lacks return type hint: def test_performance_benchmark(self):",
      "file": "tests/test_context_optimizer.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 23,
      "message": "Function lacks return type hint: def test_initialization(self):",
      "file": "tests/test_dynamic_primer.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 38,
      "message": "Function lacks return type hint: def test_register_custom_primer(self):",
      "file": "tests/test_dynamic_primer.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 42,
      "message": "Function lacks return type hint: def custom_primer(variables):",
      "file": "tests/test_dynamic_primer.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 52,
      "message": "Function lacks return type hint: def test_feature_development_primer(self):",
      "file": "tests/test_dynamic_primer.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 74,
      "message": "Function lacks return type hint: def test_bug_fix_primer(self):",
      "file": "tests/test_dynamic_primer.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 93,
      "message": "Function lacks return type hint: def test_refactoring_primer(self):",
      "file": "tests/test_dynamic_primer.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 112,
      "message": "Function lacks return type hint: def test_testing_primer(self):",
      "file": "tests/test_dynamic_primer.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 131,
      "message": "Function lacks return type hint: def test_documentation_primer(self):",
      "file": "tests/test_dynamic_primer.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 150,
      "message": "Function lacks return type hint: def test_research_primer(self):",
      "file": "tests/test_dynamic_primer.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 172,
      "message": "Function lacks return type hint: def test_optimization_primer(self):",
      "file": "tests/test_dynamic_primer.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 194,
      "message": "Function lacks return type hint: def test_migration_primer(self):",
      "file": "tests/test_dynamic_primer.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 213,
      "message": "Function lacks return type hint: def test_invalid_primer_type(self):",
      "file": "tests/test_dynamic_primer.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 223,
      "message": "Function lacks return type hint: def test_primer_with_missing_template(self):",
      "file": "tests/test_dynamic_primer.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 235,
      "message": "Function lacks return type hint: def test_template_rendering_error(self):",
      "file": "tests/test_dynamic_primer.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 256,
      "message": "Function lacks return type hint: def test_performance_tracking(self):",
      "file": "tests/test_dynamic_primer.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 265,
      "message": "Function lacks return type hint: def test_empty_variables(self):",
      "file": "tests/test_dynamic_primer.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 274,
      "message": "Function lacks return type hint: def test_complex_variable_types(self):",
      "file": "tests/test_dynamic_primer.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 291,
      "message": "Function lacks return type hint: def test_primer_chaining(self):",
      "file": "tests/test_dynamic_primer.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 319,
      "message": "Function lacks return type hint: def test_template_variable_validation(self):",
      "file": "tests/test_dynamic_primer.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 336,
      "message": "Function lacks return type hint: async def test_concurrent_primer_generation(self):",
      "file": "tests/test_dynamic_primer.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 342,
      "message": "Function lacks return type hint: async def generate_primer(primer_type, task_id):",
      "file": "tests/test_dynamic_primer.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 358,
      "message": "Function lacks return type hint: def test_primer_result_serialization(self):",
      "file": "tests/test_dynamic_primer.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 382,
      "message": "Function lacks return type hint: def test_primer_registry_immutability(self):",
      "file": "tests/test_dynamic_primer.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 403,
      "message": "Function lacks return type hint: def test_large_variable_handling(self):",
      "file": "tests/test_dynamic_primer.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 13,
      "message": "Function lacks return type hint: def test_imports_work(self):",
      "file": "tests/test_quick_validation.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 24,
      "message": "Function lacks return type hint: def test_orchestrator_basic_function(self):",
      "file": "tests/test_quick_validation.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 32,
      "message": "Function lacks return type hint: def test_context_manager_efficiency(self):",
      "file": "tests/test_quick_validation.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 42,
      "message": "Function lacks return type hint: def test_agent_executor_basic(self):",
      "file": "tests/test_quick_validation.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 51,
      "message": "Function lacks return type hint: def test_marketplace_imports(self):",
      "file": "tests/test_quick_validation.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 32,
      "message": "Function lacks return type hint: def test_task_slice_creation(self):",
      "file": "tests/test_orchestration_patterns.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 42,
      "message": "Function lacks return type hint: def test_task_slice_with_metadata(self):",
      "file": "tests/test_orchestration_patterns.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 61,
      "message": "Function lacks return type hint: def test_pattern_result_creation(self):",
      "file": "tests/test_orchestration_patterns.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 85,
      "message": "Function lacks return type hint: def test_initialization(self):",
      "file": "tests/test_orchestration_patterns.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 94,
      "message": "Function lacks return type hint: async def test_mapreduce_execution_success(self):",
      "file": "tests/test_orchestration_patterns.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 117,
      "message": "Function lacks return type hint: async def test_mapreduce_empty_input(self):",
      "file": "tests/test_orchestration_patterns.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 126,
      "message": "Function lacks return type hint: def test_slice_distribution(self):",
      "file": "tests/test_orchestration_patterns.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 138,
      "message": "Function lacks return type hint: def test_reduction_type_detection(self):",
      "file": "tests/test_orchestration_patterns.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 163,
      "message": "Function lacks return type hint: async def test_reduce_phase_numeric(self):",
      "file": "tests/test_orchestration_patterns.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 174,
      "message": "Function lacks return type hint: async def test_reduce_phase_strings(self):",
      "file": "tests/test_orchestration_patterns.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 184,
      "message": "Function lacks return type hint: def test_custom_reducer_registration(self):",
      "file": "tests/test_orchestration_patterns.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 188,
      "message": "Function lacks return type hint: def custom_reducer(results):",
      "file": "tests/test_orchestration_patterns.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 196,
      "message": "Function lacks return type hint: def test_performance_metrics(self):",
      "file": "tests/test_orchestration_patterns.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 220,
      "message": "Function lacks return type hint: def test_initialization(self):",
      "file": "tests/test_orchestration_patterns.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 228,
      "message": "Function lacks return type hint: async def test_pipeline_execution_success(self):",
      "file": "tests/test_orchestration_patterns.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 243,
      "message": "Function lacks return type hint: async def test_pipeline_empty_agents(self):",
      "file": "tests/test_orchestration_patterns.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 256,
      "message": "Function lacks return type hint: async def test_pipeline_stage_processing(self):",
      "file": "tests/test_orchestration_patterns.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 281,
      "message": "Function lacks return type hint: def test_stage_processor_registration(self):",
      "file": "tests/test_orchestration_patterns.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 285,
      "message": "Function lacks return type hint: async def custom_processor(data):",
      "file": "tests/test_orchestration_patterns.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 297,
      "message": "Function lacks return type hint: def test_initialization(self):",
      "file": "tests/test_orchestration_patterns.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 305,
      "message": "Function lacks return type hint: async def test_forkjoin_execution_success(self):",
      "file": "tests/test_orchestration_patterns.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 323,
      "message": "Function lacks return type hint: async def test_fork_task_execution(self):",
      "file": "tests/test_orchestration_patterns.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 336,
      "message": "Function lacks return type hint: async def test_join_results(self):",
      "file": "tests/test_orchestration_patterns.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 354,
      "message": "Function lacks return type hint: async def test_join_all_failed(self):",
      "file": "tests/test_orchestration_patterns.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 363,
      "message": "Function lacks return type hint: def test_join_strategy_registration(self):",
      "file": "tests/test_orchestration_patterns.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 367,
      "message": "Function lacks return type hint: async def custom_joiner(results):",
      "file": "tests/test_orchestration_patterns.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 378,
      "message": "Function lacks return type hint: def test_initialization(self):",
      "file": "tests/test_orchestration_patterns.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 386,
      "message": "Function lacks return type hint: async def test_scatter_gather_execution(self):",
      "file": "tests/test_orchestration_patterns.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 401,
      "message": "Function lacks return type hint: async def test_scatter_task_execution(self):",
      "file": "tests/test_orchestration_patterns.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 414,
      "message": "Function lacks return type hint: async def test_gather_responses(self):",
      "file": "tests/test_orchestration_patterns.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 435,
      "message": "Function lacks return type hint: def test_response_analysis(self):",
      "file": "tests/test_orchestration_patterns.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 452,
      "message": "Function lacks return type hint: def test_gather_strategy_registration(self):",
      "file": "tests/test_orchestration_patterns.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 456,
      "message": "Function lacks return type hint: async def custom_gatherer(responses):",
      "file": "tests/test_orchestration_patterns.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 467,
      "message": "Function lacks return type hint: def test_initialization(self):",
      "file": "tests/test_orchestration_patterns.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 475,
      "message": "Function lacks return type hint: async def test_saga_execution_success(self):",
      "file": "tests/test_orchestration_patterns.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 494,
      "message": "Function lacks return type hint: async def test_saga_step_execution(self):",
      "file": "tests/test_orchestration_patterns.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 505,
      "message": "Function lacks return type hint: async def test_compensation_action_creation(self):",
      "file": "tests/test_orchestration_patterns.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 521,
      "message": "Function lacks return type hint: async def test_saga_compensation_execution(self):",
      "file": "tests/test_orchestration_patterns.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 529,
      "message": "Function lacks return type hint: async def compensate(step_id=i):",
      "file": "tests/test_orchestration_patterns.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 540,
      "message": "Function lacks return type hint: def test_compensation_handler_registration(self):",
      "file": "tests/test_orchestration_patterns.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 544,
      "message": "Function lacks return type hint: async def custom_handler(data):",
      "file": "tests/test_orchestration_patterns.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 555,
      "message": "Function lacks return type hint: def test_initialization(self):",
      "file": "tests/test_orchestration_patterns.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 565,
      "message": "Function lacks return type hint: async def test_pattern_execution(self):",
      "file": "tests/test_orchestration_patterns.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 581,
      "message": "Function lacks return type hint: async def test_invalid_pattern_execution(self):",
      "file": "tests/test_orchestration_patterns.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 588,
      "message": "Function lacks return type hint: def test_pattern_recommendation_scatter_gather(self):",
      "file": "tests/test_orchestration_patterns.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 599,
      "message": "Function lacks return type hint: def test_pattern_recommendation_mapreduce(self):",
      "file": "tests/test_orchestration_patterns.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 610,
      "message": "Function lacks return type hint: def test_pattern_recommendation_pipeline(self):",
      "file": "tests/test_orchestration_patterns.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 625,
      "message": "Function lacks return type hint: def test_pattern_recommendation_saga(self):",
      "file": "tests/test_orchestration_patterns.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 640,
      "message": "Function lacks return type hint: def test_pattern_recommendation_fork_join(self):",
      "file": "tests/test_orchestration_patterns.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 655,
      "message": "Function lacks return type hint: async def test_auto_pattern_execution(self):",
      "file": "tests/test_orchestration_patterns.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 667,
      "message": "Function lacks return type hint: def test_performance_metrics_retrieval(self):",
      "file": "tests/test_orchestration_patterns.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 685,
      "message": "Function lacks return type hint: def test_execution_history_management(self):",
      "file": "tests/test_orchestration_patterns.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 724,
      "message": "Function lacks return type hint: async def execute(self, task_slices, agents):",
      "file": "tests/test_orchestration_patterns.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 732,
      "message": "Function lacks return type hint: def test_base_pattern_initialization(self):",
      "file": "tests/test_orchestration_patterns.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 740,
      "message": "Function lacks return type hint: def test_stats_update(self):",
      "file": "tests/test_orchestration_patterns.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 759,
      "message": "Function lacks return type hint: def test_performance_metrics(self):",
      "file": "tests/test_orchestration_patterns.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 33,
      "message": "Function lacks return type hint: def temp_dir():",
      "file": "tests/test_marketplace.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 41,
      "message": "Function lacks return type hint: def sample_agent_metadata():",
      "file": "tests/test_marketplace.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 58,
      "message": "Function lacks return type hint: def sample_agent_code():",
      "file": "tests/test_marketplace.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 79,
      "message": "Function lacks return type hint: def sample_plugin_manifest():",
      "file": "tests/test_marketplace.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 93,
      "message": "Function lacks return type hint: def registry(temp_dir):",
      "file": "tests/test_marketplace.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 99,
      "message": "Function lacks return type hint: def plugin_manager(temp_dir):",
      "file": "tests/test_marketplace.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 105,
      "message": "Function lacks return type hint: def security_manager():",
      "file": "tests/test_marketplace.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 114,
      "message": "Function lacks return type hint: async def test_register_agent_success(",
      "file": "tests/test_marketplace.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 134,
      "message": "Function lacks return type hint: async def test_register_agent_invalid_version(",
      "file": "tests/test_marketplace.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 152,
      "message": "Function lacks return type hint: async def test_register_agent_nonexistent_file(",
      "file": "tests/test_marketplace.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 166,
      "message": "Function lacks return type hint: async def test_register_agent_invalid_class(",
      "file": "tests/test_marketplace.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 183,
      "message": "Function lacks return type hint: async def test_discover_agents_by_name(",
      "file": "tests/test_marketplace.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 202,
      "message": "Function lacks return type hint: async def test_discover_agents_by_capability(",
      "file": "tests/test_marketplace.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 220,
      "message": "Function lacks return type hint: async def test_load_agent(",
      "file": "tests/test_marketplace.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 240,
      "message": "Function lacks return type hint: async def test_unregister_agent(",
      "file": "tests/test_marketplace.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 261,
      "message": "Function lacks return type hint: async def test_update_agent_rating(",
      "file": "tests/test_marketplace.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 284,
      "message": "Function lacks return type hint: async def test_get_registry_stats(",
      "file": "tests/test_marketplace.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 305,
      "message": "Function lacks return type hint: async def test_discover_plugins(",
      "file": "tests/test_marketplace.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 333,
      "message": "Function lacks return type hint: async def test_install_plugin_from_directory(",
      "file": "tests/test_marketplace.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 365,
      "message": "Function lacks return type hint: async def test_load_plugin_success(",
      "file": "tests/test_marketplace.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 384,
      "message": "Function lacks return type hint: async def test_load_plugin_nonexistent(self, plugin_manager):",
      "file": "tests/test_marketplace.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 392,
      "message": "Function lacks return type hint: async def test_unload_plugin(",
      "file": "tests/test_marketplace.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 410,
      "message": "Function lacks return type hint: async def test_activate_plugin(",
      "file": "tests/test_marketplace.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 428,
      "message": "Function lacks return type hint: async def test_list_plugins(",
      "file": "tests/test_marketplace.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 445,
      "message": "Function lacks return type hint: async def test_get_plugin_info(",
      "file": "tests/test_marketplace.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 462,
      "message": "Function lacks return type hint: async def test_get_manager_stats(self, plugin_manager):",
      "file": "tests/test_marketplace.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 471,
      "message": "Function lacks return type hint: async def _install_test_plugin(self, plugin_manager, temp_dir, manifest, code):",
      "file": "tests/test_marketplace.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 496,
      "message": "Function lacks return type hint: def test_security_validator_safe_code(self, security_manager):",
      "file": "tests/test_marketplace.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 506,
      "message": "Function lacks return type hint: def process_data(self, input_data):",
      "file": "tests/test_marketplace.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 517,
      "message": "Function lacks return type hint: def test_security_validator_dangerous_code(self, security_manager):",
      "file": "tests/test_marketplace.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 524,
      "message": "Function lacks return type hint: def execute_command(self, cmd):",
      "file": "tests/test_marketplace.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 527,
      "message": "Function lacks return type hint: def read_sensitive_file(self):",
      "file": "tests/test_marketplace.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 548,
      "message": "Function lacks return type hint: async def test_audit_agent_file(self, security_manager, temp_dir):",
      "file": "tests/test_marketplace.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 555,
      "message": "Function lacks return type hint: async def execute_task(self, task):",
      "file": "tests/test_marketplace.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 570,
      "message": "Function lacks return type hint: async def test_audit_agent_directory(self, security_manager, temp_dir):",
      "file": "tests/test_marketplace.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 582,
      "message": "Function lacks return type hint: async def execute_task(self, task):",
      "file": "tests/test_marketplace.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 588,
      "message": "Function lacks return type hint: def helper_function(data):",
      "file": "tests/test_marketplace.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 599,
      "message": "Function lacks return type hint: def test_sign_and_verify_agent(self, security_manager, temp_dir):",
      "file": "tests/test_marketplace.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 616,
      "message": "Function lacks return type hint: def test_verify_invalid_signature(self, security_manager, temp_dir):",
      "file": "tests/test_marketplace.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 629,
      "message": "Function lacks return type hint: async def test_security_report(self, security_manager, temp_dir):",
      "file": "tests/test_marketplace.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 644,
      "message": "Function lacks return type hint: def test_sandbox_context(self, security_manager):",
      "file": "tests/test_marketplace.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 662,
      "message": "Function lacks return type hint: async def test_full_agent_lifecycle(",
      "file": "tests/test_marketplace.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 703,
      "message": "Function lacks return type hint: async def test_plugin_with_security_validation(",
      "file": "tests/test_marketplace.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 747,
      "message": "Function lacks return type hint: async def test_marketplace_stats_and_reporting(",
      "file": "tests/test_marketplace.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 789,
      "message": "Function lacks return type hint: def mock_agent_class():",
      "file": "tests/test_marketplace.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 800,
      "message": "Function lacks return type hint: def mock_plugin_class():",
      "file": "tests/test_marketplace.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 815,
      "message": "Function lacks return type hint: async def test_registry_performance_bulk_operations(self, temp_dir):",
      "file": "tests/test_marketplace.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 829,
      "message": "Function lacks return type hint: async def execute_task(self, task):",
      "file": "tests/test_marketplace.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 17,
      "message": "Function lacks return type hint: def test_base_agent(self):",
      "file": "tests/test_agents.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 24,
      "message": "Function lacks return type hint: def test_tool_response(self):",
      "file": "tests/test_agents.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 34,
      "message": "Function lacks return type hint: def test_unified_state(self):",
      "file": "tests/test_agents.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 43,
      "message": "Function lacks return type hint: def test_agent_context(self):",
      "file": "tests/test_agents.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 53,
      "message": "Function lacks return type hint: def test_repository_setup_agent(self):",
      "file": "tests/test_agents.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 63,
      "message": "Function lacks return type hint: def test_prompt_management_agent(self):",
      "file": "tests/test_agents.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 71,
      "message": "Function lacks return type hint: def test_event_system_agent(self):",
      "file": "tests/test_agents.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 34,
      "message": "Function lacks return type hint: def test_default_resource_limits(self):",
      "file": "tests/test_background_executor.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 43,
      "message": "Function lacks return type hint: def test_custom_resource_limits(self):",
      "file": "tests/test_background_executor.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 57,
      "message": "Function lacks return type hint: def test_resource_limits_serialization(self):",
      "file": "tests/test_background_executor.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 71,
      "message": "Function lacks return type hint: def test_create_agent_info(self):",
      "file": "tests/test_background_executor.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 99,
      "message": "Function lacks return type hint: def test_agent_info_serialization(self):",
      "file": "tests/test_background_executor.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 133,
      "message": "Function lacks return type hint: def event_bus(self):",
      "file": "tests/test_background_executor.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 137,
      "message": "Function lacks return type hint: def test_event_bus_creation(self, event_bus):",
      "file": "tests/test_background_executor.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 143,
      "message": "Function lacks return type hint: def test_subscribe_to_events(self, event_bus):",
      "file": "tests/test_background_executor.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 153,
      "message": "Function lacks return type hint: async def test_publish_events(self, event_bus):",
      "file": "tests/test_background_executor.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 174,
      "message": "Function lacks return type hint: async def test_async_event_callbacks(self, event_bus):",
      "file": "tests/test_background_executor.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 187,
      "message": "Function lacks return type hint: def test_get_latest_events(self, event_bus):",
      "file": "tests/test_background_executor.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 216,
      "message": "Function lacks return type hint: def temp_dir(self):",
      "file": "tests/test_background_executor.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 223,
      "message": "Function lacks return type hint: def executor(self, temp_dir):",
      "file": "tests/test_background_executor.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 227,
      "message": "Function lacks return type hint: def test_executor_initialization(self, executor, temp_dir):",
      "file": "tests/test_background_executor.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 235,
      "message": "Function lacks return type hint: def test_executor_statistics(self, executor):",
      "file": "tests/test_background_executor.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 248,
      "message": "Function lacks return type hint: async def test_spawn_background_agent_capacity_check(self, executor):",
      "file": "tests/test_background_executor.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 259,
      "message": "Function lacks return type hint: async def test_agent_creation_script_generation(self, executor):",
      "file": "tests/test_background_executor.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 293,
      "message": "Function lacks return type hint: async def test_agent_status_tracking(self, executor):",
      "file": "tests/test_background_executor.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 322,
      "message": "Function lacks return type hint: async def test_nonexistent_agent_status(self, executor):",
      "file": "tests/test_background_executor.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 328,
      "message": "Function lacks return type hint: async def test_get_all_agents_status(self, executor):",
      "file": "tests/test_background_executor.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 367,
      "message": "Function lacks return type hint: def test_static_agent_script_execution(self, executor):",
      "file": "tests/test_background_executor.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 381,
      "message": "Use logging instead of print statements",
      "file": "tests/test_background_executor.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 398,
      "message": "Function lacks return type hint: def test_thread_agent_execution(self, executor):",
      "file": "tests/test_background_executor.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 432,
      "message": "Function lacks return type hint: def temp_dir(self):",
      "file": "tests/test_background_executor.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 439,
      "message": "Function lacks return type hint: def background_executor(self, temp_dir):",
      "file": "tests/test_background_executor.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 444,
      "message": "Function lacks return type hint: def agent(self, background_executor):",
      "file": "tests/test_background_executor.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 448,
      "message": "Function lacks return type hint: def test_agent_initialization(self, agent, background_executor):",
      "file": "tests/test_background_executor.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 455,
      "message": "Function lacks return type hint: async def test_spawn_background_task(self, agent):",
      "file": "tests/test_background_executor.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 478,
      "message": "Function lacks return type hint: async def test_check_background_status(self, agent):",
      "file": "tests/test_background_executor.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 497,
      "message": "Function lacks return type hint: async def test_wait_for_completion(self, agent):",
      "file": "tests/test_background_executor.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 516,
      "message": "Function lacks return type hint: async def test_wait_for_completion_timeout(self, agent):",
      "file": "tests/test_background_executor.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 534,
      "message": "Function lacks return type hint: async def test_get_all_background_status(self, agent):",
      "file": "tests/test_background_executor.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 560,
      "message": "Function lacks return type hint: async def test_terminate_background_agent(self, agent):",
      "file": "tests/test_background_executor.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 583,
      "message": "Function lacks return type hint: def temp_dir(self):",
      "file": "tests/test_background_executor.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 590,
      "message": "Function lacks return type hint: def executor(self, temp_dir):",
      "file": "tests/test_background_executor.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 597,
      "message": "Function lacks return type hint: async def test_resource_usage_tracking(self, executor):",
      "file": "tests/test_background_executor.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 622,
      "message": "Function lacks return type hint: async def test_resource_usage_nonexistent_process(self, executor):",
      "file": "tests/test_background_executor.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 646,
      "message": "Function lacks return type hint: def temp_dir(self):",
      "file": "tests/test_background_executor.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 653,
      "message": "Function lacks return type hint: def executor(self, temp_dir):",
      "file": "tests/test_background_executor.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 658,
      "message": "Function lacks return type hint: async def test_executor_shutdown(self, executor):",
      "file": "tests/test_background_executor.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 689,
      "message": "Function lacks return type hint: def temp_dir(self):",
      "file": "tests/test_background_executor.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 696,
      "message": "Function lacks return type hint: def executor(self, temp_dir):",
      "file": "tests/test_background_executor.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 701,
      "message": "Function lacks return type hint: async def test_error_writing(self, executor):",
      "file": "tests/test_background_executor.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 728,
      "message": "Function lacks return type hint: async def test_pause_resume_nonexistent_agent(self, executor):",
      "file": "tests/test_background_executor.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 739,
      "message": "Function lacks return type hint: async def test_terminate_nonexistent_agent(self, executor):",
      "file": "tests/test_background_executor.py"
    },
    {
      "type": "missing_error_handling",
      "severity": "medium",
      "line": 0,
      "message": "File operations or subprocess calls lack error handling",
      "file": "tests/test_background_executor.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 25,
      "message": "Function lacks return type hint: def execute(",
      "file": "agents/uv_migration_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 408,
      "message": "Use logging instead of print statements",
      "file": "agents/uv_migration_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 413,
      "message": "Use logging instead of print statements",
      "file": "agents/uv_migration_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 416,
      "message": "Use logging instead of print statements",
      "file": "agents/uv_migration_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 420,
      "message": "Use logging instead of print statements",
      "file": "agents/uv_migration_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 421,
      "message": "Use logging instead of print statements",
      "file": "agents/uv_migration_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 424,
      "message": "Use logging instead of print statements",
      "file": "agents/uv_migration_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 427,
      "message": "Use logging instead of print statements",
      "file": "agents/uv_migration_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 429,
      "message": "Use logging instead of print statements",
      "file": "agents/uv_migration_agent.py"
    },
    {
      "type": "missing_docstring",
      "severity": "low",
      "line": 1,
      "message": "Module lacks docstring",
      "file": "agents/simple_issue_closer.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 9,
      "message": "Function lacks return type hint: def main():",
      "file": "agents/simple_issue_closer.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 25,
      "message": "Use logging instead of print statements",
      "file": "agents/simple_issue_closer.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 32,
      "message": "Use logging instead of print statements",
      "file": "agents/simple_issue_closer.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 60,
      "message": "Use logging instead of print statements",
      "file": "agents/simple_issue_closer.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 62,
      "message": "Use logging instead of print statements",
      "file": "agents/simple_issue_closer.py"
    },
    {
      "type": "missing_error_handling",
      "severity": "medium",
      "line": 0,
      "message": "File operations or subprocess calls lack error handling",
      "file": "agents/simple_issue_closer.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 119,
      "message": "Use logging instead of print statements",
      "file": "agents/issue_processor_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 122,
      "message": "Use logging instead of print statements",
      "file": "agents/issue_processor_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 230,
      "message": "Use logging instead of print statements",
      "file": "agents/issue_processor_agent.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 295,
      "message": "Function lacks return type hint: def test_base_agent():",
      "file": "agents/issue_processor_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 300,
      "message": "Use logging instead of print statements",
      "file": "agents/issue_processor_agent.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 303,
      "message": "Function lacks return type hint: def test_tool_response():",
      "file": "agents/issue_processor_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 308,
      "message": "Use logging instead of print statements",
      "file": "agents/issue_processor_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 314,
      "message": "Use logging instead of print statements",
      "file": "agents/issue_processor_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 464,
      "message": "Use logging instead of print statements",
      "file": "agents/issue_processor_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 476,
      "message": "Use logging instead of print statements",
      "file": "agents/issue_processor_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 486,
      "message": "Use logging instead of print statements",
      "file": "agents/issue_processor_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 494,
      "message": "Use logging instead of print statements",
      "file": "agents/issue_processor_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 500,
      "message": "Use logging instead of print statements",
      "file": "agents/issue_processor_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 502,
      "message": "Use logging instead of print statements",
      "file": "agents/issue_processor_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 511,
      "message": "Use logging instead of print statements",
      "file": "agents/issue_processor_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 517,
      "message": "Use logging instead of print statements",
      "file": "agents/issue_processor_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 521,
      "message": "Use logging instead of print statements",
      "file": "agents/issue_processor_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 554,
      "message": "Use logging instead of print statements",
      "file": "agents/issue_processor_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 561,
      "message": "Use logging instead of print statements",
      "file": "agents/issue_processor_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 562,
      "message": "Use logging instead of print statements",
      "file": "agents/issue_processor_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 564,
      "message": "Use logging instead of print statements",
      "file": "agents/issue_processor_agent.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 27,
      "message": "Function lacks return type hint: def execute(",
      "file": "agents/component_migration_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 262,
      "message": "Use logging instead of print statements",
      "file": "agents/component_migration_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 267,
      "message": "Use logging instead of print statements",
      "file": "agents/component_migration_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 273,
      "message": "Use logging instead of print statements",
      "file": "agents/component_migration_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 274,
      "message": "Use logging instead of print statements",
      "file": "agents/component_migration_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 276,
      "message": "Use logging instead of print statements",
      "file": "agents/component_migration_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 278,
      "message": "Use logging instead of print statements",
      "file": "agents/component_migration_agent.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 27,
      "message": "Function lacks return type hint: def execute(",
      "file": "agents/prompt_management_agent.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 121,
      "message": "Function lacks return type hint: def _load_all_prompts(self):",
      "file": "agents/prompt_management_agent.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 126,
      "message": "Function lacks return type hint: def _load_prompt_file(self, path: Path):",
      "file": "agents/prompt_management_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 150,
      "message": "Use logging instead of print statements",
      "file": "agents/prompt_management_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 212,
      "message": "Use logging instead of print statements",
      "file": "agents/prompt_management_agent.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 217,
      "message": "Function lacks return type hint: def register_prompt(self, name: str, template: str, metadata: Dict[str, Any] = None):",
      "file": "agents/prompt_management_agent.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 237,
      "message": "Function lacks return type hint: def save_prompt(self, name: str, template: str, metadata: Dict[str, Any] = None):",
      "file": "agents/prompt_management_agent.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 262,
      "message": "Function lacks return type hint: def clear_cache(self):",
      "file": "agents/prompt_management_agent.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 348,
      "message": "Function lacks return type hint: def _load_agent_prompt(self):",
      "file": "agents/prompt_management_agent.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 374,
      "message": "Function lacks return type hint: def set_prompt_variables(self, **variables):",
      "file": "agents/prompt_management_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 672,
      "message": "Use logging instead of print statements",
      "file": "agents/prompt_management_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 678,
      "message": "Use logging instead of print statements",
      "file": "agents/prompt_management_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 679,
      "message": "Use logging instead of print statements",
      "file": "agents/prompt_management_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 681,
      "message": "Use logging instead of print statements",
      "file": "agents/prompt_management_agent.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 288,
      "message": "Function lacks return type hint: def test_base_agent(self):",
      "file": "agents/testing_agent.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 295,
      "message": "Function lacks return type hint: def test_tool_response(self):",
      "file": "agents/testing_agent.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 305,
      "message": "Function lacks return type hint: def test_unified_state(self):",
      "file": "agents/testing_agent.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 314,
      "message": "Function lacks return type hint: def test_agent_context(self):",
      "file": "agents/testing_agent.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 324,
      "message": "Function lacks return type hint: def test_repository_setup_agent(self):",
      "file": "agents/testing_agent.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 331,
      "message": "Function lacks return type hint: def test_prompt_management_agent(self):",
      "file": "agents/testing_agent.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 338,
      "message": "Function lacks return type hint: def test_event_system_agent(self):",
      "file": "agents/testing_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 454,
      "message": "Use logging instead of print statements",
      "file": "agents/testing_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 460,
      "message": "Use logging instead of print statements",
      "file": "agents/testing_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 464,
      "message": "Use logging instead of print statements",
      "file": "agents/testing_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 468,
      "message": "Use logging instead of print statements",
      "file": "agents/testing_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 474,
      "message": "Use logging instead of print statements",
      "file": "agents/testing_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 478,
      "message": "Use logging instead of print statements",
      "file": "agents/testing_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 484,
      "message": "Use logging instead of print statements",
      "file": "agents/testing_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 487,
      "message": "Use logging instead of print statements",
      "file": "agents/testing_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 493,
      "message": "Use logging instead of print statements",
      "file": "agents/testing_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 497,
      "message": "Use logging instead of print statements",
      "file": "agents/testing_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 503,
      "message": "Use logging instead of print statements",
      "file": "agents/testing_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 509,
      "message": "Use logging instead of print statements",
      "file": "agents/testing_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 511,
      "message": "Use logging instead of print statements",
      "file": "agents/testing_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 515,
      "message": "Use logging instead of print statements",
      "file": "agents/testing_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 516,
      "message": "Use logging instead of print statements",
      "file": "agents/testing_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 517,
      "message": "Use logging instead of print statements",
      "file": "agents/testing_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 520,
      "message": "Use logging instead of print statements",
      "file": "agents/testing_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 522,
      "message": "Use logging instead of print statements",
      "file": "agents/testing_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 524,
      "message": "Use logging instead of print statements",
      "file": "agents/testing_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 525,
      "message": "Use logging instead of print statements",
      "file": "agents/testing_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 526,
      "message": "Use logging instead of print statements",
      "file": "agents/testing_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 529,
      "message": "Use logging instead of print statements",
      "file": "agents/testing_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 532,
      "message": "Use logging instead of print statements",
      "file": "agents/testing_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 565,
      "message": "Use logging instead of print statements",
      "file": "agents/testing_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 571,
      "message": "Use logging instead of print statements",
      "file": "agents/testing_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 573,
      "message": "Use logging instead of print statements",
      "file": "agents/testing_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 578,
      "message": "Use logging instead of print statements",
      "file": "agents/testing_agent.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 104,
      "message": "Function lacks return type hint: def execute(",
      "file": "agents/issue_orchestrator_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 157,
      "message": "Use logging instead of print statements",
      "file": "agents/issue_orchestrator_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 340,
      "message": "Use logging instead of print statements",
      "file": "agents/issue_orchestrator_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 345,
      "message": "Use logging instead of print statements",
      "file": "agents/issue_orchestrator_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 346,
      "message": "Use logging instead of print statements",
      "file": "agents/issue_orchestrator_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 347,
      "message": "Use logging instead of print statements",
      "file": "agents/issue_orchestrator_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 348,
      "message": "Use logging instead of print statements",
      "file": "agents/issue_orchestrator_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 379,
      "message": "Use logging instead of print statements",
      "file": "agents/issue_orchestrator_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 391,
      "message": "Use logging instead of print statements",
      "file": "agents/issue_orchestrator_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 393,
      "message": "Use logging instead of print statements",
      "file": "agents/issue_orchestrator_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 439,
      "message": "Use logging instead of print statements",
      "file": "agents/issue_orchestrator_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 440,
      "message": "Use logging instead of print statements",
      "file": "agents/issue_orchestrator_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 441,
      "message": "Use logging instead of print statements",
      "file": "agents/issue_orchestrator_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 446,
      "message": "Use logging instead of print statements",
      "file": "agents/issue_orchestrator_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 449,
      "message": "Use logging instead of print statements",
      "file": "agents/issue_orchestrator_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 450,
      "message": "Use logging instead of print statements",
      "file": "agents/issue_orchestrator_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 452,
      "message": "Use logging instead of print statements",
      "file": "agents/issue_orchestrator_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 456,
      "message": "Use logging instead of print statements",
      "file": "agents/issue_orchestrator_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 457,
      "message": "Use logging instead of print statements",
      "file": "agents/issue_orchestrator_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 458,
      "message": "Use logging instead of print statements",
      "file": "agents/issue_orchestrator_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 460,
      "message": "Use logging instead of print statements",
      "file": "agents/issue_orchestrator_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 461,
      "message": "Use logging instead of print statements",
      "file": "agents/issue_orchestrator_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 462,
      "message": "Use logging instead of print statements",
      "file": "agents/issue_orchestrator_agent.py"
    },
    {
      "type": "todo_comment",
      "severity": "low",
      "line": 52,
      "message": "Unresolved comment: # Check for NOTE/FIXME comments",
      "file": "agents/code_review_agent.py"
    },
    {
      "type": "todo_comment",
      "severity": "low",
      "line": 54,
      "message": "Unresolved comment: if \"NOTE\" in line or \"FIXME\" in line:",
      "file": "agents/code_review_agent.py"
    },
    {
      "type": "hardcoded_path",
      "severity": "medium",
      "line": 65,
      "message": "Hardcoded path detected",
      "file": "agents/code_review_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 380,
      "message": "Use logging instead of print statements",
      "file": "agents/code_review_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 397,
      "message": "Use logging instead of print statements",
      "file": "agents/code_review_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 406,
      "message": "Use logging instead of print statements",
      "file": "agents/code_review_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 415,
      "message": "Use logging instead of print statements",
      "file": "agents/code_review_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 457,
      "message": "Use logging instead of print statements",
      "file": "agents/code_review_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 459,
      "message": "Use logging instead of print statements",
      "file": "agents/code_review_agent.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 550,
      "message": "Function lacks return type hint: def _format_consolidated_issue(",
      "file": "agents/code_review_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 632,
      "message": "Use logging instead of print statements",
      "file": "agents/code_review_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 639,
      "message": "Use logging instead of print statements",
      "file": "agents/code_review_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 640,
      "message": "Use logging instead of print statements",
      "file": "agents/code_review_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 642,
      "message": "Use logging instead of print statements",
      "file": "agents/code_review_agent.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 35,
      "message": "Function lacks return type hint: async def process_async(",
      "file": "agents/enhanced_workflow_agent.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 79,
      "message": "Function lacks return type hint: async def process_async(",
      "file": "agents/enhanced_workflow_agent.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 143,
      "message": "Function lacks return type hint: async def process_async(",
      "file": "agents/enhanced_workflow_agent.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 273,
      "message": "Function lacks return type hint: async def _analysis_phase(self, workflow_data: Dict):",
      "file": "agents/enhanced_workflow_agent.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 306,
      "message": "Function lacks return type hint: async def _processing_phase(self, workflow_data: Dict):",
      "file": "agents/enhanced_workflow_agent.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 483,
      "message": "Function lacks return type hint: async def demo_enhanced_workflow():",
      "file": "agents/enhanced_workflow_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 498,
      "message": "Use logging instead of print statements",
      "file": "agents/enhanced_workflow_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 501,
      "message": "Use logging instead of print statements",
      "file": "agents/enhanced_workflow_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 502,
      "message": "Use logging instead of print statements",
      "file": "agents/enhanced_workflow_agent.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 125,
      "message": "Function lacks return type hint: def register_file_watcher(self, path: str, pattern: str = \"*\",",
      "file": "agents/event_system_agent.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 150,
      "message": "Function lacks return type hint: def register_schedule(self, cron_expr: str, handler: Callable,",
      "file": "agents/event_system_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 193,
      "message": "Use logging instead of print statements",
      "file": "agents/event_system_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 201,
      "message": "Use logging instead of print statements",
      "file": "agents/event_system_agent.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 295,
      "message": "Function lacks return type hint: def process_loop():",
      "file": "agents/event_system_agent.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 304,
      "message": "Function lacks return type hint: def watcher_loop():",
      "file": "agents/event_system_agent.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 314,
      "message": "Function lacks return type hint: def scheduler_loop():",
      "file": "agents/event_system_agent.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 486,
      "message": "Function lacks return type hint: def cli():",
      "file": "agents/event_system_agent.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 495,
      "message": "Function lacks return type hint: def emit(event_type, data, source):",
      "file": "agents/event_system_agent.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 511,
      "message": "Function lacks return type hint: def list():",
      "file": "agents/event_system_agent.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 526,
      "message": "Function lacks return type hint: def process():",
      "file": "agents/event_system_agent.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 535,
      "message": "Function lacks return type hint: def history(limit):",
      "file": "agents/event_system_agent.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 551,
      "message": "Function lacks return type hint: def cleanup(days):",
      "file": "agents/event_system_agent.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 562,
      "message": "Function lacks return type hint: def watch(path, pattern, event):",
      "file": "agents/event_system_agent.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 669,
      "message": "Function lacks return type hint: def on_file_changed(event):",
      "file": "agents/event_system_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 672,
      "message": "Use logging instead of print statements",
      "file": "agents/event_system_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 677,
      "message": "Use logging instead of print statements",
      "file": "agents/event_system_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 686,
      "message": "Use logging instead of print statements",
      "file": "agents/event_system_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 687,
      "message": "Use logging instead of print statements",
      "file": "agents/event_system_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 695,
      "message": "Use logging instead of print statements",
      "file": "agents/event_system_agent.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 714,
      "message": "Function lacks return type hint: def daily_review(event):",
      "file": "agents/event_system_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 716,
      "message": "Use logging instead of print statements",
      "file": "agents/event_system_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 720,
      "message": "Use logging instead of print statements",
      "file": "agents/event_system_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 728,
      "message": "Use logging instead of print statements",
      "file": "agents/event_system_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 729,
      "message": "Use logging instead of print statements",
      "file": "agents/event_system_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 737,
      "message": "Use logging instead of print statements",
      "file": "agents/event_system_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 805,
      "message": "Use logging instead of print statements",
      "file": "agents/event_system_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 813,
      "message": "Use logging instead of print statements",
      "file": "agents/event_system_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 814,
      "message": "Use logging instead of print statements",
      "file": "agents/event_system_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 817,
      "message": "Use logging instead of print statements",
      "file": "agents/event_system_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 820,
      "message": "Use logging instead of print statements",
      "file": "agents/event_system_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 822,
      "message": "Use logging instead of print statements",
      "file": "agents/event_system_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 407,
      "message": "Use logging instead of print statements",
      "file": "agents/repository_setup_agent.py"
    },
    {
      "type": "hardcoded_path",
      "severity": "medium",
      "line": 412,
      "message": "Hardcoded path detected",
      "file": "agents/repository_setup_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 416,
      "message": "Use logging instead of print statements",
      "file": "agents/repository_setup_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 417,
      "message": "Use logging instead of print statements",
      "file": "agents/repository_setup_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 419,
      "message": "Use logging instead of print statements",
      "file": "agents/repository_setup_agent.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 11,
      "message": "Function lacks return type hint: def initialize(self):",
      "file": "agents/base.py"
    },
    {
      "type": "missing_docstring",
      "severity": "low",
      "line": 1,
      "message": "Module lacks docstring",
      "file": "examples/pin_citer_integration_example.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 19,
      "message": "Use logging instead of print statements",
      "file": "examples/pin_citer_integration_example.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 22,
      "message": "Use logging instead of print statements",
      "file": "examples/pin_citer_integration_example.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 35,
      "message": "Function lacks return type hint: async def handoff_to_agent(self, agent_name: str, context: ContextBundle):",
      "file": "examples/pin_citer_integration_example.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 36,
      "message": "Use logging instead of print statements",
      "file": "examples/pin_citer_integration_example.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 43,
      "message": "Function lacks return type hint: async def spawn_background_agent(self, agent_class: str, task: str, **kwargs):",
      "file": "examples/pin_citer_integration_example.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 44,
      "message": "Use logging instead of print statements",
      "file": "examples/pin_citer_integration_example.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 79,
      "message": "Use logging instead of print statements",
      "file": "examples/pin_citer_integration_example.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 82,
      "message": "Use logging instead of print statements",
      "file": "examples/pin_citer_integration_example.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 87,
      "message": "Use logging instead of print statements",
      "file": "examples/pin_citer_integration_example.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 92,
      "message": "Use logging instead of print statements",
      "file": "examples/pin_citer_integration_example.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 97,
      "message": "Use logging instead of print statements",
      "file": "examples/pin_citer_integration_example.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 104,
      "message": "Use logging instead of print statements",
      "file": "examples/pin_citer_integration_example.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 122,
      "message": "Use logging instead of print statements",
      "file": "examples/pin_citer_integration_example.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 144,
      "message": "Use logging instead of print statements",
      "file": "examples/pin_citer_integration_example.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 181,
      "message": "Use logging instead of print statements",
      "file": "examples/pin_citer_integration_example.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 186,
      "message": "Use logging instead of print statements",
      "file": "examples/pin_citer_integration_example.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 190,
      "message": "Use logging instead of print statements",
      "file": "examples/pin_citer_integration_example.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 191,
      "message": "Use logging instead of print statements",
      "file": "examples/pin_citer_integration_example.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 192,
      "message": "Use logging instead of print statements",
      "file": "examples/pin_citer_integration_example.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 225,
      "message": "Use logging instead of print statements",
      "file": "examples/pin_citer_integration_example.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 234,
      "message": "Use logging instead of print statements",
      "file": "examples/pin_citer_integration_example.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 237,
      "message": "Use logging instead of print statements",
      "file": "examples/pin_citer_integration_example.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 238,
      "message": "Use logging instead of print statements",
      "file": "examples/pin_citer_integration_example.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 239,
      "message": "Use logging instead of print statements",
      "file": "examples/pin_citer_integration_example.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 240,
      "message": "Use logging instead of print statements",
      "file": "examples/pin_citer_integration_example.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 241,
      "message": "Use logging instead of print statements",
      "file": "examples/pin_citer_integration_example.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 242,
      "message": "Use logging instead of print statements",
      "file": "examples/pin_citer_integration_example.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 253,
      "message": "Function lacks return type hint: def access_local_docs():",
      "file": "examples/pin_citer_integration_example.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 255,
      "message": "Use logging instead of print statements",
      "file": "examples/pin_citer_integration_example.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 256,
      "message": "Use logging instead of print statements",
      "file": "examples/pin_citer_integration_example.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 266,
      "message": "Use logging instead of print statements",
      "file": "examples/pin_citer_integration_example.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 268,
      "message": "Use logging instead of print statements",
      "file": "examples/pin_citer_integration_example.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 270,
      "message": "Use logging instead of print statements",
      "file": "examples/pin_citer_integration_example.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 278,
      "message": "Use logging instead of print statements",
      "file": "examples/pin_citer_integration_example.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 280,
      "message": "Use logging instead of print statements",
      "file": "examples/pin_citer_integration_example.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 288,
      "message": "Use logging instead of print statements",
      "file": "examples/pin_citer_integration_example.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 291,
      "message": "Function lacks return type hint: async def main():",
      "file": "examples/pin_citer_integration_example.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 301,
      "message": "Use logging instead of print statements",
      "file": "examples/pin_citer_integration_example.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 302,
      "message": "Use logging instead of print statements",
      "file": "examples/pin_citer_integration_example.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 305,
      "message": "Use logging instead of print statements",
      "file": "examples/pin_citer_integration_example.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 306,
      "message": "Use logging instead of print statements",
      "file": "examples/pin_citer_integration_example.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 307,
      "message": "Use logging instead of print statements",
      "file": "examples/pin_citer_integration_example.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 315,
      "message": "Use logging instead of print statements",
      "file": "examples/pin_citer_integration_example.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 316,
      "message": "Use logging instead of print statements",
      "file": "examples/pin_citer_integration_example.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 317,
      "message": "Use logging instead of print statements",
      "file": "examples/pin_citer_integration_example.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 325,
      "message": "Use logging instead of print statements",
      "file": "examples/pin_citer_integration_example.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 326,
      "message": "Use logging instead of print statements",
      "file": "examples/pin_citer_integration_example.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 327,
      "message": "Use logging instead of print statements",
      "file": "examples/pin_citer_integration_example.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 329,
      "message": "Use logging instead of print statements",
      "file": "examples/pin_citer_integration_example.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 332,
      "message": "Use logging instead of print statements",
      "file": "examples/pin_citer_integration_example.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 335,
      "message": "Use logging instead of print statements",
      "file": "examples/pin_citer_integration_example.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 340,
      "message": "Use logging instead of print statements",
      "file": "examples/pin_citer_integration_example.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 341,
      "message": "Use logging instead of print statements",
      "file": "examples/pin_citer_integration_example.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 342,
      "message": "Use logging instead of print statements",
      "file": "examples/pin_citer_integration_example.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 343,
      "message": "Use logging instead of print statements",
      "file": "examples/pin_citer_integration_example.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 344,
      "message": "Use logging instead of print statements",
      "file": "examples/pin_citer_integration_example.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 345,
      "message": "Use logging instead of print statements",
      "file": "examples/pin_citer_integration_example.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 346,
      "message": "Use logging instead of print statements",
      "file": "examples/pin_citer_integration_example.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 347,
      "message": "Use logging instead of print statements",
      "file": "examples/pin_citer_integration_example.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 348,
      "message": "Use logging instead of print statements",
      "file": "examples/pin_citer_integration_example.py"
    },
    {
      "type": "missing_docstring",
      "severity": "low",
      "line": 1,
      "message": "Module lacks docstring",
      "file": "scripts/marketplace_demo.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 58,
      "message": "Function lacks return type hint: async def demonstrate_agent_registry():",
      "file": "scripts/marketplace_demo.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 60,
      "message": "Use logging instead of print statements",
      "file": "scripts/marketplace_demo.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 86,
      "message": "Use logging instead of print statements",
      "file": "scripts/marketplace_demo.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 92,
      "message": "Use logging instead of print statements",
      "file": "scripts/marketplace_demo.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 94,
      "message": "Use logging instead of print statements",
      "file": "scripts/marketplace_demo.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 97,
      "message": "Use logging instead of print statements",
      "file": "scripts/marketplace_demo.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 103,
      "message": "Use logging instead of print statements",
      "file": "scripts/marketplace_demo.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 105,
      "message": "Use logging instead of print statements",
      "file": "scripts/marketplace_demo.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 109,
      "message": "Use logging instead of print statements",
      "file": "scripts/marketplace_demo.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 114,
      "message": "Use logging instead of print statements",
      "file": "scripts/marketplace_demo.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 116,
      "message": "Use logging instead of print statements",
      "file": "scripts/marketplace_demo.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 120,
      "message": "Use logging instead of print statements",
      "file": "scripts/marketplace_demo.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 121,
      "message": "Use logging instead of print statements",
      "file": "scripts/marketplace_demo.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 124,
      "message": "Function lacks return type hint: async def demonstrate_plugin_system():",
      "file": "scripts/marketplace_demo.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 126,
      "message": "Use logging instead of print statements",
      "file": "scripts/marketplace_demo.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 164,
      "message": "Use logging instead of print statements",
      "file": "scripts/marketplace_demo.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 168,
      "message": "Use logging instead of print statements",
      "file": "scripts/marketplace_demo.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 170,
      "message": "Use logging instead of print statements",
      "file": "scripts/marketplace_demo.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 173,
      "message": "Use logging instead of print statements",
      "file": "scripts/marketplace_demo.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 176,
      "message": "Use logging instead of print statements",
      "file": "scripts/marketplace_demo.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 178,
      "message": "Use logging instead of print statements",
      "file": "scripts/marketplace_demo.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 181,
      "message": "Use logging instead of print statements",
      "file": "scripts/marketplace_demo.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 184,
      "message": "Use logging instead of print statements",
      "file": "scripts/marketplace_demo.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 186,
      "message": "Use logging instead of print statements",
      "file": "scripts/marketplace_demo.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 190,
      "message": "Use logging instead of print statements",
      "file": "scripts/marketplace_demo.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 193,
      "message": "Use logging instead of print statements",
      "file": "scripts/marketplace_demo.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 195,
      "message": "Use logging instead of print statements",
      "file": "scripts/marketplace_demo.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 199,
      "message": "Use logging instead of print statements",
      "file": "scripts/marketplace_demo.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 202,
      "message": "Function lacks return type hint: async def demonstrate_security_framework():",
      "file": "scripts/marketplace_demo.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 204,
      "message": "Use logging instead of print statements",
      "file": "scripts/marketplace_demo.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 212,
      "message": "Use logging instead of print statements",
      "file": "scripts/marketplace_demo.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 221,
      "message": "Use logging instead of print statements",
      "file": "scripts/marketplace_demo.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 222,
      "message": "Use logging instead of print statements",
      "file": "scripts/marketplace_demo.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 223,
      "message": "Use logging instead of print statements",
      "file": "scripts/marketplace_demo.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 225,
      "message": "Use logging instead of print statements",
      "file": "scripts/marketplace_demo.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 231,
      "message": "Function lacks return type hint: def execute_system_command(self, cmd):",
      "file": "scripts/marketplace_demo.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 234,
      "message": "Function lacks return type hint: def read_file(self, path):",
      "file": "scripts/marketplace_demo.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 243,
      "message": "Use logging instead of print statements",
      "file": "scripts/marketplace_demo.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 244,
      "message": "Use logging instead of print statements",
      "file": "scripts/marketplace_demo.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 245,
      "message": "Use logging instead of print statements",
      "file": "scripts/marketplace_demo.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 248,
      "message": "Use logging instead of print statements",
      "file": "scripts/marketplace_demo.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 250,
      "message": "Use logging instead of print statements",
      "file": "scripts/marketplace_demo.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 254,
      "message": "Use logging instead of print statements",
      "file": "scripts/marketplace_demo.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 258,
      "message": "Use logging instead of print statements",
      "file": "scripts/marketplace_demo.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 259,
      "message": "Use logging instead of print statements",
      "file": "scripts/marketplace_demo.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 264,
      "message": "Use logging instead of print statements",
      "file": "scripts/marketplace_demo.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 268,
      "message": "Use logging instead of print statements",
      "file": "scripts/marketplace_demo.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 272,
      "message": "Use logging instead of print statements",
      "file": "scripts/marketplace_demo.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 273,
      "message": "Use logging instead of print statements",
      "file": "scripts/marketplace_demo.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 276,
      "message": "Function lacks return type hint: async def demonstrate_integration():",
      "file": "scripts/marketplace_demo.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 278,
      "message": "Use logging instead of print statements",
      "file": "scripts/marketplace_demo.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 288,
      "message": "Use logging instead of print statements",
      "file": "scripts/marketplace_demo.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 297,
      "message": "Use logging instead of print statements",
      "file": "scripts/marketplace_demo.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 317,
      "message": "Use logging instead of print statements",
      "file": "scripts/marketplace_demo.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 329,
      "message": "Use logging instead of print statements",
      "file": "scripts/marketplace_demo.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 331,
      "message": "Use logging instead of print statements",
      "file": "scripts/marketplace_demo.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 334,
      "message": "Use logging instead of print statements",
      "file": "scripts/marketplace_demo.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 338,
      "message": "Use logging instead of print statements",
      "file": "scripts/marketplace_demo.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 342,
      "message": "Use logging instead of print statements",
      "file": "scripts/marketplace_demo.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 347,
      "message": "Function lacks return type hint: async def main():",
      "file": "scripts/marketplace_demo.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 349,
      "message": "Use logging instead of print statements",
      "file": "scripts/marketplace_demo.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 350,
      "message": "Use logging instead of print statements",
      "file": "scripts/marketplace_demo.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 351,
      "message": "Use logging instead of print statements",
      "file": "scripts/marketplace_demo.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 354,
      "message": "Use logging instead of print statements",
      "file": "scripts/marketplace_demo.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 362,
      "message": "Use logging instead of print statements",
      "file": "scripts/marketplace_demo.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 363,
      "message": "Use logging instead of print statements",
      "file": "scripts/marketplace_demo.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 364,
      "message": "Use logging instead of print statements",
      "file": "scripts/marketplace_demo.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 365,
      "message": "Use logging instead of print statements",
      "file": "scripts/marketplace_demo.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 366,
      "message": "Use logging instead of print statements",
      "file": "scripts/marketplace_demo.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 367,
      "message": "Use logging instead of print statements",
      "file": "scripts/marketplace_demo.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 368,
      "message": "Use logging instead of print statements",
      "file": "scripts/marketplace_demo.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 369,
      "message": "Use logging instead of print statements",
      "file": "scripts/marketplace_demo.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 370,
      "message": "Use logging instead of print statements",
      "file": "scripts/marketplace_demo.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 371,
      "message": "Use logging instead of print statements",
      "file": "scripts/marketplace_demo.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 374,
      "message": "Use logging instead of print statements",
      "file": "scripts/marketplace_demo.py"
    },
    {
      "type": "missing_docstring",
      "severity": "low",
      "line": 1,
      "message": "Module lacks docstring",
      "file": "scripts/run_performance_tests.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 9,
      "message": "Function lacks return type hint: def run_performance_suite():",
      "file": "scripts/run_performance_tests.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 26,
      "message": "Use logging instead of print statements",
      "file": "scripts/run_performance_tests.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 43,
      "message": "Use logging instead of print statements",
      "file": "scripts/run_performance_tests.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 46,
      "message": "Use logging instead of print statements",
      "file": "scripts/run_performance_tests.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 54,
      "message": "Use logging instead of print statements",
      "file": "scripts/run_performance_tests.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 55,
      "message": "Use logging instead of print statements",
      "file": "scripts/run_performance_tests.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 56,
      "message": "Use logging instead of print statements",
      "file": "scripts/run_performance_tests.py"
    },
    {
      "type": "missing_error_handling",
      "severity": "medium",
      "line": 0,
      "message": "File operations or subprocess calls lack error handling",
      "file": "scripts/run_performance_tests.py"
    },
    {
      "type": "missing_docstring",
      "severity": "low",
      "line": 1,
      "message": "Module lacks docstring",
      "file": "scripts/local_test_runner.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 7,
      "message": "Function lacks return type hint: def run_quick_tests():",
      "file": "scripts/local_test_runner.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 9,
      "message": "Use logging instead of print statements",
      "file": "scripts/local_test_runner.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 17,
      "message": "Use logging instead of print statements",
      "file": "scripts/local_test_runner.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 20,
      "message": "Use logging instead of print statements",
      "file": "scripts/local_test_runner.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 21,
      "message": "Use logging instead of print statements",
      "file": "scripts/local_test_runner.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 22,
      "message": "Use logging instead of print statements",
      "file": "scripts/local_test_runner.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 26,
      "message": "Function lacks return type hint: def run_performance_tests():",
      "file": "scripts/local_test_runner.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 28,
      "message": "Use logging instead of print statements",
      "file": "scripts/local_test_runner.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 36,
      "message": "Use logging instead of print statements",
      "file": "scripts/local_test_runner.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 39,
      "message": "Use logging instead of print statements",
      "file": "scripts/local_test_runner.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 40,
      "message": "Use logging instead of print statements",
      "file": "scripts/local_test_runner.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 41,
      "message": "Use logging instead of print statements",
      "file": "scripts/local_test_runner.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 45,
      "message": "Function lacks return type hint: def run_code_quality():",
      "file": "scripts/local_test_runner.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 47,
      "message": "Use logging instead of print statements",
      "file": "scripts/local_test_runner.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 60,
      "message": "Use logging instead of print statements",
      "file": "scripts/local_test_runner.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 64,
      "message": "Use logging instead of print statements",
      "file": "scripts/local_test_runner.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 65,
      "message": "Use logging instead of print statements",
      "file": "scripts/local_test_runner.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 67,
      "message": "Use logging instead of print statements",
      "file": "scripts/local_test_runner.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 68,
      "message": "Use logging instead of print statements",
      "file": "scripts/local_test_runner.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 72,
      "message": "Function lacks return type hint: def main():",
      "file": "scripts/local_test_runner.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 74,
      "message": "Use logging instead of print statements",
      "file": "scripts/local_test_runner.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 87,
      "message": "Use logging instead of print statements",
      "file": "scripts/local_test_runner.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 89,
      "message": "Use logging instead of print statements",
      "file": "scripts/local_test_runner.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 92,
      "message": "Use logging instead of print statements",
      "file": "scripts/local_test_runner.py"
    },
    {
      "type": "missing_error_handling",
      "severity": "medium",
      "line": 0,
      "message": "File operations or subprocess calls lack error handling",
      "file": "scripts/local_test_runner.py"
    },
    {
      "type": "missing_docstring",
      "severity": "low",
      "line": 1,
      "message": "Module lacks docstring",
      "file": "scripts/autonomous_deep_clean_agent.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 31,
      "message": "Function lacks return type hint: def timeout_handler(self, signum, frame):",
      "file": "scripts/autonomous_deep_clean_agent.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 36,
      "message": "Function lacks return type hint: def update_status(self, progress: int, message: str, data: Dict[str, Any] = None):",
      "file": "scripts/autonomous_deep_clean_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 49,
      "message": "Use logging instead of print statements",
      "file": "scripts/autonomous_deep_clean_agent.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 63,
      "message": "Function lacks return type hint: def update_gitignore(self):",
      "file": "scripts/autonomous_deep_clean_agent.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 111,
      "message": "Function lacks return type hint: def clean_python_cache(self):",
      "file": "scripts/autonomous_deep_clean_agent.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 137,
      "message": "Function lacks return type hint: def remove_outdated_docs(self):",
      "file": "scripts/autonomous_deep_clean_agent.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 173,
      "message": "Function lacks return type hint: def consolidate_scripts(self):",
      "file": "scripts/autonomous_deep_clean_agent.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 213,
      "message": "Function lacks return type hint: def update_setup_files(self):",
      "file": "scripts/autonomous_deep_clean_agent.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 242,
      "message": "Function lacks return type hint: def run_comprehensive_tests(self):",
      "file": "scripts/autonomous_deep_clean_agent.py"
    },
    {
      "type": "hardcoded_path",
      "severity": "medium",
      "line": 262,
      "message": "Hardcoded path detected",
      "file": "scripts/autonomous_deep_clean_agent.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 281,
      "message": "Function lacks return type hint: def create_cleanup_report(self):",
      "file": "scripts/autonomous_deep_clean_agent.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 342,
      "message": "Function lacks return type hint: def create_pr(self):",
      "file": "scripts/autonomous_deep_clean_agent.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 416,
      "message": "Function lacks return type hint: def run(self):",
      "file": "scripts/autonomous_deep_clean_agent.py"
    },
    {
      "type": "missing_docstring",
      "severity": "low",
      "line": 1,
      "message": "Module lacks docstring",
      "file": "scripts/quick_system_analysis.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 11,
      "message": "Function lacks return type hint: def analyze_system():",
      "file": "scripts/quick_system_analysis.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 14,
      "message": "Use logging instead of print statements",
      "file": "scripts/quick_system_analysis.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 15,
      "message": "Use logging instead of print statements",
      "file": "scripts/quick_system_analysis.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 41,
      "message": "Use logging instead of print statements",
      "file": "scripts/quick_system_analysis.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 42,
      "message": "Use logging instead of print statements",
      "file": "scripts/quick_system_analysis.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 43,
      "message": "Use logging instead of print statements",
      "file": "scripts/quick_system_analysis.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 44,
      "message": "Use logging instead of print statements",
      "file": "scripts/quick_system_analysis.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 45,
      "message": "Use logging instead of print statements",
      "file": "scripts/quick_system_analysis.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 46,
      "message": "Use logging instead of print statements",
      "file": "scripts/quick_system_analysis.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 47,
      "message": "Use logging instead of print statements",
      "file": "scripts/quick_system_analysis.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 48,
      "message": "Use logging instead of print statements",
      "file": "scripts/quick_system_analysis.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 50,
      "message": "Use logging instead of print statements",
      "file": "scripts/quick_system_analysis.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 51,
      "message": "Use logging instead of print statements",
      "file": "scripts/quick_system_analysis.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 52,
      "message": "Use logging instead of print statements",
      "file": "scripts/quick_system_analysis.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 53,
      "message": "Use logging instead of print statements",
      "file": "scripts/quick_system_analysis.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 66,
      "message": "Use logging instead of print statements",
      "file": "scripts/quick_system_analysis.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 67,
      "message": "Use logging instead of print statements",
      "file": "scripts/quick_system_analysis.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 68,
      "message": "Use logging instead of print statements",
      "file": "scripts/quick_system_analysis.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 69,
      "message": "Use logging instead of print statements",
      "file": "scripts/quick_system_analysis.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 70,
      "message": "Use logging instead of print statements",
      "file": "scripts/quick_system_analysis.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 71,
      "message": "Use logging instead of print statements",
      "file": "scripts/quick_system_analysis.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 72,
      "message": "Use logging instead of print statements",
      "file": "scripts/quick_system_analysis.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 73,
      "message": "Use logging instead of print statements",
      "file": "scripts/quick_system_analysis.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 75,
      "message": "Use logging instead of print statements",
      "file": "scripts/quick_system_analysis.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 76,
      "message": "Use logging instead of print statements",
      "file": "scripts/quick_system_analysis.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 77,
      "message": "Use logging instead of print statements",
      "file": "scripts/quick_system_analysis.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 78,
      "message": "Use logging instead of print statements",
      "file": "scripts/quick_system_analysis.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 81,
      "message": "Use logging instead of print statements",
      "file": "scripts/quick_system_analysis.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 89,
      "message": "Use logging instead of print statements",
      "file": "scripts/quick_system_analysis.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 91,
      "message": "Use logging instead of print statements",
      "file": "scripts/quick_system_analysis.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 92,
      "message": "Use logging instead of print statements",
      "file": "scripts/quick_system_analysis.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 95,
      "message": "Use logging instead of print statements",
      "file": "scripts/quick_system_analysis.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 96,
      "message": "Use logging instead of print statements",
      "file": "scripts/quick_system_analysis.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 97,
      "message": "Use logging instead of print statements",
      "file": "scripts/quick_system_analysis.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 98,
      "message": "Use logging instead of print statements",
      "file": "scripts/quick_system_analysis.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 101,
      "message": "Use logging instead of print statements",
      "file": "scripts/quick_system_analysis.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 102,
      "message": "Use logging instead of print statements",
      "file": "scripts/quick_system_analysis.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 105,
      "message": "Use logging instead of print statements",
      "file": "scripts/quick_system_analysis.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 106,
      "message": "Use logging instead of print statements",
      "file": "scripts/quick_system_analysis.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 107,
      "message": "Use logging instead of print statements",
      "file": "scripts/quick_system_analysis.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 108,
      "message": "Use logging instead of print statements",
      "file": "scripts/quick_system_analysis.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 109,
      "message": "Use logging instead of print statements",
      "file": "scripts/quick_system_analysis.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 110,
      "message": "Use logging instead of print statements",
      "file": "scripts/quick_system_analysis.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 111,
      "message": "Use logging instead of print statements",
      "file": "scripts/quick_system_analysis.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 112,
      "message": "Use logging instead of print statements",
      "file": "scripts/quick_system_analysis.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 113,
      "message": "Use logging instead of print statements",
      "file": "scripts/quick_system_analysis.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 114,
      "message": "Use logging instead of print statements",
      "file": "scripts/quick_system_analysis.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 115,
      "message": "Use logging instead of print statements",
      "file": "scripts/quick_system_analysis.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 116,
      "message": "Use logging instead of print statements",
      "file": "scripts/quick_system_analysis.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 117,
      "message": "Use logging instead of print statements",
      "file": "scripts/quick_system_analysis.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 118,
      "message": "Use logging instead of print statements",
      "file": "scripts/quick_system_analysis.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 119,
      "message": "Use logging instead of print statements",
      "file": "scripts/quick_system_analysis.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 139,
      "message": "Function lacks return type hint: def detect_system_type():",
      "file": "scripts/quick_system_analysis.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 170,
      "message": "Function lacks return type hint: def calculate_conservative_limit(cpu_cores, memory_gb, system_type):",
      "file": "scripts/quick_system_analysis.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 197,
      "message": "Function lacks return type hint: def calculate_optimal_limit(cpu_cores, memory_gb, system_type):",
      "file": "scripts/quick_system_analysis.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 224,
      "message": "Function lacks return type hint: def calculate_maximum_limit(cpu_cores, memory_gb, system_type):",
      "file": "scripts/quick_system_analysis.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 248,
      "message": "Function lacks return type hint: def estimate_agent_memory_usage():",
      "file": "scripts/quick_system_analysis.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 254,
      "message": "Function lacks return type hint: def generate_warnings(",
      "file": "scripts/quick_system_analysis.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 294,
      "message": "Use logging instead of print statements",
      "file": "scripts/quick_system_analysis.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 297,
      "message": "Use logging instead of print statements",
      "file": "scripts/quick_system_analysis.py"
    },
    {
      "type": "missing_docstring",
      "severity": "low",
      "line": 1,
      "message": "Module lacks docstring",
      "file": "scripts/quick_performance_check.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 11,
      "message": "Function lacks return type hint: def check_orchestration_performance():",
      "file": "scripts/quick_performance_check.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 29,
      "message": "Use logging instead of print statements",
      "file": "scripts/quick_performance_check.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 32,
      "message": "Use logging instead of print statements",
      "file": "scripts/quick_performance_check.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 36,
      "message": "Use logging instead of print statements",
      "file": "scripts/quick_performance_check.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 40,
      "message": "Function lacks return type hint: def check_context_efficiency():",
      "file": "scripts/quick_performance_check.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 58,
      "message": "Use logging instead of print statements",
      "file": "scripts/quick_performance_check.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 61,
      "message": "Use logging instead of print statements",
      "file": "scripts/quick_performance_check.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 65,
      "message": "Use logging instead of print statements",
      "file": "scripts/quick_performance_check.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 69,
      "message": "Function lacks return type hint: def main():",
      "file": "scripts/quick_performance_check.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 71,
      "message": "Use logging instead of print statements",
      "file": "scripts/quick_performance_check.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 80,
      "message": "Use logging instead of print statements",
      "file": "scripts/quick_performance_check.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 85,
      "message": "Use logging instead of print statements",
      "file": "scripts/quick_performance_check.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 88,
      "message": "Use logging instead of print statements",
      "file": "scripts/quick_performance_check.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 74,
      "message": "Function lacks return type hint: async def execute(",
      "file": "orchestration/patterns.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 80,
      "message": "Function lacks return type hint: def update_stats(self, result: PatternResult):",
      "file": "orchestration/patterns.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 125,
      "message": "Function lacks return type hint: async def execute(",
      "file": "orchestration/patterns.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 174,
      "message": "Function lacks return type hint: async def _map_phase(",
      "file": "orchestration/patterns.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 202,
      "message": "Function lacks return type hint: async def _reduce_phase(",
      "file": "orchestration/patterns.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 241,
      "message": "Function lacks return type hint: def _distribute_slices(",
      "file": "orchestration/patterns.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 289,
      "message": "Function lacks return type hint: def register_custom_reducer(self, name: str, reducer: Callable):",
      "file": "orchestration/patterns.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 306,
      "message": "Function lacks return type hint: async def execute(",
      "file": "orchestration/patterns.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 359,
      "message": "Function lacks return type hint: async def _execute_pipeline_stage(",
      "file": "orchestration/patterns.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 381,
      "message": "Function lacks return type hint: def register_stage_processor(self, stage_name: str, processor: Callable):",
      "file": "orchestration/patterns.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 399,
      "message": "Function lacks return type hint: async def execute(",
      "file": "orchestration/patterns.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 464,
      "message": "Function lacks return type hint: async def _execute_fork_task(",
      "file": "orchestration/patterns.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 481,
      "message": "Function lacks return type hint: async def _join_results(",
      "file": "orchestration/patterns.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 501,
      "message": "Function lacks return type hint: def register_join_strategy(self, name: str, strategy: Callable):",
      "file": "orchestration/patterns.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 518,
      "message": "Function lacks return type hint: async def execute(",
      "file": "orchestration/patterns.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 588,
      "message": "Function lacks return type hint: async def _execute_scatter_task(",
      "file": "orchestration/patterns.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 604,
      "message": "Function lacks return type hint: async def _gather_responses(",
      "file": "orchestration/patterns.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 652,
      "message": "Function lacks return type hint: def register_gather_strategy(self, name: str, strategy: Callable):",
      "file": "orchestration/patterns.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 670,
      "message": "Function lacks return type hint: async def execute(",
      "file": "orchestration/patterns.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 749,
      "message": "Function lacks return type hint: async def _execute_saga_step(",
      "file": "orchestration/patterns.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 764,
      "message": "Function lacks return type hint: async def _create_compensation_action(",
      "file": "orchestration/patterns.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 769,
      "message": "Function lacks return type hint: async def compensate():",
      "file": "orchestration/patterns.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 777,
      "message": "Function lacks return type hint: async def _execute_compensation(self, compensation_actions: List[Callable]):",
      "file": "orchestration/patterns.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 790,
      "message": "Function lacks return type hint: def register_compensation_handler(self, step_name: str, handler: Callable):",
      "file": "orchestration/patterns.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 815,
      "message": "Function lacks return type hint: async def execute_pattern(",
      "file": "orchestration/patterns.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 842,
      "message": "Function lacks return type hint: def recommend_pattern(",
      "file": "orchestration/patterns.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 878,
      "message": "Function lacks return type hint: async def execute_auto_pattern(",
      "file": "orchestration/patterns.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 905,
      "message": "Function lacks return type hint: def clear_history(self):",
      "file": "orchestration/patterns.py"
    },
    {
      "type": "missing_docstring",
      "severity": "low",
      "line": 1,
      "message": "Module lacks docstring",
      "file": "scripts/archive/benchmark_background_executor.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 32,
      "message": "Function lacks return type hint: async def setup(self):",
      "file": "scripts/archive/benchmark_background_executor.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 36,
      "message": "Function lacks return type hint: async def cleanup(self):",
      "file": "scripts/archive/benchmark_background_executor.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 41,
      "message": "Function lacks return type hint: def print_header(self, title: str):",
      "file": "scripts/archive/benchmark_background_executor.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 43,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/benchmark_background_executor.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 44,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/benchmark_background_executor.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 45,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/benchmark_background_executor.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 46,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/benchmark_background_executor.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 48,
      "message": "Function lacks return type hint: def print_result(",
      "file": "scripts/archive/benchmark_background_executor.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 53,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/benchmark_background_executor.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 54,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/benchmark_background_executor.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 55,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/benchmark_background_executor.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 56,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/benchmark_background_executor.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 58,
      "message": "Function lacks return type hint: async def benchmark_concurrent_spawning(self):",
      "file": "scripts/archive/benchmark_background_executor.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 60,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/benchmark_background_executor.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 67,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/benchmark_background_executor.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 90,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/benchmark_background_executor.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 91,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/benchmark_background_executor.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 111,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/benchmark_background_executor.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 112,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/benchmark_background_executor.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 119,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/benchmark_background_executor.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 122,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/benchmark_background_executor.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 124,
      "message": "Function lacks return type hint: async def benchmark_throughput(self):",
      "file": "scripts/archive/benchmark_background_executor.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 126,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/benchmark_background_executor.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 130,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/benchmark_background_executor.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 163,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/benchmark_background_executor.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 178,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/benchmark_background_executor.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 179,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/benchmark_background_executor.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 180,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/benchmark_background_executor.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 192,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/benchmark_background_executor.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 195,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/benchmark_background_executor.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 197,
      "message": "Function lacks return type hint: async def benchmark_resource_monitoring(self):",
      "file": "scripts/archive/benchmark_background_executor.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 199,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/benchmark_background_executor.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 207,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/benchmark_background_executor.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 236,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/benchmark_background_executor.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 253,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/benchmark_background_executor.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 254,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/benchmark_background_executor.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 263,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/benchmark_background_executor.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 266,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/benchmark_background_executor.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 268,
      "message": "Function lacks return type hint: async def benchmark_capacity_stress_test(self):",
      "file": "scripts/archive/benchmark_background_executor.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 270,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/benchmark_background_executor.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 276,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/benchmark_background_executor.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 299,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/benchmark_background_executor.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 306,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/benchmark_background_executor.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 307,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/benchmark_background_executor.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 308,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/benchmark_background_executor.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 309,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/benchmark_background_executor.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 310,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/benchmark_background_executor.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 313,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/benchmark_background_executor.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 319,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/benchmark_background_executor.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 345,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/benchmark_background_executor.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 348,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/benchmark_background_executor.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 351,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/benchmark_background_executor.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 353,
      "message": "Function lacks return type hint: async def benchmark_event_bus_performance(self):",
      "file": "scripts/archive/benchmark_background_executor.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 355,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/benchmark_background_executor.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 359,
      "message": "Function lacks return type hint: async def event_handler(event_type: str, data: dict):",
      "file": "scripts/archive/benchmark_background_executor.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 367,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/benchmark_background_executor.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 398,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/benchmark_background_executor.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 399,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/benchmark_background_executor.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 400,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/benchmark_background_executor.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 401,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/benchmark_background_executor.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 402,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/benchmark_background_executor.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 415,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/benchmark_background_executor.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 418,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/benchmark_background_executor.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 419,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/benchmark_background_executor.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 421,
      "message": "Function lacks return type hint: def generate_summary(self):",
      "file": "scripts/archive/benchmark_background_executor.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 456,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/benchmark_background_executor.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 460,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/benchmark_background_executor.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 462,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/benchmark_background_executor.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 464,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/benchmark_background_executor.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 466,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/benchmark_background_executor.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 468,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/benchmark_background_executor.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 471,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/benchmark_background_executor.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 481,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/benchmark_background_executor.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 483,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/benchmark_background_executor.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 490,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/benchmark_background_executor.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 492,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/benchmark_background_executor.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 503,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/benchmark_background_executor.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 505,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/benchmark_background_executor.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 512,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/benchmark_background_executor.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 514,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/benchmark_background_executor.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 516,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/benchmark_background_executor.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 517,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/benchmark_background_executor.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 522,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/benchmark_background_executor.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 524,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/benchmark_background_executor.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 528,
      "message": "Function lacks return type hint: async def run_all_benchmarks(self):",
      "file": "scripts/archive/benchmark_background_executor.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 558,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/benchmark_background_executor.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 566,
      "message": "Function lacks return type hint: async def main():",
      "file": "scripts/archive/benchmark_background_executor.py"
    },
    {
      "type": "missing_docstring",
      "severity": "low",
      "line": 1,
      "message": "Module lacks docstring",
      "file": "scripts/archive/test_optimal_agent_limits.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 142,
      "message": "Function lacks return type hint: async def test_agent_limit(",
      "file": "scripts/archive/test_optimal_agent_limits.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 295,
      "message": "Function lacks return type hint: def _generate_recommendation(",
      "file": "scripts/archive/test_optimal_agent_limits.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 330,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/test_optimal_agent_limits.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 331,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/test_optimal_agent_limits.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 334,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/test_optimal_agent_limits.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 338,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/test_optimal_agent_limits.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 342,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/test_optimal_agent_limits.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 347,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/test_optimal_agent_limits.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 348,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/test_optimal_agent_limits.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 354,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/test_optimal_agent_limits.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 355,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/test_optimal_agent_limits.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 358,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/test_optimal_agent_limits.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 359,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/test_optimal_agent_limits.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 360,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/test_optimal_agent_limits.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 361,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/test_optimal_agent_limits.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 362,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/test_optimal_agent_limits.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 369,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/test_optimal_agent_limits.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 471,
      "message": "Function lacks return type hint: async def main():",
      "file": "scripts/archive/test_optimal_agent_limits.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 476,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/test_optimal_agent_limits.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 477,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/test_optimal_agent_limits.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 478,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/test_optimal_agent_limits.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 479,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/test_optimal_agent_limits.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 480,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/test_optimal_agent_limits.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 486,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/test_optimal_agent_limits.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 487,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/test_optimal_agent_limits.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 490,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/test_optimal_agent_limits.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 494,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/test_optimal_agent_limits.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 495,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/test_optimal_agent_limits.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 497,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/test_optimal_agent_limits.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 498,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/test_optimal_agent_limits.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 499,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/test_optimal_agent_limits.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 501,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/test_optimal_agent_limits.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 502,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/test_optimal_agent_limits.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 503,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/test_optimal_agent_limits.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 505,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/test_optimal_agent_limits.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 506,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/test_optimal_agent_limits.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 507,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/test_optimal_agent_limits.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 510,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/test_optimal_agent_limits.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 511,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/test_optimal_agent_limits.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 512,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/test_optimal_agent_limits.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 513,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/test_optimal_agent_limits.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 514,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/test_optimal_agent_limits.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 521,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/test_optimal_agent_limits.py"
    },
    {
      "type": "missing_docstring",
      "severity": "low",
      "line": 1,
      "message": "Module lacks docstring",
      "file": "scripts/archive/autonomous_performance_agent.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 28,
      "message": "Function lacks return type hint: def timeout_handler(self, signum, frame):",
      "file": "scripts/archive/autonomous_performance_agent.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 37,
      "message": "Function lacks return type hint: def update_status(self, progress: int, message: str, data: Dict[str, Any] = None):",
      "file": "scripts/archive/autonomous_performance_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 49,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/autonomous_performance_agent.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 63,
      "message": "Function lacks return type hint: def create_performance_benchmarks(self):",
      "file": "scripts/archive/autonomous_performance_agent.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 86,
      "message": "Function lacks return type hint: def timeout_handler(signum, frame):",
      "file": "scripts/archive/autonomous_performance_agent.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 93,
      "message": "Function lacks return type hint: def setup_timeout(self):",
      "file": "scripts/archive/autonomous_performance_agent.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 100,
      "message": "Function lacks return type hint: def test_context_window_usage(self):",
      "file": "scripts/archive/autonomous_performance_agent.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 113,
      "message": "Function lacks return type hint: def test_context_pruning_performance(self):",
      "file": "scripts/archive/autonomous_performance_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 131,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/autonomous_performance_agent.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 133,
      "message": "Function lacks return type hint: def test_context_recovery(self):",
      "file": "scripts/archive/autonomous_performance_agent.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 164,
      "message": "Function lacks return type hint: def timeout_handler(signum, frame):",
      "file": "scripts/archive/autonomous_performance_agent.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 171,
      "message": "Function lacks return type hint: def setup_timeout(self):",
      "file": "scripts/archive/autonomous_performance_agent.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 177,
      "message": "Function lacks return type hint: def test_hierarchical_overhead(self):",
      "file": "scripts/archive/autonomous_performance_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 196,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/autonomous_performance_agent.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 198,
      "message": "Function lacks return type hint: def test_agent_coordination_scaling(self):",
      "file": "scripts/archive/autonomous_performance_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 215,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/autonomous_performance_agent.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 217,
      "message": "Function lacks return type hint: def test_pattern_performance(self):",
      "file": "scripts/archive/autonomous_performance_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 237,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/autonomous_performance_agent.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 253,
      "message": "Function lacks return type hint: def timeout_handler(signum, frame):",
      "file": "scripts/archive/autonomous_performance_agent.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 260,
      "message": "Function lacks return type hint: def setup_timeout(self):",
      "file": "scripts/archive/autonomous_performance_agent.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 266,
      "message": "Function lacks return type hint: def test_agent_memory_footprint(self):",
      "file": "scripts/archive/autonomous_performance_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 282,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/autonomous_performance_agent.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 284,
      "message": "Function lacks return type hint: def test_multi_agent_memory_scaling(self):",
      "file": "scripts/archive/autonomous_performance_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 302,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/autonomous_performance_agent.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 304,
      "message": "Function lacks return type hint: def test_memory_cleanup(self):",
      "file": "scripts/archive/autonomous_performance_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 322,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/autonomous_performance_agent.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 337,
      "message": "Function lacks return type hint: def timeout_handler(signum, frame):",
      "file": "scripts/archive/autonomous_performance_agent.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 344,
      "message": "Function lacks return type hint: def setup_timeout(self):",
      "file": "scripts/archive/autonomous_performance_agent.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 350,
      "message": "Function lacks return type hint: def test_simple_task_latency(self):",
      "file": "scripts/archive/autonomous_performance_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 361,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/autonomous_performance_agent.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 363,
      "message": "Function lacks return type hint: def test_complex_workflow_performance(self):",
      "file": "scripts/archive/autonomous_performance_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 384,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/autonomous_performance_agent.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 386,
      "message": "Function lacks return type hint: def test_parallel_execution_speedup(self):",
      "file": "scripts/archive/autonomous_performance_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 406,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/autonomous_performance_agent.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 422,
      "message": "Function lacks return type hint: def run_performance_suite():",
      "file": "scripts/archive/autonomous_performance_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 443,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/autonomous_performance_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 460,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/autonomous_performance_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 463,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/autonomous_performance_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 471,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/autonomous_performance_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 472,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/autonomous_performance_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 473,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/autonomous_performance_agent.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 485,
      "message": "Function lacks return type hint: def create_supporting_infrastructure(self):",
      "file": "scripts/archive/autonomous_performance_agent.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 505,
      "message": "Function lacks return type hint: def add_context(self, content: str, priority: int = 1):",
      "file": "scripts/archive/autonomous_performance_agent.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 522,
      "message": "Function lacks return type hint: def prune_to_fit(self):",
      "file": "scripts/archive/autonomous_performance_agent.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 550,
      "message": "Function lacks return type hint: def restore_snapshot(self, snapshot: Dict[str, Any]):",
      "file": "scripts/archive/autonomous_performance_agent.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 556,
      "message": "Function lacks return type hint: def get_context(self, search: str):",
      "file": "scripts/archive/autonomous_performance_agent.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 605,
      "message": "Function lacks return type hint: def initialize(self):",
      "file": "scripts/archive/autonomous_performance_agent.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 614,
      "message": "Function lacks return type hint: def create_pr(self):",
      "file": "scripts/archive/autonomous_performance_agent.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 668,
      "message": "Function lacks return type hint: def run(self):",
      "file": "scripts/archive/autonomous_performance_agent.py"
    },
    {
      "type": "missing_docstring",
      "severity": "low",
      "line": 1,
      "message": "Module lacks docstring",
      "file": "scripts/archive/benchmark_context_optimization.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 155,
      "message": "Function lacks return type hint: def run_benchmark(",
      "file": "scripts/archive/benchmark_context_optimization.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 182,
      "message": "Function lacks return type hint: def run_all_benchmarks(self):",
      "file": "scripts/archive/benchmark_context_optimization.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 184,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/benchmark_context_optimization.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 185,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/benchmark_context_optimization.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 186,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/benchmark_context_optimization.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 187,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/benchmark_context_optimization.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 210,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/benchmark_context_optimization.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 214,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/benchmark_context_optimization.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 219,
      "message": "Function lacks return type hint: def print_result(self, result: BenchmarkResult):",
      "file": "scripts/archive/benchmark_context_optimization.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 221,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/benchmark_context_optimization.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 222,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/benchmark_context_optimization.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 223,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/benchmark_context_optimization.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 224,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/benchmark_context_optimization.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 225,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/benchmark_context_optimization.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 226,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/benchmark_context_optimization.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 227,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/benchmark_context_optimization.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 231,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/benchmark_context_optimization.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 233,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/benchmark_context_optimization.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 237,
      "message": "Function lacks return type hint: def print_summary(self):",
      "file": "scripts/archive/benchmark_context_optimization.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 239,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/benchmark_context_optimization.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 240,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/benchmark_context_optimization.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 241,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/benchmark_context_optimization.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 242,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/benchmark_context_optimization.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 253,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/benchmark_context_optimization.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 254,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/benchmark_context_optimization.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 255,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/benchmark_context_optimization.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 256,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/benchmark_context_optimization.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 257,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/benchmark_context_optimization.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 263,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/benchmark_context_optimization.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 264,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/benchmark_context_optimization.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 265,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/benchmark_context_optimization.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 266,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/benchmark_context_optimization.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 269,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/benchmark_context_optimization.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 275,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/benchmark_context_optimization.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 282,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/benchmark_context_optimization.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 283,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/benchmark_context_optimization.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 284,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/benchmark_context_optimization.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 287,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/benchmark_context_optimization.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 292,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/benchmark_context_optimization.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 293,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/benchmark_context_optimization.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 305,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/benchmark_context_optimization.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 308,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/benchmark_context_optimization.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 310,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/benchmark_context_optimization.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 315,
      "message": "Function lacks return type hint: def main():",
      "file": "scripts/archive/benchmark_context_optimization.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 323,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/benchmark_context_optimization.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 326,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/benchmark_context_optimization.py"
    },
    {
      "type": "missing_docstring",
      "severity": "low",
      "line": 1,
      "message": "Module lacks docstring",
      "file": "scripts/archive/benchmark_handoff_performance.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 239,
      "message": "Function lacks return type hint: async def benchmark_handoff_scenario(",
      "file": "scripts/archive/benchmark_handoff_performance.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 243,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/benchmark_handoff_performance.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 299,
      "message": "Function lacks return type hint: def detect_context_loss(",
      "file": "scripts/archive/benchmark_handoff_performance.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 323,
      "message": "Function lacks return type hint: async def run_all_benchmarks(self):",
      "file": "scripts/archive/benchmark_handoff_performance.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 325,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/benchmark_handoff_performance.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 326,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/benchmark_handoff_performance.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 327,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/benchmark_handoff_performance.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 328,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/benchmark_handoff_performance.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 339,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/benchmark_handoff_performance.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 343,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/benchmark_handoff_performance.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 352,
      "message": "Function lacks return type hint: def print_result(self, result: HandoffBenchmarkResult):",
      "file": "scripts/archive/benchmark_handoff_performance.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 354,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/benchmark_handoff_performance.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 357,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/benchmark_handoff_performance.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 358,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/benchmark_handoff_performance.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 359,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/benchmark_handoff_performance.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 360,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/benchmark_handoff_performance.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 361,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/benchmark_handoff_performance.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 362,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/benchmark_handoff_performance.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 363,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/benchmark_handoff_performance.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 364,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/benchmark_handoff_performance.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 365,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/benchmark_handoff_performance.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 369,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/benchmark_handoff_performance.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 373,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/benchmark_handoff_performance.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 378,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/benchmark_handoff_performance.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 380,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/benchmark_handoff_performance.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 382,
      "message": "Function lacks return type hint: async def test_concurrent_handoffs(self):",
      "file": "scripts/archive/benchmark_handoff_performance.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 384,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/benchmark_handoff_performance.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 425,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/benchmark_handoff_performance.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 426,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/benchmark_handoff_performance.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 427,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/benchmark_handoff_performance.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 428,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/benchmark_handoff_performance.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 432,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/benchmark_handoff_performance.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 433,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/benchmark_handoff_performance.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 435,
      "message": "Function lacks return type hint: async def test_handoff_chain_performance(self):",
      "file": "scripts/archive/benchmark_handoff_performance.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 437,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/benchmark_handoff_performance.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 473,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/benchmark_handoff_performance.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 474,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/benchmark_handoff_performance.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 483,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/benchmark_handoff_performance.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 484,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/benchmark_handoff_performance.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 485,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/benchmark_handoff_performance.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 487,
      "message": "Function lacks return type hint: def print_summary(self):",
      "file": "scripts/archive/benchmark_handoff_performance.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 489,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/benchmark_handoff_performance.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 490,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/benchmark_handoff_performance.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 491,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/benchmark_handoff_performance.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 492,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/benchmark_handoff_performance.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 505,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/benchmark_handoff_performance.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 506,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/benchmark_handoff_performance.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 507,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/benchmark_handoff_performance.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 508,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/benchmark_handoff_performance.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 509,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/benchmark_handoff_performance.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 510,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/benchmark_handoff_performance.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 516,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/benchmark_handoff_performance.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 517,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/benchmark_handoff_performance.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 518,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/benchmark_handoff_performance.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 521,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/benchmark_handoff_performance.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 524,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/benchmark_handoff_performance.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 527,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/benchmark_handoff_performance.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 528,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/benchmark_handoff_performance.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 529,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/benchmark_handoff_performance.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 530,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/benchmark_handoff_performance.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 533,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/benchmark_handoff_performance.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 535,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/benchmark_handoff_performance.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 538,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/benchmark_handoff_performance.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 539,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/benchmark_handoff_performance.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 542,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/benchmark_handoff_performance.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 543,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/benchmark_handoff_performance.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 544,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/benchmark_handoff_performance.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 545,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/benchmark_handoff_performance.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 550,
      "message": "Function lacks return type hint: async def main():",
      "file": "scripts/archive/benchmark_handoff_performance.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 562,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/benchmark_handoff_performance.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 565,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/benchmark_handoff_performance.py"
    },
    {
      "type": "missing_docstring",
      "severity": "low",
      "line": 1,
      "message": "Module lacks docstring",
      "file": "scripts/archive/autonomous_local_cicd_agent.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 28,
      "message": "Function lacks return type hint: def timeout_handler(self, signum, frame):",
      "file": "scripts/archive/autonomous_local_cicd_agent.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 37,
      "message": "Function lacks return type hint: def update_status(self, progress: int, message: str, data: Dict[str, Any] = None):",
      "file": "scripts/archive/autonomous_local_cicd_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 49,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/autonomous_local_cicd_agent.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 63,
      "message": "Function lacks return type hint: def create_precommit_config(self):",
      "file": "scripts/archive/autonomous_local_cicd_agent.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 101,
      "message": "Function lacks return type hint: def create_quick_tests(self):",
      "file": "scripts/archive/autonomous_local_cicd_agent.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 119,
      "message": "Function lacks return type hint: def test_imports_work(self):",
      "file": "scripts/archive/autonomous_local_cicd_agent.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 129,
      "message": "Function lacks return type hint: def test_orchestrator_basic_function(self):",
      "file": "scripts/archive/autonomous_local_cicd_agent.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 137,
      "message": "Function lacks return type hint: def test_context_manager_efficiency(self):",
      "file": "scripts/archive/autonomous_local_cicd_agent.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 147,
      "message": "Function lacks return type hint: def test_agent_executor_basic(self):",
      "file": "scripts/archive/autonomous_local_cicd_agent.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 156,
      "message": "Function lacks return type hint: def test_marketplace_imports(self):",
      "file": "scripts/archive/autonomous_local_cicd_agent.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 171,
      "message": "Function lacks return type hint: def create_performance_check(self):",
      "file": "scripts/archive/autonomous_local_cicd_agent.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 185,
      "message": "Function lacks return type hint: def check_orchestration_performance():",
      "file": "scripts/archive/autonomous_local_cicd_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 198,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/autonomous_local_cicd_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 201,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/autonomous_local_cicd_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 205,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/autonomous_local_cicd_agent.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 208,
      "message": "Function lacks return type hint: def check_context_efficiency():",
      "file": "scripts/archive/autonomous_local_cicd_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 222,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/autonomous_local_cicd_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 225,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/autonomous_local_cicd_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 229,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/autonomous_local_cicd_agent.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 232,
      "message": "Function lacks return type hint: def main():",
      "file": "scripts/archive/autonomous_local_cicd_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 234,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/autonomous_local_cicd_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 243,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/autonomous_local_cicd_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 248,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/autonomous_local_cicd_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 251,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/autonomous_local_cicd_agent.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 260,
      "message": "Function lacks return type hint: def create_local_test_runner(self):",
      "file": "scripts/archive/autonomous_local_cicd_agent.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 271,
      "message": "Function lacks return type hint: def run_quick_tests():",
      "file": "scripts/archive/autonomous_local_cicd_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 273,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/autonomous_local_cicd_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 280,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/autonomous_local_cicd_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 283,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/autonomous_local_cicd_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 284,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/autonomous_local_cicd_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 285,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/autonomous_local_cicd_agent.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 288,
      "message": "Function lacks return type hint: def run_performance_tests():",
      "file": "scripts/archive/autonomous_local_cicd_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 290,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/autonomous_local_cicd_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 296,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/autonomous_local_cicd_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 299,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/autonomous_local_cicd_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 300,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/autonomous_local_cicd_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 301,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/autonomous_local_cicd_agent.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 304,
      "message": "Function lacks return type hint: def run_code_quality():",
      "file": "scripts/archive/autonomous_local_cicd_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 306,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/autonomous_local_cicd_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 319,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/autonomous_local_cicd_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 323,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/autonomous_local_cicd_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 324,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/autonomous_local_cicd_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 326,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/autonomous_local_cicd_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 327,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/autonomous_local_cicd_agent.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 330,
      "message": "Function lacks return type hint: def main():",
      "file": "scripts/archive/autonomous_local_cicd_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 332,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/autonomous_local_cicd_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 345,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/autonomous_local_cicd_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 347,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/autonomous_local_cicd_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 350,
      "message": "Use logging instead of print statements",
      "file": "scripts/archive/autonomous_local_cicd_agent.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 359,
      "message": "Function lacks return type hint: def install_precommit_hooks(self):",
      "file": "scripts/archive/autonomous_local_cicd_agent.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 372,
      "message": "Function lacks return type hint: def create_makefile(self):",
      "file": "scripts/archive/autonomous_local_cicd_agent.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 414,
      "message": "Function lacks return type hint: def create_readme_section(self):",
      "file": "scripts/archive/autonomous_local_cicd_agent.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 458,
      "message": "Function lacks return type hint: def create_pr(self):",
      "file": "scripts/archive/autonomous_local_cicd_agent.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 524,
      "message": "Function lacks return type hint: def run(self):",
      "file": "scripts/archive/autonomous_local_cicd_agent.py"
    },
    {
      "type": "missing_docstring",
      "severity": "low",
      "line": 1,
      "message": "Module lacks docstring",
      "file": "examples/triggers/daily_schedule.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 14,
      "message": "Function lacks return type hint: def daily_review(event):",
      "file": "examples/triggers/daily_schedule.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 16,
      "message": "Use logging instead of print statements",
      "file": "examples/triggers/daily_schedule.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 20,
      "message": "Use logging instead of print statements",
      "file": "examples/triggers/daily_schedule.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 31,
      "message": "Use logging instead of print statements",
      "file": "examples/triggers/daily_schedule.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 32,
      "message": "Use logging instead of print statements",
      "file": "examples/triggers/daily_schedule.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 41,
      "message": "Use logging instead of print statements",
      "file": "examples/triggers/daily_schedule.py"
    },
    {
      "type": "missing_docstring",
      "severity": "low",
      "line": 1,
      "message": "Module lacks docstring",
      "file": "examples/triggers/file_watcher.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 14,
      "message": "Function lacks return type hint: def on_file_changed(event):",
      "file": "examples/triggers/file_watcher.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 17,
      "message": "Use logging instead of print statements",
      "file": "examples/triggers/file_watcher.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 22,
      "message": "Use logging instead of print statements",
      "file": "examples/triggers/file_watcher.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 32,
      "message": "Use logging instead of print statements",
      "file": "examples/triggers/file_watcher.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 33,
      "message": "Use logging instead of print statements",
      "file": "examples/triggers/file_watcher.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 42,
      "message": "Use logging instead of print statements",
      "file": "examples/triggers/file_watcher.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 34,
      "message": "Function lacks return type hint: async def test_three_level_hierarchy_workflow(self):",
      "file": "tests/integration/test_complex_orchestration.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 64,
      "message": "Function lacks return type hint: async def test_cite_assist_project_orchestration(self):",
      "file": "tests/integration/test_complex_orchestration.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 84,
      "message": "Function lacks return type hint: async def test_pin_citer_pipeline_orchestration(self):",
      "file": "tests/integration/test_complex_orchestration.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 104,
      "message": "Function lacks return type hint: async def test_dynamic_depth_adjustment(self):",
      "file": "tests/integration/test_complex_orchestration.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 124,
      "message": "Function lacks return type hint: async def test_cross_level_coordination(self):",
      "file": "tests/integration/test_complex_orchestration.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 148,
      "message": "Function lacks return type hint: async def test_pattern_integration_workflow(self):",
      "file": "tests/integration/test_complex_orchestration.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 167,
      "message": "Function lacks return type hint: async def test_concurrent_orchestrations(self):",
      "file": "tests/integration/test_complex_orchestration.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 199,
      "message": "Function lacks return type hint: async def test_orchestration_with_failures(self):",
      "file": "tests/integration/test_complex_orchestration.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 221,
      "message": "Function lacks return type hint: async def test_resource_constrained_orchestration(self):",
      "file": "tests/integration/test_complex_orchestration.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 247,
      "message": "Function lacks return type hint: async def test_orchestration_status_monitoring(self):",
      "file": "tests/integration/test_complex_orchestration.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 288,
      "message": "Function lacks return type hint: async def test_orchestration_cancellation_workflow(self):",
      "file": "tests/integration/test_complex_orchestration.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 332,
      "message": "Function lacks return type hint: async def test_pattern_executor_integration(self):",
      "file": "tests/integration/test_complex_orchestration.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 371,
      "message": "Function lacks return type hint: async def test_auto_pattern_selection_integration(self):",
      "file": "tests/integration/test_complex_orchestration.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 429,
      "message": "Function lacks return type hint: async def test_performance_monitoring_integration(self):",
      "file": "tests/integration/test_complex_orchestration.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 464,
      "message": "Function lacks return type hint: async def test_scalability_stress_test(self):",
      "file": "tests/integration/test_complex_orchestration.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 496,
      "message": "Function lacks return type hint: async def test_error_recovery_integration(self):",
      "file": "tests/integration/test_complex_orchestration.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 124,
      "message": "Function lacks return type hint: def executor():",
      "file": "tests/integration/test_background_executor_integration.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 146,
      "message": "Function lacks return type hint: def temp_workspace():",
      "file": "tests/integration/test_background_executor_integration.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 156,
      "message": "Function lacks return type hint: async def test_concurrent_agent_execution(self, executor):",
      "file": "tests/integration/test_background_executor_integration.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 194,
      "message": "Function lacks return type hint: async def test_resource_limits_enforcement(self, executor):",
      "file": "tests/integration/test_background_executor_integration.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 224,
      "message": "Function lacks return type hint: async def test_event_bus_communication(self, executor):",
      "file": "tests/integration/test_background_executor_integration.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 228,
      "message": "Function lacks return type hint: async def event_handler(event_type: str, data: dict):",
      "file": "tests/integration/test_background_executor_integration.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 257,
      "message": "Function lacks return type hint: async def test_agent_failure_handling(self, executor):",
      "file": "tests/integration/test_background_executor_integration.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 289,
      "message": "Function lacks return type hint: async def test_capacity_management(self, executor):",
      "file": "tests/integration/test_background_executor_integration.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 315,
      "message": "Function lacks return type hint: async def test_agent_chaining_workflow(self, executor):",
      "file": "tests/integration/test_background_executor_integration.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 319,
      "message": "Function lacks return type hint: async def chain_handler(event_type: str, data: dict):",
      "file": "tests/integration/test_background_executor_integration.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 342,
      "message": "Function lacks return type hint: async def test_cleanup_and_resource_management(self, executor):",
      "file": "tests/integration/test_background_executor_integration.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 372,
      "message": "Function lacks return type hint: async def test_stress_test_many_agents(self, executor):",
      "file": "tests/integration/test_background_executor_integration.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 407,
      "message": "Function lacks return type hint: async def test_mixed_execution_modes(self, executor):",
      "file": "tests/integration/test_background_executor_integration.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 25,
      "message": "Function lacks return type hint: def cite_assist_context(self):",
      "file": "tests/integration/test_rd_framework.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 58,
      "message": "Function lacks return type hint: def test_cite_assist_context_optimization(self, cite_assist_context):",
      "file": "tests/integration/test_rd_framework.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 94,
      "message": "Function lacks return type hint: async def test_autonomous_agent_with_optimization(self, cite_assist_context):",
      "file": "tests/integration/test_rd_framework.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 130,
      "message": "Function lacks return type hint: def test_specialized_legal_task_delegation(self, cite_assist_context):",
      "file": "tests/integration/test_rd_framework.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 158,
      "message": "Function lacks return type hint: def pin_citer_context(self):",
      "file": "tests/integration/test_rd_framework.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 198,
      "message": "Function lacks return type hint: def test_pin_citer_context_optimization(self, pin_citer_context):",
      "file": "tests/integration/test_rd_framework.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 223,
      "message": "Function lacks return type hint: def test_pdf_processing_delegation(self, pin_citer_context):",
      "file": "tests/integration/test_rd_framework.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 252,
      "message": "Function lacks return type hint: async def test_github_integration_with_optimization(self, pin_citer_context):",
      "file": "tests/integration/test_rd_framework.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 293,
      "message": "Function lacks return type hint: def handoff_context(self):",
      "file": "tests/integration/test_rd_framework.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 324,
      "message": "Function lacks return type hint: async def test_handoff_context_optimization(self, handoff_context):",
      "file": "tests/integration/test_rd_framework.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 358,
      "message": "Function lacks return type hint: def test_context_reduction_benchmark(self):",
      "file": "tests/integration/test_rd_framework.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 388,
      "message": "Function lacks return type hint: def test_delegation_threshold_tuning(self):",
      "file": "tests/integration/test_rd_framework.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 418,
      "message": "Function lacks return type hint: async def test_concurrent_optimization(self):",
      "file": "tests/integration/test_rd_framework.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 24,
      "message": "Function lacks return type hint: def test_end_to_end_feature_development_workflow(self):",
      "file": "tests/integration/test_dynamic_primer_integration.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 116,
      "message": "Function lacks return type hint: def test_bug_fix_to_testing_workflow(self):",
      "file": "tests/integration/test_dynamic_primer_integration.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 162,
      "message": "Function lacks return type hint: def test_template_file_integration(self):",
      "file": "tests/integration/test_dynamic_primer_integration.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 197,
      "message": "Function lacks return type hint: def test_cli_create_command(self):",
      "file": "tests/integration/test_dynamic_primer_integration.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 225,
      "message": "Function lacks return type hint: def test_cli_list_command(self):",
      "file": "tests/integration/test_dynamic_primer_integration.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 241,
      "message": "Function lacks return type hint: def test_cli_interactive_mode(self, monkeypatch):",
      "file": "tests/integration/test_dynamic_primer_integration.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 246,
      "message": "Function lacks return type hint: def mock_input(prompt):",
      "file": "tests/integration/test_dynamic_primer_integration.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 258,
      "message": "Function lacks return type hint: def test_variables_file_integration(self):",
      "file": "tests/integration/test_dynamic_primer_integration.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 298,
      "message": "Function lacks return type hint: def test_template_validation_command(self):",
      "file": "tests/integration/test_dynamic_primer_integration.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 314,
      "message": "Function lacks return type hint: def test_primer_performance_under_load(self):",
      "file": "tests/integration/test_dynamic_primer_integration.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 342,
      "message": "Function lacks return type hint: def test_multi_primer_workflow_chain(self):",
      "file": "tests/integration/test_dynamic_primer_integration.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 403,
      "message": "Function lacks return type hint: def test_error_handling_integration(self):",
      "file": "tests/integration/test_dynamic_primer_integration.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 428,
      "message": "Function lacks return type hint: def test_concurrent_cli_usage(self):",
      "file": "tests/integration/test_dynamic_primer_integration.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 432,
      "message": "Function lacks return type hint: def run_cli_create(primer_type, task_id):",
      "file": "tests/integration/test_dynamic_primer_integration.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 470,
      "message": "Function lacks return type hint: def test_primer_system_with_real_12_factor_workflow(self):",
      "file": "tests/integration/test_dynamic_primer_integration.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 24,
      "message": "Function lacks return type hint: def executor():",
      "file": "tests/integration/test_background_executor_simple.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 46,
      "message": "Function lacks return type hint: def temp_workspace():",
      "file": "tests/integration/test_background_executor_simple.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 56,
      "message": "Function lacks return type hint: async def test_basic_agent_spawning(self, executor):",
      "file": "tests/integration/test_background_executor_simple.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 80,
      "message": "Function lacks return type hint: async def test_multiple_agents(self, executor):",
      "file": "tests/integration/test_background_executor_simple.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 103,
      "message": "Function lacks return type hint: async def test_resource_limits(self, executor):",
      "file": "tests/integration/test_background_executor_simple.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 123,
      "message": "Function lacks return type hint: async def test_execution_modes(self, executor):",
      "file": "tests/integration/test_background_executor_simple.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 143,
      "message": "Function lacks return type hint: async def test_capacity_limits(self, executor):",
      "file": "tests/integration/test_background_executor_simple.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 168,
      "message": "Function lacks return type hint: async def test_event_bus_basic(self, executor):",
      "file": "tests/integration/test_background_executor_simple.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 172,
      "message": "Function lacks return type hint: async def test_handler(event_type: str, data: dict):",
      "file": "tests/integration/test_background_executor_simple.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 191,
      "message": "Function lacks return type hint: async def test_cleanup(self, executor):",
      "file": "tests/integration/test_background_executor_simple.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 211,
      "message": "Function lacks return type hint: async def test_agent_info_persistence(self, executor):",
      "file": "tests/integration/test_background_executor_simple.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 238,
      "message": "Function lacks return type hint: async def test_status_monitoring(self, executor):",
      "file": "tests/integration/test_background_executor_simple.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 111,
      "message": "Function lacks return type hint: async def test_legal_research_to_analysis_handoff(self):",
      "file": "tests/integration/test_bundle_handoffs.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 176,
      "message": "Function lacks return type hint: async def test_analysis_to_documentation_handoff(self):",
      "file": "tests/integration/test_bundle_handoffs.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 243,
      "message": "Function lacks return type hint: async def test_pdf_processing_to_validation_handoff(self):",
      "file": "tests/integration/test_bundle_handoffs.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 306,
      "message": "Function lacks return type hint: async def test_validation_to_analysis_handoff(self):",
      "file": "tests/integration/test_bundle_handoffs.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 363,
      "message": "Function lacks return type hint: async def test_three_agent_workflow_chain(self):",
      "file": "tests/integration/test_bundle_handoffs.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 443,
      "message": "Function lacks return type hint: async def test_parallel_handoff_convergence(self):",
      "file": "tests/integration/test_bundle_handoffs.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 503,
      "message": "Function lacks return type hint: async def test_handoff_with_checkpoint_recovery(self):",
      "file": "tests/integration/test_bundle_handoffs.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 549,
      "message": "Function lacks return type hint: async def test_handoff_bundle_corruption_handling(self):",
      "file": "tests/integration/test_bundle_handoffs.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 572,
      "message": "Function lacks return type hint: async def test_large_context_handoff_performance(self):",
      "file": "tests/integration/test_bundle_handoffs.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 621,
      "message": "Function lacks return type hint: def test_handoff_compression_efficiency(self):",
      "file": "tests/integration/test_bundle_handoffs.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 11,
      "message": "Function lacks return type hint: def timeout_handler(signum, frame):",
      "file": "tests/performance/test_orchestration_overhead.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 19,
      "message": "Function lacks return type hint: def setup_timeout(self):",
      "file": "tests/performance/test_orchestration_overhead.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 25,
      "message": "Function lacks return type hint: def test_hierarchical_overhead(self):",
      "file": "tests/performance/test_orchestration_overhead.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 44,
      "message": "Use logging instead of print statements",
      "file": "tests/performance/test_orchestration_overhead.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 46,
      "message": "Function lacks return type hint: def test_agent_coordination_scaling(self):",
      "file": "tests/performance/test_orchestration_overhead.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 65,
      "message": "Use logging instead of print statements",
      "file": "tests/performance/test_orchestration_overhead.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 67,
      "message": "Function lacks return type hint: def test_pattern_performance(self):",
      "file": "tests/performance/test_orchestration_overhead.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 89,
      "message": "Use logging instead of print statements",
      "file": "tests/performance/test_orchestration_overhead.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 28,
      "message": "Function lacks return type hint: def measure_memory_usage():",
      "file": "tests/performance/test_orchestration_scaling.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 34,
      "message": "Function lacks return type hint: def measure_execution_time(func):",
      "file": "tests/performance/test_orchestration_scaling.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 37,
      "message": "Function lacks return type hint: async def wrapper(*args, **kwargs):",
      "file": "tests/performance/test_orchestration_scaling.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 47,
      "message": "Function lacks return type hint: def calculate_coordination_overhead(",
      "file": "tests/performance/test_orchestration_scaling.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 62,
      "message": "Function lacks return type hint: async def test_100_agent_orchestration(self):",
      "file": "tests/performance/test_orchestration_scaling.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 99,
      "message": "Use logging instead of print statements",
      "file": "tests/performance/test_orchestration_scaling.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 100,
      "message": "Use logging instead of print statements",
      "file": "tests/performance/test_orchestration_scaling.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 101,
      "message": "Use logging instead of print statements",
      "file": "tests/performance/test_orchestration_scaling.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 102,
      "message": "Use logging instead of print statements",
      "file": "tests/performance/test_orchestration_scaling.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 103,
      "message": "Use logging instead of print statements",
      "file": "tests/performance/test_orchestration_scaling.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 106,
      "message": "Function lacks return type hint: async def test_deep_hierarchy_performance(self):",
      "file": "tests/performance/test_orchestration_scaling.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 154,
      "message": "Use logging instead of print statements",
      "file": "tests/performance/test_orchestration_scaling.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 156,
      "message": "Use logging instead of print statements",
      "file": "tests/performance/test_orchestration_scaling.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 164,
      "message": "Function lacks return type hint: async def test_coordination_overhead_scaling(self):",
      "file": "tests/performance/test_orchestration_scaling.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 217,
      "message": "Use logging instead of print statements",
      "file": "tests/performance/test_orchestration_scaling.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 219,
      "message": "Use logging instead of print statements",
      "file": "tests/performance/test_orchestration_scaling.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 224,
      "message": "Use logging instead of print statements",
      "file": "tests/performance/test_orchestration_scaling.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 227,
      "message": "Function lacks return type hint: async def test_pattern_performance_comparison(self):",
      "file": "tests/performance/test_orchestration_scaling.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 277,
      "message": "Use logging instead of print statements",
      "file": "tests/performance/test_orchestration_scaling.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 279,
      "message": "Use logging instead of print statements",
      "file": "tests/performance/test_orchestration_scaling.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 286,
      "message": "Function lacks return type hint: async def test_concurrent_orchestration_performance(self):",
      "file": "tests/performance/test_orchestration_scaling.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 332,
      "message": "Use logging instead of print statements",
      "file": "tests/performance/test_orchestration_scaling.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 333,
      "message": "Use logging instead of print statements",
      "file": "tests/performance/test_orchestration_scaling.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 336,
      "message": "Use logging instead of print statements",
      "file": "tests/performance/test_orchestration_scaling.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 337,
      "message": "Use logging instead of print statements",
      "file": "tests/performance/test_orchestration_scaling.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 338,
      "message": "Use logging instead of print statements",
      "file": "tests/performance/test_orchestration_scaling.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 339,
      "message": "Use logging instead of print statements",
      "file": "tests/performance/test_orchestration_scaling.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 342,
      "message": "Function lacks return type hint: async def test_memory_usage_scaling(self):",
      "file": "tests/performance/test_orchestration_scaling.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 404,
      "message": "Use logging instead of print statements",
      "file": "tests/performance/test_orchestration_scaling.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 407,
      "message": "Use logging instead of print statements",
      "file": "tests/performance/test_orchestration_scaling.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 412,
      "message": "Use logging instead of print statements",
      "file": "tests/performance/test_orchestration_scaling.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 415,
      "message": "Function lacks return type hint: async def test_task_decomposition_performance(self):",
      "file": "tests/performance/test_orchestration_scaling.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 467,
      "message": "Use logging instead of print statements",
      "file": "tests/performance/test_orchestration_scaling.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 469,
      "message": "Use logging instead of print statements",
      "file": "tests/performance/test_orchestration_scaling.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 474,
      "message": "Use logging instead of print statements",
      "file": "tests/performance/test_orchestration_scaling.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 477,
      "message": "Function lacks return type hint: async def test_end_to_end_performance_benchmark(self):",
      "file": "tests/performance/test_orchestration_scaling.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 479,
      "message": "Use logging instead of print statements",
      "file": "tests/performance/test_orchestration_scaling.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 480,
      "message": "Use logging instead of print statements",
      "file": "tests/performance/test_orchestration_scaling.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 481,
      "message": "Use logging instead of print statements",
      "file": "tests/performance/test_orchestration_scaling.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 521,
      "message": "Use logging instead of print statements",
      "file": "tests/performance/test_orchestration_scaling.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 522,
      "message": "Use logging instead of print statements",
      "file": "tests/performance/test_orchestration_scaling.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 523,
      "message": "Use logging instead of print statements",
      "file": "tests/performance/test_orchestration_scaling.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 524,
      "message": "Use logging instead of print statements",
      "file": "tests/performance/test_orchestration_scaling.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 525,
      "message": "Use logging instead of print statements",
      "file": "tests/performance/test_orchestration_scaling.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 526,
      "message": "Use logging instead of print statements",
      "file": "tests/performance/test_orchestration_scaling.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 527,
      "message": "Use logging instead of print statements",
      "file": "tests/performance/test_orchestration_scaling.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 528,
      "message": "Use logging instead of print statements",
      "file": "tests/performance/test_orchestration_scaling.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 529,
      "message": "Use logging instead of print statements",
      "file": "tests/performance/test_orchestration_scaling.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 530,
      "message": "Use logging instead of print statements",
      "file": "tests/performance/test_orchestration_scaling.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 545,
      "message": "Use logging instead of print statements",
      "file": "tests/performance/test_orchestration_scaling.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 550,
      "message": "Use logging instead of print statements",
      "file": "tests/performance/test_orchestration_scaling.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 554,
      "message": "Use logging instead of print statements",
      "file": "tests/performance/test_orchestration_scaling.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 562,
      "message": "Use logging instead of print statements",
      "file": "tests/performance/test_orchestration_scaling.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 12,
      "message": "Function lacks return type hint: def timeout_handler(signum, frame):",
      "file": "tests/performance/test_memory_usage.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 20,
      "message": "Function lacks return type hint: def setup_timeout(self):",
      "file": "tests/performance/test_memory_usage.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 26,
      "message": "Function lacks return type hint: def test_agent_memory_footprint(self):",
      "file": "tests/performance/test_memory_usage.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 42,
      "message": "Use logging instead of print statements",
      "file": "tests/performance/test_memory_usage.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 44,
      "message": "Function lacks return type hint: def test_multi_agent_memory_scaling(self):",
      "file": "tests/performance/test_memory_usage.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 62,
      "message": "Use logging instead of print statements",
      "file": "tests/performance/test_memory_usage.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 64,
      "message": "Function lacks return type hint: def test_memory_cleanup(self):",
      "file": "tests/performance/test_memory_usage.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 82,
      "message": "Use logging instead of print statements",
      "file": "tests/performance/test_memory_usage.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 11,
      "message": "Function lacks return type hint: def timeout_handler(signum, frame):",
      "file": "tests/performance/test_context_efficiency.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 19,
      "message": "Function lacks return type hint: def setup_timeout(self):",
      "file": "tests/performance/test_context_efficiency.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 26,
      "message": "Function lacks return type hint: def test_context_window_usage(self):",
      "file": "tests/performance/test_context_efficiency.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 41,
      "message": "Function lacks return type hint: def test_context_pruning_performance(self):",
      "file": "tests/performance/test_context_efficiency.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 59,
      "message": "Use logging instead of print statements",
      "file": "tests/performance/test_context_efficiency.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 61,
      "message": "Function lacks return type hint: def test_context_recovery(self):",
      "file": "tests/performance/test_context_efficiency.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 11,
      "message": "Function lacks return type hint: def timeout_handler(signum, frame):",
      "file": "tests/performance/test_e2e_performance.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 19,
      "message": "Function lacks return type hint: def setup_timeout(self):",
      "file": "tests/performance/test_e2e_performance.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 25,
      "message": "Function lacks return type hint: def test_simple_task_latency(self):",
      "file": "tests/performance/test_e2e_performance.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 36,
      "message": "Use logging instead of print statements",
      "file": "tests/performance/test_e2e_performance.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 38,
      "message": "Function lacks return type hint: def test_complex_workflow_performance(self):",
      "file": "tests/performance/test_e2e_performance.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 59,
      "message": "Use logging instead of print statements",
      "file": "tests/performance/test_e2e_performance.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 61,
      "message": "Function lacks return type hint: def test_parallel_execution_speedup(self):",
      "file": "tests/performance/test_e2e_performance.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 81,
      "message": "Use logging instead of print statements",
      "file": "tests/performance/test_e2e_performance.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 52,
      "message": "Function lacks return type hint: def __post_init__(self):",
      "file": "core/marketplace/registry.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 79,
      "message": "Function lacks return type hint: def __post_init__(self):",
      "file": "core/marketplace/registry.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 114,
      "message": "Function lacks return type hint: def _load_registry(self):",
      "file": "core/marketplace/registry.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 147,
      "message": "Use logging instead of print statements",
      "file": "core/marketplace/registry.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 150,
      "message": "Function lacks return type hint: def _save_registry(self):",
      "file": "core/marketplace/registry.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 169,
      "message": "Function lacks return type hint: def _update_indexes(self, registration: AgentRegistration):",
      "file": "core/marketplace/registry.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 190,
      "message": "Function lacks return type hint: def _remove_from_indexes(self, registration: AgentRegistration):",
      "file": "core/marketplace/registry.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 239,
      "message": "Function lacks return type hint: async def register_agent(",
      "file": "core/marketplace/registry.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 359,
      "message": "Function lacks return type hint: async def discover_agents(",
      "file": "core/marketplace/registry.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 525,
      "message": "Function lacks return type hint: async def update_agent_rating(",
      "file": "core/marketplace/registry.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 54,
      "message": "Function lacks return type hint: def __post_init__(self):",
      "file": "core/marketplace/security.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 76,
      "message": "Function lacks return type hint: def __post_init__(self):",
      "file": "core/marketplace/security.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 147,
      "message": "Function lacks return type hint: def __post_init__(self):",
      "file": "core/marketplace/security.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 162,
      "message": "Function lacks return type hint: def validate_code(",
      "file": "core/marketplace/security.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 243,
      "message": "Function lacks return type hint: def _analyze_ast(self, tree: ast.AST, filename: str):",
      "file": "core/marketplace/security.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 253,
      "message": "Function lacks return type hint: def _check_imports(self, node: ast.AST, filename: str):",
      "file": "core/marketplace/security.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 290,
      "message": "Function lacks return type hint: def _check_function_calls(self, node: ast.AST, filename: str):",
      "file": "core/marketplace/security.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 321,
      "message": "Function lacks return type hint: def _check_attribute_access(self, node: ast.AST, filename: str):",
      "file": "core/marketplace/security.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 342,
      "message": "Function lacks return type hint: def _check_dangerous_operations(self, node: ast.AST, filename: str):",
      "file": "core/marketplace/security.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 360,
      "message": "Function lacks return type hint: def _check_exec_eval(self, node: ast.AST, filename: str):",
      "file": "core/marketplace/security.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 373,
      "message": "Function lacks return type hint: def _check_file_operations(self, node: ast.AST, filename: str):",
      "file": "core/marketplace/security.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 516,
      "message": "Function lacks return type hint: async def audit_agent(",
      "file": "core/marketplace/security.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 575,
      "message": "Function lacks return type hint: async def _audit_file(",
      "file": "core/marketplace/security.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 599,
      "message": "Function lacks return type hint: async def _audit_directory(",
      "file": "core/marketplace/security.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 651,
      "message": "Function lacks return type hint: def _validate_metadata_consistency(",
      "file": "core/marketplace/security.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 690,
      "message": "Function lacks return type hint: def create_sandbox(",
      "file": "core/marketplace/security.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 738,
      "message": "Function lacks return type hint: def verify_signature(",
      "file": "core/marketplace/security.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 838,
      "message": "Function lacks return type hint: def __enter__(self):",
      "file": "core/marketplace/security.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 844,
      "message": "Function lacks return type hint: def __exit__(self, exc_type, exc_val, exc_tb):",
      "file": "core/marketplace/security.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 849,
      "message": "Function lacks return type hint: def _apply_resource_limits(self):",
      "file": "core/marketplace/security.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 864,
      "message": "Use logging instead of print statements",
      "file": "core/marketplace/security.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 866,
      "message": "Function lacks return type hint: def _setup_restricted_environment(self):",
      "file": "core/marketplace/security.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 883,
      "message": "Function lacks return type hint: def _create_restricted_function(self, func_name: str):",
      "file": "core/marketplace/security.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 886,
      "message": "Function lacks return type hint: def restricted_func(*args, **kwargs):",
      "file": "core/marketplace/security.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 891,
      "message": "Function lacks return type hint: def _restore_environment(self):",
      "file": "core/marketplace/security.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 899,
      "message": "Function lacks return type hint: def _cleanup_temp_dirs(self):",
      "file": "core/marketplace/security.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 907,
      "message": "Use logging instead of print statements",
      "file": "core/marketplace/security.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 916,
      "message": "Function lacks return type hint: def timeout(self, seconds: int = None):",
      "file": "core/marketplace/security.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 920,
      "message": "Function lacks return type hint: def timeout_handler(signum, frame):",
      "file": "core/marketplace/security.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 67,
      "message": "Function lacks return type hint: def __post_init__(self):",
      "file": "core/marketplace/plugin_system.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 99,
      "message": "Function lacks return type hint: def __post_init__(self):",
      "file": "core/marketplace/plugin_system.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 136,
      "message": "Function lacks return type hint: def register_hook(self, event: str, handler: Callable):",
      "file": "core/marketplace/plugin_system.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 142,
      "message": "Function lacks return type hint: async def emit_event(self, event: str, data: Dict[str, Any] = None):",
      "file": "core/marketplace/plugin_system.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 152,
      "message": "Use logging instead of print statements",
      "file": "core/marketplace/plugin_system.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 195,
      "message": "Function lacks return type hint: async def discover_plugins(",
      "file": "core/marketplace/plugin_system.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 247,
      "message": "Use logging instead of print statements",
      "file": "core/marketplace/plugin_system.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 275,
      "message": "Function lacks return type hint: async def install_plugin(",
      "file": "core/marketplace/plugin_system.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 385,
      "message": "Function lacks return type hint: async def load_plugin(",
      "file": "core/marketplace/plugin_system.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 772,
      "message": "Function lacks return type hint: def register_event_handler(self, event: str, handler: Callable):",
      "file": "core/marketplace/plugin_system.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 778,
      "message": "Function lacks return type hint: async def _emit_event(self, event: str, data: Dict[str, Any] = None):",
      "file": "core/marketplace/plugin_system.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 788,
      "message": "Use logging instead of print statements",
      "file": "core/marketplace/plugin_system.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 791,
      "message": "Function lacks return type hint: def plugin_sandbox(self, plugin_id: str):",
      "file": "core/marketplace/plugin_system.py"
    },
    {
      "type": "undocumented_dependencies",
      "severity": "high",
      "message": "Third-party imports without requirements.txt: pygments.lexers.julia, mypy.semanal, virtualenv.app_data, _pytest.config.compat, pydantic.v1.json, pygments.lexers.lilypond, yaml._yaml, pydantic.v1.error_wrappers, pre_commit.commands.install_uninstall, gc, pygments.lexers.diff, _pytest._py.path, virtualenv.seed.wheels.embed, pydantic.v1.color, psutil.tests, annotated_types, urllib.error, core.autonomous, mypy.options, pre_commit.prefix, pygments.lexers.jvm, click, core.handoff, pre_commit.hook, _pytest.main, pre_commit.languages.python, _pytest.mark.structures, virtualenv.create.via_global_ref.builtin.via_global_self_do, mypy.server.trigger, virtualenv.info, pre_commit.languages, pygments.lexers.crystal, pygments.formatters.latex, mypy.nodes, pygments.lexers.markup, colorsys, codecs, zoneinfo, pygments.lexers.configs, warnings, _pytest.outcomes, pre_commit.errors, mypy.version, zipfile, virtualenv.config.env_var, pydantic.v1.networks, pygments.lexers._qlik_builtins, pydantic_core, identify.identify, mypy.plugins, pre_commit.yaml, docutils, core.agent, core.tools, pygments.lexers.r, glob, virtualenv.create.via_global_ref.store, pydantic.v1.types, pygments.lexers.python, _pytest.mark, pygments.lexers.smalltalk, pydantic.warnings, pygments.lexers.matlab, mypy.plugins.common, _pytest.stash, pygments.lexers.php, pygments.lexers.data, locale, packaging.licenses._spdx, email, posixpath, _pytest._io.wcwidth, collections.abc,, identify.vendor, builtins, decimal, pygments.lexers.ada, pygments.filters, pygments.lexers._stata_builtins, pygments.lexers.automation, _pytest.warning_types, pygments.lexers.theorem, core.marketplace, pydantic.v1.annotated_types, virtualenv.activation.via_template, site, pygments.lexers.graphics, virtualenv.create.describe, ast, _pytest.recwarn, pydantic.v1.version, filelock, _pytest.python, pygments.lexers.iolang, core.triggers, mypy.plugin, pygments.lexer, ssl, _pytest._code.code, pre_commit.git, virtualenv.util.path, pydantic.v1.fields, virtualenv.create.via_global_ref.api, pydantic._internal._import_utils, pygments.lexers.webmisc, collections.abc, pygments.lexers.lisp, pygments.lexers._julia_builtins, runpy, pygments.unistring, operator, importlib.machinery, pygments.lexers.testing, pre_commit.commands.init_templatedir, pprint, core.context_bundles, ipaddress, pygments.lexers.haxe, contextvars, importlib.util, _string, pre_commit.staged_files_only, agents.{module_name}, markupsafe, pygments.lexers._mapping, pygments.modeline, pygments.lexers.sgf, docutils.parsers.rst, textwrap, _pytest._io.pprint, pre_commit.logging_handler, asyncio, _pytest._code.source, multiprocessing, pre_commit.commands.validate_config, ctypes, pygments.lexers.factor, pre_commit.commands.hook_impl, pre_commit.yaml_rewrite, pygments.lexers.ooc, pre_commit.store, select, pre_commit.error_handler, pygments.lexers.esoteric, abc, pydantic, agents.code_review_agent, virtualenv.create.via_global_ref.builtin.ref, _pytest.tmpdir, pydantic.v1.utils, psutil, _pytest.monkeypatch, importlib.abc, pygments.lexers._ada_builtins, mypy.type_visitor, weakref, sphinx.util.nodes, semver, pygments.lexers, pydantic.v1.parse, copy, pygments.lexers.dotnet, tarfile, traceback, pydantic.v1.env_settings, pydantic.v1.decorator, pygments.lexers.dylan, concurrent.futures, email.header, pygments.lexers.dsls, pygments.lexers.lean, pygments.lexers._lilypond_builtins, the, pygments.lexers._csound_builtins, _pytest.config, csv, jinja2, pre_commit.clientlib, typing_inspection, pre_commit, pygments.lexers.make, pygments.regexopt, tokenize, virtualenv.seed.wheels.util, core.background_executor, io, pydantic.types, _pytest._version, pygments.token, core.pipeline, pygments.lexers.basic, core.dynamic_primer, agents.test_runner_agent, pygments.lexers.smv, such, distlib.scripts, core.agent_executor, importlib, _pytest.logging, pygments.lexers.console, yaml.nodes, unittest.mock, resource, random, pygments.lexers.html, argparse, virtualenv.config.cli.parser, base64, unittest, pydantic_core.core_schema, pygments.formatters._mapping, pydantic.v1.validators, hmac, pygments.lexers.business, email.parser, _pytest.pathlib, signal, pygments.plugin, pygments.styles._mapping, core.context, pydantic._internal._internal_dataclass, pre_commit.envcontext, pygments.lexers.pawn, pygments.lexers.actionscript, any, errno, marshal, _pytest.assertion.util, mypy.typevars, virtualenv.seed.embed.base_embed, psutil._common, atexit, pre_commit.commands.run, pygments.formatter, pygments.lexers.css, _pytest.freeze_support, threading, pre_commit.commands.autoupdate, pydantic.v1.class_validators, pygments.lexers.snobol, pygments.lexers.modula2, pygments.lexers.tcl, pluggy, time, pydantic.v1.datetime_parse, pygments.styles, dataclasses, _pytest.doctest, virtualenv.seed.wheels, pre_commit.commands.gc, numbers, core.orchestrator, py, timeit, urllib.request, core.hierarchical_orchestrator, hashlib, pre_commit.all_languages, xml.etree, urllib.parse, yaml, identify, sysconfig, _pytest._py.error, platformdirs, virtualenv.create.via_global_ref.builtin.builtin_way, mypy.util, importlib.metadata, pygments.lexers.urbi, _pytest, pygments.lexers.pascal, orchestration.patterns, pygments.lexers._scheme_builtins, pygments.lexers.robotframework, core.cli_primer, bdb, pygments.formatters.terminal256, pydantic.main, email.policy, types, string, typing_inspection.introspection, pygments.scanner, mypy.types, pygments.lexers.algebra, configparser, platform, iniconfig, virtualenv.cache, core.github_integration, _pytest.pytester, _pytest.tracemalloc, pydantic.v1.config, pydantic.errors, winreg, statistics, _pytest.capture, pre_commit.commands.migrate_config, pre_commit.languages.docker, pickle, fnmatch, pkgutil, pygments.lexers.modeling, _pytest.hookspec, pygments.lexers._usd_builtins, shutil, pygments.lexers.objective, functools, pygments.filter, pygments.lexers._css_builtins, pygments.lexers.mime, fractions, pytest, virtualenv.discovery.py_spec, docutils.statemachine, pygments.lexers.textfmts, mypy.typeops, pygments.lexers.ruby, virtualenv.discovery.cached_py_info, _pytest.deprecated, collections, zlib, virtualenv.app_data.na, pre_commit.commands.sample_config, pygments.lexers.scripting, codecs,, pygments.lexers.perl, _pytest.assertion, contextlib, pre_commit.constants, pre_commit.parse_shebang, _pytest.compat, pre_commit.lang_base, cfgv, __future__, pre_commit.commands.try_repo, uuid, virtualenv.util.lock, enum, pygments.lexers.javascript, pygments.lexers.go, shlex, pygments.formatters, gzip, itertools, core.state, _pytest.raises, _pytest.python_api, virtualenv.run.session, pre_commit.repository, a, pygments.lexers.nimrod, _pytest._io, hypothesis.strategies, _pytest.assertion.rewrite, virtualenv.util.error, virtualenv.config.convert, pydantic.v1.schema, socket, pydantic.color, pygments.console, pygments.lexers.c_like, pygments.lexers.c_cpp, pygments.lexers.fortran, pydantic.v1.errors, inspect, pygments.lexers.sql, REPL.REPLCompletions, unicodedata, pygments.lexers.felix, pre_commit.xargs, setuptools, virtualenv.create.creator, pygments.lexers._openedge_builtins, pygments.lexers.textedit, virtualenv.report, pygments.lexers.ml, typing_extensions, _pytest._code, _pytest._io.saferepr, virtualenv.util.subprocess, _pytest.debugging, pygments.lexers.special, core.context_optimizer, email.message, pygments.lexers.installers, pydantic_core._pydantic_core, mypy.errorcodes, pydantic.v1.main, datetime,, mypy.expandtype, _pytest.config.exceptions, virtualenv.seed.wheels.periodic_update, pygments.lexers.rust, mypy.state, _pytest.config.argparsing, pygments.lexers.shell, xml.etree.ElementTree, math, pygments.lexers.prolog, _pytest.terminal, bisect, struct, pygments.lexers.web, pre_commit.color, virtualenv.seed.seeder, pydantic._internal, reprlib, pydantic.v1.typing, tempfile, virtualenv.config.ini, pygments.formatters.terminal, virtualenv.discovery.py_info, pre_commit.commands.clean, logging, _pytest.fixtures, pygments.util, _pytest.cacheprovider, _pytest.runner, pygments.lexers.erlang, pygments.lexers.rebol, pygments, pygments.lexers.idl, pydantic.v1, pre_commit.main, virtualenv.version, pydantic.v1.tools, core.base, email.feedparser, py_compile, getpass, importlib.resources, keyword, pygments.lexers.d, pygments.lexers.haskell, pygments.style, pre_commit.commands.validate_manifest, virtualenv.util.zipapp, _pytest.nodes, zipimport, pygments.lexers.ecl, pre_commit.util, pydantic.version, _pytest.legacypath, stat, _pytest.scope, pygments.cmdline, _pytest.reports, sqlite3"
    },
    {
      "file": "/Users/dbraman/Documents/GitHub/12-factor-agents/core/triggers.py",
      "type": "unsafe_deserialization",
      "severity": "high",
      "message": "Unsafe deserialization with pickle"
    },
    {
      "file": "/Users/dbraman/Documents/GitHub/12-factor-agents/core/cli_primer.py",
      "type": "unsafe_deserialization",
      "severity": "high",
      "message": "Unsafe deserialization with pickle"
    },
    {
      "file": "/Users/dbraman/Documents/GitHub/12-factor-agents/core/github_integration.py",
      "type": "dangerous_function",
      "severity": "high",
      "message": "Use of eval() or exec() is dangerous"
    },
    {
      "file": "/Users/dbraman/Documents/GitHub/12-factor-agents/core/github_integration.py",
      "type": "unsafe_deserialization",
      "severity": "high",
      "message": "Unsafe deserialization with pickle"
    },
    {
      "file": "/Users/dbraman/Documents/GitHub/12-factor-agents/core/tools.py",
      "type": "unsafe_deserialization",
      "severity": "high",
      "message": "Unsafe deserialization with pickle"
    },
    {
      "file": "/Users/dbraman/Documents/GitHub/12-factor-agents/core/background_executor.py",
      "type": "unsafe_deserialization",
      "severity": "high",
      "message": "Unsafe deserialization with pickle"
    },
    {
      "file": "/Users/dbraman/Documents/GitHub/12-factor-agents/core/agent_executor.py",
      "type": "unsafe_deserialization",
      "severity": "high",
      "message": "Unsafe deserialization with pickle"
    },
    {
      "file": "/Users/dbraman/Documents/GitHub/12-factor-agents/core/agent.py",
      "type": "unsafe_deserialization",
      "severity": "high",
      "message": "Unsafe deserialization with pickle"
    },
    {
      "file": "/Users/dbraman/Documents/GitHub/12-factor-agents/core/context_bundles.py",
      "type": "unsafe_deserialization",
      "severity": "high",
      "message": "Unsafe deserialization with pickle"
    },
    {
      "file": "/Users/dbraman/Documents/GitHub/12-factor-agents/bin/event.py",
      "type": "unsafe_deserialization",
      "severity": "high",
      "message": "Unsafe deserialization with pickle"
    },
    {
      "file": "/Users/dbraman/Documents/GitHub/12-factor-agents/tests/test_dynamic_primer.py",
      "type": "unsafe_deserialization",
      "severity": "high",
      "message": "Unsafe deserialization with pickle"
    },
    {
      "file": "/Users/dbraman/Documents/GitHub/12-factor-agents/tests/test_orchestration_patterns.py",
      "type": "dangerous_function",
      "severity": "high",
      "message": "Use of eval() or exec() is dangerous"
    },
    {
      "file": "/Users/dbraman/Documents/GitHub/12-factor-agents/tests/test_marketplace.py",
      "type": "dangerous_function",
      "severity": "high",
      "message": "Use of eval() or exec() is dangerous"
    },
    {
      "file": "/Users/dbraman/Documents/GitHub/12-factor-agents/tests/test_background_executor.py",
      "type": "unsafe_deserialization",
      "severity": "high",
      "message": "Unsafe deserialization with pickle"
    },
    {
      "file": "/Users/dbraman/Documents/GitHub/12-factor-agents/agents/simple_issue_closer.py",
      "type": "unsafe_deserialization",
      "severity": "high",
      "message": "Unsafe deserialization with pickle"
    },
    {
      "file": "/Users/dbraman/Documents/GitHub/12-factor-agents/agents/issue_processor_agent.py",
      "type": "unsafe_deserialization",
      "severity": "high",
      "message": "Unsafe deserialization with pickle"
    },
    {
      "file": "/Users/dbraman/Documents/GitHub/12-factor-agents/agents/testing_agent.py",
      "type": "dangerous_function",
      "severity": "high",
      "message": "Use of eval() or exec() is dangerous"
    },
    {
      "file": "/Users/dbraman/Documents/GitHub/12-factor-agents/agents/issue_orchestrator_agent.py",
      "type": "unsafe_deserialization",
      "severity": "high",
      "message": "Unsafe deserialization with pickle"
    },
    {
      "file": "/Users/dbraman/Documents/GitHub/12-factor-agents/agents/code_review_agent.py",
      "type": "dangerous_function",
      "severity": "high",
      "message": "Use of eval() or exec() is dangerous"
    },
    {
      "file": "/Users/dbraman/Documents/GitHub/12-factor-agents/agents/code_review_agent.py",
      "type": "unsafe_deserialization",
      "severity": "high",
      "message": "Unsafe deserialization with pickle"
    },
    {
      "file": "/Users/dbraman/Documents/GitHub/12-factor-agents/agents/enhanced_workflow_agent.py",
      "type": "dangerous_function",
      "severity": "high",
      "message": "Use of eval() or exec() is dangerous"
    },
    {
      "file": "/Users/dbraman/Documents/GitHub/12-factor-agents/agents/event_system_agent.py",
      "type": "unsafe_deserialization",
      "severity": "high",
      "message": "Unsafe deserialization with pickle"
    },
    {
      "file": "/Users/dbraman/Documents/GitHub/12-factor-agents/scripts/marketplace_demo.py",
      "type": "dangerous_function",
      "severity": "high",
      "message": "Use of eval() or exec() is dangerous"
    },
    {
      "file": "/Users/dbraman/Documents/GitHub/12-factor-agents/.venv/lib/python3.13/site-packages/nodeenv.py",
      "type": "unsafe_deserialization",
      "severity": "high",
      "message": "Unsafe deserialization with pickle"
    },
    {
      "file": "/Users/dbraman/Documents/GitHub/12-factor-agents/.venv/lib/python3.13/site-packages/typing_extensions.py",
      "type": "dangerous_function",
      "severity": "high",
      "message": "Use of eval() or exec() is dangerous"
    },
    {
      "file": "/Users/dbraman/Documents/GitHub/12-factor-agents/.venv/lib/python3.13/site-packages/packaging/_parser.py",
      "type": "dangerous_function",
      "severity": "high",
      "message": "Use of eval() or exec() is dangerous"
    },
    {
      "file": "/Users/dbraman/Documents/GitHub/12-factor-agents/.venv/lib/python3.13/site-packages/distlib/locators.py",
      "type": "unsafe_deserialization",
      "severity": "high",
      "message": "Unsafe deserialization with pickle"
    },
    {
      "file": "/Users/dbraman/Documents/GitHub/12-factor-agents/.venv/lib/python3.13/site-packages/distlib/metadata.py",
      "type": "unsafe_deserialization",
      "severity": "high",
      "message": "Unsafe deserialization with pickle"
    },
    {
      "file": "/Users/dbraman/Documents/GitHub/12-factor-agents/.venv/lib/python3.13/site-packages/distlib/util.py",
      "type": "unsafe_deserialization",
      "severity": "high",
      "message": "Unsafe deserialization with pickle"
    },
    {
      "file": "/Users/dbraman/Documents/GitHub/12-factor-agents/.venv/lib/python3.13/site-packages/distlib/scripts.py",
      "type": "dangerous_function",
      "severity": "high",
      "message": "Use of eval() or exec() is dangerous"
    },
    {
      "file": "/Users/dbraman/Documents/GitHub/12-factor-agents/.venv/lib/python3.13/site-packages/distlib/wheel.py",
      "type": "unsafe_deserialization",
      "severity": "high",
      "message": "Unsafe deserialization with pickle"
    },
    {
      "file": "/Users/dbraman/Documents/GitHub/12-factor-agents/.venv/lib/python3.13/site-packages/jinja2/debug.py",
      "type": "dangerous_function",
      "severity": "high",
      "message": "Use of eval() or exec() is dangerous"
    },
    {
      "file": "/Users/dbraman/Documents/GitHub/12-factor-agents/.venv/lib/python3.13/site-packages/jinja2/lexer.py",
      "type": "dangerous_function",
      "severity": "high",
      "message": "Use of eval() or exec() is dangerous"
    },
    {
      "file": "/Users/dbraman/Documents/GitHub/12-factor-agents/.venv/lib/python3.13/site-packages/jinja2/environment.py",
      "type": "dangerous_function",
      "severity": "high",
      "message": "Use of eval() or exec() is dangerous"
    },
    {
      "file": "/Users/dbraman/Documents/GitHub/12-factor-agents/.venv/lib/python3.13/site-packages/jinja2/nativetypes.py",
      "type": "dangerous_function",
      "severity": "high",
      "message": "Use of eval() or exec() is dangerous"
    },
    {
      "file": "/Users/dbraman/Documents/GitHub/12-factor-agents/.venv/lib/python3.13/site-packages/jinja2/nodes.py",
      "type": "dangerous_function",
      "severity": "high",
      "message": "Use of eval() or exec() is dangerous"
    },
    {
      "file": "/Users/dbraman/Documents/GitHub/12-factor-agents/.venv/lib/python3.13/site-packages/pre_commit/repository.py",
      "type": "unsafe_deserialization",
      "severity": "high",
      "message": "Unsafe deserialization with pickle"
    },
    {
      "file": "/Users/dbraman/Documents/GitHub/12-factor-agents/.venv/lib/python3.13/site-packages/semver/_deprecated.py",
      "type": "hardcoded_secret",
      "severity": "critical",
      "message": "Potential hardcoded secret detected"
    },
    {
      "file": "/Users/dbraman/Documents/GitHub/12-factor-agents/.venv/lib/python3.13/site-packages/pluggy/_hooks.py",
      "type": "dangerous_function",
      "severity": "high",
      "message": "Use of eval() or exec() is dangerous"
    },
    {
      "file": "/Users/dbraman/Documents/GitHub/12-factor-agents/.venv/lib/python3.13/site-packages/pluggy/_manager.py",
      "type": "dangerous_function",
      "severity": "high",
      "message": "Use of eval() or exec() is dangerous"
    },
    {
      "file": "/Users/dbraman/Documents/GitHub/12-factor-agents/.venv/lib/python3.13/site-packages/pydantic/types.py",
      "type": "hardcoded_secret",
      "severity": "critical",
      "message": "Potential hardcoded secret detected"
    },
    {
      "file": "/Users/dbraman/Documents/GitHub/12-factor-agents/.venv/lib/python3.13/site-packages/typing_inspection/typing_objects.py",
      "type": "dangerous_function",
      "severity": "high",
      "message": "Use of eval() or exec() is dangerous"
    },
    {
      "file": "/Users/dbraman/Documents/GitHub/12-factor-agents/.venv/lib/python3.13/site-packages/_pytest/skipping.py",
      "type": "dangerous_function",
      "severity": "high",
      "message": "Use of eval() or exec() is dangerous"
    },
    {
      "file": "/Users/dbraman/Documents/GitHub/12-factor-agents/.venv/lib/python3.13/site-packages/_pytest/pytester.py",
      "type": "dangerous_function",
      "severity": "high",
      "message": "Use of eval() or exec() is dangerous"
    },
    {
      "file": "/Users/dbraman/Documents/GitHub/12-factor-agents/.venv/lib/python3.13/site-packages/_pytest/cacheprovider.py",
      "type": "unsafe_deserialization",
      "severity": "high",
      "message": "Unsafe deserialization with pickle"
    },
    {
      "file": "/Users/dbraman/Documents/GitHub/12-factor-agents/.venv/lib/python3.13/site-packages/_pytest/mark/__init__.py",
      "type": "dangerous_function",
      "severity": "high",
      "message": "Use of eval() or exec() is dangerous"
    },
    {
      "file": "/Users/dbraman/Documents/GitHub/12-factor-agents/.venv/lib/python3.13/site-packages/_pytest/mark/expression.py",
      "type": "dangerous_function",
      "severity": "high",
      "message": "Use of eval() or exec() is dangerous"
    },
    {
      "file": "/Users/dbraman/Documents/GitHub/12-factor-agents/.venv/lib/python3.13/site-packages/_pytest/_code/code.py",
      "type": "dangerous_function",
      "severity": "high",
      "message": "Use of eval() or exec() is dangerous"
    },
    {
      "file": "/Users/dbraman/Documents/GitHub/12-factor-agents/.venv/lib/python3.13/site-packages/_pytest/assertion/rewrite.py",
      "type": "dangerous_function",
      "severity": "high",
      "message": "Use of eval() or exec() is dangerous"
    },
    {
      "file": "/Users/dbraman/Documents/GitHub/12-factor-agents/.venv/lib/python3.13/site-packages/_pytest/_py/path.py",
      "type": "dangerous_function",
      "severity": "high",
      "message": "Use of eval() or exec() is dangerous"
    },
    {
      "file": "/Users/dbraman/Documents/GitHub/12-factor-agents/.venv/lib/python3.13/site-packages/psutil/tests/test_connections.py",
      "type": "dangerous_function",
      "severity": "high",
      "message": "Use of eval() or exec() is dangerous"
    },
    {
      "file": "/Users/dbraman/Documents/GitHub/12-factor-agents/.venv/lib/python3.13/site-packages/psutil/tests/test_misc.py",
      "type": "unsafe_deserialization",
      "severity": "high",
      "message": "Unsafe deserialization with pickle"
    },
    {
      "file": "/Users/dbraman/Documents/GitHub/12-factor-agents/.venv/lib/python3.13/site-packages/pydantic/v1/config.py",
      "type": "unsafe_deserialization",
      "severity": "high",
      "message": "Unsafe deserialization with pickle"
    },
    {
      "file": "/Users/dbraman/Documents/GitHub/12-factor-agents/.venv/lib/python3.13/site-packages/pydantic/v1/tools.py",
      "type": "unsafe_deserialization",
      "severity": "high",
      "message": "Unsafe deserialization with pickle"
    },
    {
      "file": "/Users/dbraman/Documents/GitHub/12-factor-agents/.venv/lib/python3.13/site-packages/pydantic/v1/utils.py",
      "type": "dangerous_function",
      "severity": "high",
      "message": "Use of eval() or exec() is dangerous"
    },
    {
      "file": "/Users/dbraman/Documents/GitHub/12-factor-agents/.venv/lib/python3.13/site-packages/pydantic/v1/parse.py",
      "type": "unsafe_deserialization",
      "severity": "high",
      "message": "Unsafe deserialization with pickle"
    },
    {
      "file": "/Users/dbraman/Documents/GitHub/12-factor-agents/.venv/lib/python3.13/site-packages/pydantic/_internal/_typing_extra.py",
      "type": "dangerous_function",
      "severity": "high",
      "message": "Use of eval() or exec() is dangerous"
    },
    {
      "file": "/Users/dbraman/Documents/GitHub/12-factor-agents/.venv/lib/python3.13/site-packages/pydantic/_internal/_namespace_utils.py",
      "type": "dangerous_function",
      "severity": "high",
      "message": "Use of eval() or exec() is dangerous"
    },
    {
      "file": "/Users/dbraman/Documents/GitHub/12-factor-agents/.venv/lib/python3.13/site-packages/pydantic/deprecated/parse.py",
      "type": "unsafe_deserialization",
      "severity": "high",
      "message": "Unsafe deserialization with pickle"
    },
    {
      "file": "/Users/dbraman/Documents/GitHub/12-factor-agents/.venv/lib/python3.13/site-packages/virtualenv/app_data/via_disk_folder.py",
      "type": "unsafe_deserialization",
      "severity": "high",
      "message": "Unsafe deserialization with pickle"
    },
    {
      "file": "/Users/dbraman/Documents/GitHub/12-factor-agents/.venv/lib/python3.13/site-packages/virtualenv/discovery/py_info.py",
      "type": "dangerous_function",
      "severity": "high",
      "message": "Use of eval() or exec() is dangerous"
    },
    {
      "file": "/Users/dbraman/Documents/GitHub/12-factor-agents/.venv/lib/python3.13/site-packages/virtualenv/discovery/py_info.py",
      "type": "unsafe_deserialization",
      "severity": "high",
      "message": "Unsafe deserialization with pickle"
    },
    {
      "file": "/Users/dbraman/Documents/GitHub/12-factor-agents/.venv/lib/python3.13/site-packages/virtualenv/create/creator.py",
      "type": "dangerous_function",
      "severity": "high",
      "message": "Use of eval() or exec() is dangerous"
    },
    {
      "file": "/Users/dbraman/Documents/GitHub/12-factor-agents/.venv/lib/python3.13/site-packages/virtualenv/create/creator.py",
      "type": "unsafe_deserialization",
      "severity": "high",
      "message": "Unsafe deserialization with pickle"
    },
    {
      "file": "/Users/dbraman/Documents/GitHub/12-factor-agents/.venv/lib/python3.13/site-packages/virtualenv/seed/wheels/periodic_update.py",
      "type": "unsafe_deserialization",
      "severity": "high",
      "message": "Unsafe deserialization with pickle"
    },
    {
      "file": "/Users/dbraman/Documents/GitHub/12-factor-agents/.venv/lib/python3.13/site-packages/pre_commit/languages/r.py",
      "type": "dangerous_function",
      "severity": "high",
      "message": "Use of eval() or exec() is dangerous"
    },
    {
      "file": "/Users/dbraman/Documents/GitHub/12-factor-agents/.venv/lib/python3.13/site-packages/pre_commit/languages/docker.py",
      "type": "unsafe_deserialization",
      "severity": "high",
      "message": "Unsafe deserialization with pickle"
    },
    {
      "file": "/Users/dbraman/Documents/GitHub/12-factor-agents/.venv/lib/python3.13/site-packages/pre_commit/languages/golang.py",
      "type": "unsafe_deserialization",
      "severity": "high",
      "message": "Unsafe deserialization with pickle"
    },
    {
      "file": "/Users/dbraman/Documents/GitHub/12-factor-agents/.venv/lib/python3.13/site-packages/pygments/lexers/_julia_builtins.py",
      "type": "dangerous_function",
      "severity": "high",
      "message": "Use of eval() or exec() is dangerous"
    },
    {
      "file": "/Users/dbraman/Documents/GitHub/12-factor-agents/.venv/lib/python3.13/site-packages/pygments/lexers/__init__.py",
      "type": "dangerous_function",
      "severity": "high",
      "message": "Use of eval() or exec() is dangerous"
    },
    {
      "file": "/Users/dbraman/Documents/GitHub/12-factor-agents/.venv/lib/python3.13/site-packages/pygments/lexers/special.py",
      "type": "dangerous_function",
      "severity": "high",
      "message": "Use of eval() or exec() is dangerous"
    },
    {
      "file": "/Users/dbraman/Documents/GitHub/12-factor-agents/.venv/lib/python3.13/site-packages/pygments/formatters/__init__.py",
      "type": "dangerous_function",
      "severity": "high",
      "message": "Use of eval() or exec() is dangerous"
    },
    {
      "file": "/Users/dbraman/Documents/GitHub/12-factor-agents/.venv/lib/python3.13/site-packages/packaging/licenses/__init__.py",
      "type": "dangerous_function",
      "severity": "high",
      "message": "Use of eval() or exec() is dangerous"
    },
    {
      "file": "/Users/dbraman/Documents/GitHub/12-factor-agents/core/marketplace/registry.py",
      "type": "unsafe_deserialization",
      "severity": "high",
      "message": "Unsafe deserialization with pickle"
    },
    {
      "file": "/Users/dbraman/Documents/GitHub/12-factor-agents/core/marketplace/security.py",
      "type": "dangerous_function",
      "severity": "high",
      "message": "Use of eval() or exec() is dangerous"
    },
    {
      "file": "/Users/dbraman/Documents/GitHub/12-factor-agents/core/marketplace/plugin_system.py",
      "type": "unsafe_deserialization",
      "severity": "high",
      "message": "Unsafe deserialization with pickle"
    }
  ]
}