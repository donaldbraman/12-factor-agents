{
  "review_date": "2025-09-08T09:56:32.859950",
  "directory": "/Users/dbraman/Documents/GitHub/12-factor-agents",
  "files_reviewed": 575,
  "total_issues": 167,
  "issues_by_type": {
    "missing_type_hints": 46,
    "print_statement": 88,
    "todo_comment": 2,
    "hardcoded_path": 2,
    "missing_docstring": 2,
    "undocumented_dependencies": 1,
    "dangerous_function": 21,
    "unsafe_deserialization": 4,
    "hardcoded_secret": 1
  },
  "github_issues_created": [],
  "all_findings": [
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 95,
      "message": "Function lacks return type hint: def register_file_watcher(self, path: str, pattern: str = \"*\",",
      "file": "core/triggers.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 120,
      "message": "Function lacks return type hint: def register_schedule(self, cron_expr: str, handler: Callable,",
      "file": "core/triggers.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 163,
      "message": "Use logging instead of print statements",
      "file": "core/triggers.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 171,
      "message": "Use logging instead of print statements",
      "file": "core/triggers.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 265,
      "message": "Function lacks return type hint: def process_loop():",
      "file": "core/triggers.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 274,
      "message": "Function lacks return type hint: def watcher_loop():",
      "file": "core/triggers.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 284,
      "message": "Function lacks return type hint: def scheduler_loop():",
      "file": "core/triggers.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 36,
      "message": "Function lacks return type hint: def _load_all_prompts(self):",
      "file": "core/prompt_manager.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 41,
      "message": "Function lacks return type hint: def _load_prompt_file(self, path: Path):",
      "file": "core/prompt_manager.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 65,
      "message": "Use logging instead of print statements",
      "file": "core/prompt_manager.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 127,
      "message": "Use logging instead of print statements",
      "file": "core/prompt_manager.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 132,
      "message": "Function lacks return type hint: def register_prompt(self, name: str, template: str, metadata: Dict[str, Any] = None):",
      "file": "core/prompt_manager.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 152,
      "message": "Function lacks return type hint: def save_prompt(self, name: str, template: str, metadata: Dict[str, Any] = None):",
      "file": "core/prompt_manager.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 177,
      "message": "Function lacks return type hint: def clear_cache(self):",
      "file": "core/prompt_manager.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 18,
      "message": "Function lacks return type hint: def __lt__(self, other):",
      "file": "core/context.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 40,
      "message": "Function lacks return type hint: def set_system_prompt(self, prompt: str):",
      "file": "core/context.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 44,
      "message": "Function lacks return type hint: def add_context(self, content: str, priority: int = 5, source: str = \"user\"):",
      "file": "core/context.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 120,
      "message": "Function lacks return type hint: def clear(self):",
      "file": "core/context.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 124,
      "message": "Function lacks return type hint: def remove_old_context(self, keep_recent: int = 10):",
      "file": "core/context.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 87,
      "message": "Function lacks return type hint: def pause(self):",
      "file": "core/agent.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 105,
      "message": "Function lacks return type hint: def save_checkpoint(self):",
      "file": "core/agent.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 135,
      "message": "Function lacks return type hint: def add_context(self, content: str, priority: int = 5):",
      "file": "core/agent.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 184,
      "message": "Function lacks return type hint: def _load_agent_prompt(self):",
      "file": "core/agent.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 210,
      "message": "Function lacks return type hint: def set_prompt_variables(self, **variables):",
      "file": "core/agent.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 28,
      "message": "Function lacks return type hint: def update(self, tool_response: 'ToolResponse'):",
      "file": "core/state.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 66,
      "message": "Function lacks return type hint: def set(self, key: str, value: Any, state_type: str = \"business\"):",
      "file": "core/state.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 113,
      "message": "Function lacks return type hint: def clear_errors(self):",
      "file": "core/state.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 422,
      "message": "Use logging instead of print statements",
      "file": "agents/uv_migration_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 427,
      "message": "Use logging instead of print statements",
      "file": "agents/uv_migration_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 430,
      "message": "Use logging instead of print statements",
      "file": "agents/uv_migration_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 434,
      "message": "Use logging instead of print statements",
      "file": "agents/uv_migration_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 435,
      "message": "Use logging instead of print statements",
      "file": "agents/uv_migration_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 436,
      "message": "Use logging instead of print statements",
      "file": "agents/uv_migration_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 439,
      "message": "Use logging instead of print statements",
      "file": "agents/uv_migration_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 441,
      "message": "Use logging instead of print statements",
      "file": "agents/uv_migration_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 287,
      "message": "Use logging instead of print statements",
      "file": "agents/component_migration_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 292,
      "message": "Use logging instead of print statements",
      "file": "agents/component_migration_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 298,
      "message": "Use logging instead of print statements",
      "file": "agents/component_migration_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 299,
      "message": "Use logging instead of print statements",
      "file": "agents/component_migration_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 301,
      "message": "Use logging instead of print statements",
      "file": "agents/component_migration_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 303,
      "message": "Use logging instead of print statements",
      "file": "agents/component_migration_agent.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 123,
      "message": "Function lacks return type hint: def _load_all_prompts(self):",
      "file": "agents/prompt_management_agent.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 128,
      "message": "Function lacks return type hint: def _load_prompt_file(self, path: Path):",
      "file": "agents/prompt_management_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 152,
      "message": "Use logging instead of print statements",
      "file": "agents/prompt_management_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 214,
      "message": "Use logging instead of print statements",
      "file": "agents/prompt_management_agent.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 219,
      "message": "Function lacks return type hint: def register_prompt(self, name: str, template: str, metadata: Dict[str, Any] = None):",
      "file": "agents/prompt_management_agent.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 239,
      "message": "Function lacks return type hint: def save_prompt(self, name: str, template: str, metadata: Dict[str, Any] = None):",
      "file": "agents/prompt_management_agent.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 264,
      "message": "Function lacks return type hint: def clear_cache(self):",
      "file": "agents/prompt_management_agent.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 352,
      "message": "Function lacks return type hint: def _load_agent_prompt(self):",
      "file": "agents/prompt_management_agent.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 378,
      "message": "Function lacks return type hint: def set_prompt_variables(self, **variables):",
      "file": "agents/prompt_management_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 664,
      "message": "Use logging instead of print statements",
      "file": "agents/prompt_management_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 670,
      "message": "Use logging instead of print statements",
      "file": "agents/prompt_management_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 671,
      "message": "Use logging instead of print statements",
      "file": "agents/prompt_management_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 673,
      "message": "Use logging instead of print statements",
      "file": "agents/prompt_management_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 167,
      "message": "Use logging instead of print statements",
      "file": "agents/issue_orchestrator_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 361,
      "message": "Use logging instead of print statements",
      "file": "agents/issue_orchestrator_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 366,
      "message": "Use logging instead of print statements",
      "file": "agents/issue_orchestrator_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 367,
      "message": "Use logging instead of print statements",
      "file": "agents/issue_orchestrator_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 368,
      "message": "Use logging instead of print statements",
      "file": "agents/issue_orchestrator_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 369,
      "message": "Use logging instead of print statements",
      "file": "agents/issue_orchestrator_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 398,
      "message": "Use logging instead of print statements",
      "file": "agents/issue_orchestrator_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 408,
      "message": "Use logging instead of print statements",
      "file": "agents/issue_orchestrator_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 410,
      "message": "Use logging instead of print statements",
      "file": "agents/issue_orchestrator_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 460,
      "message": "Use logging instead of print statements",
      "file": "agents/issue_orchestrator_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 461,
      "message": "Use logging instead of print statements",
      "file": "agents/issue_orchestrator_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 462,
      "message": "Use logging instead of print statements",
      "file": "agents/issue_orchestrator_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 467,
      "message": "Use logging instead of print statements",
      "file": "agents/issue_orchestrator_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 470,
      "message": "Use logging instead of print statements",
      "file": "agents/issue_orchestrator_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 471,
      "message": "Use logging instead of print statements",
      "file": "agents/issue_orchestrator_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 473,
      "message": "Use logging instead of print statements",
      "file": "agents/issue_orchestrator_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 477,
      "message": "Use logging instead of print statements",
      "file": "agents/issue_orchestrator_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 478,
      "message": "Use logging instead of print statements",
      "file": "agents/issue_orchestrator_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 479,
      "message": "Use logging instead of print statements",
      "file": "agents/issue_orchestrator_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 481,
      "message": "Use logging instead of print statements",
      "file": "agents/issue_orchestrator_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 482,
      "message": "Use logging instead of print statements",
      "file": "agents/issue_orchestrator_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 483,
      "message": "Use logging instead of print statements",
      "file": "agents/issue_orchestrator_agent.py"
    },
    {
      "type": "todo_comment",
      "severity": "low",
      "line": 51,
      "message": "Unresolved comment: # Check for TODO/FIXME comments",
      "file": "agents/code_review_agent.py"
    },
    {
      "type": "todo_comment",
      "severity": "low",
      "line": 53,
      "message": "Unresolved comment: if 'TODO' in line or 'FIXME' in line:",
      "file": "agents/code_review_agent.py"
    },
    {
      "type": "hardcoded_path",
      "severity": "medium",
      "line": 62,
      "message": "Hardcoded path detected",
      "file": "agents/code_review_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 359,
      "message": "Use logging instead of print statements",
      "file": "agents/code_review_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 376,
      "message": "Use logging instead of print statements",
      "file": "agents/code_review_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 385,
      "message": "Use logging instead of print statements",
      "file": "agents/code_review_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 394,
      "message": "Use logging instead of print statements",
      "file": "agents/code_review_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 432,
      "message": "Use logging instead of print statements",
      "file": "agents/code_review_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 434,
      "message": "Use logging instead of print statements",
      "file": "agents/code_review_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 603,
      "message": "Use logging instead of print statements",
      "file": "agents/code_review_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 610,
      "message": "Use logging instead of print statements",
      "file": "agents/code_review_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 611,
      "message": "Use logging instead of print statements",
      "file": "agents/code_review_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 613,
      "message": "Use logging instead of print statements",
      "file": "agents/code_review_agent.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 127,
      "message": "Function lacks return type hint: def register_file_watcher(self, path: str, pattern: str = \"*\",",
      "file": "agents/event_system_agent.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 152,
      "message": "Function lacks return type hint: def register_schedule(self, cron_expr: str, handler: Callable,",
      "file": "agents/event_system_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 195,
      "message": "Use logging instead of print statements",
      "file": "agents/event_system_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 203,
      "message": "Use logging instead of print statements",
      "file": "agents/event_system_agent.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 297,
      "message": "Function lacks return type hint: def process_loop():",
      "file": "agents/event_system_agent.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 306,
      "message": "Function lacks return type hint: def watcher_loop():",
      "file": "agents/event_system_agent.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 316,
      "message": "Function lacks return type hint: def scheduler_loop():",
      "file": "agents/event_system_agent.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 490,
      "message": "Function lacks return type hint: def cli():",
      "file": "agents/event_system_agent.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 499,
      "message": "Function lacks return type hint: def emit(event_type, data, source):",
      "file": "agents/event_system_agent.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 515,
      "message": "Function lacks return type hint: def list():",
      "file": "agents/event_system_agent.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 530,
      "message": "Function lacks return type hint: def process():",
      "file": "agents/event_system_agent.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 539,
      "message": "Function lacks return type hint: def history(limit):",
      "file": "agents/event_system_agent.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 555,
      "message": "Function lacks return type hint: def cleanup(days):",
      "file": "agents/event_system_agent.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 566,
      "message": "Function lacks return type hint: def watch(path, pattern, event):",
      "file": "agents/event_system_agent.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 676,
      "message": "Function lacks return type hint: def on_file_changed(event):",
      "file": "agents/event_system_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 679,
      "message": "Use logging instead of print statements",
      "file": "agents/event_system_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 684,
      "message": "Use logging instead of print statements",
      "file": "agents/event_system_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 693,
      "message": "Use logging instead of print statements",
      "file": "agents/event_system_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 694,
      "message": "Use logging instead of print statements",
      "file": "agents/event_system_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 702,
      "message": "Use logging instead of print statements",
      "file": "agents/event_system_agent.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 721,
      "message": "Function lacks return type hint: def daily_review(event):",
      "file": "agents/event_system_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 723,
      "message": "Use logging instead of print statements",
      "file": "agents/event_system_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 727,
      "message": "Use logging instead of print statements",
      "file": "agents/event_system_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 735,
      "message": "Use logging instead of print statements",
      "file": "agents/event_system_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 736,
      "message": "Use logging instead of print statements",
      "file": "agents/event_system_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 744,
      "message": "Use logging instead of print statements",
      "file": "agents/event_system_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 815,
      "message": "Use logging instead of print statements",
      "file": "agents/event_system_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 821,
      "message": "Use logging instead of print statements",
      "file": "agents/event_system_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 822,
      "message": "Use logging instead of print statements",
      "file": "agents/event_system_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 825,
      "message": "Use logging instead of print statements",
      "file": "agents/event_system_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 828,
      "message": "Use logging instead of print statements",
      "file": "agents/event_system_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 830,
      "message": "Use logging instead of print statements",
      "file": "agents/event_system_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 445,
      "message": "Use logging instead of print statements",
      "file": "agents/repository_setup_agent.py"
    },
    {
      "type": "hardcoded_path",
      "severity": "medium",
      "line": 449,
      "message": "Hardcoded path detected",
      "file": "agents/repository_setup_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 452,
      "message": "Use logging instead of print statements",
      "file": "agents/repository_setup_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 453,
      "message": "Use logging instead of print statements",
      "file": "agents/repository_setup_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 455,
      "message": "Use logging instead of print statements",
      "file": "agents/repository_setup_agent.py"
    },
    {
      "type": "missing_docstring",
      "severity": "low",
      "line": 1,
      "message": "Module lacks docstring",
      "file": "examples/triggers/daily_schedule.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 13,
      "message": "Function lacks return type hint: def daily_review(event):",
      "file": "examples/triggers/daily_schedule.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 15,
      "message": "Use logging instead of print statements",
      "file": "examples/triggers/daily_schedule.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 19,
      "message": "Use logging instead of print statements",
      "file": "examples/triggers/daily_schedule.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 27,
      "message": "Use logging instead of print statements",
      "file": "examples/triggers/daily_schedule.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 28,
      "message": "Use logging instead of print statements",
      "file": "examples/triggers/daily_schedule.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 36,
      "message": "Use logging instead of print statements",
      "file": "examples/triggers/daily_schedule.py"
    },
    {
      "type": "missing_docstring",
      "severity": "low",
      "line": 1,
      "message": "Module lacks docstring",
      "file": "examples/triggers/file_watcher.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 13,
      "message": "Function lacks return type hint: def on_file_changed(event):",
      "file": "examples/triggers/file_watcher.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 16,
      "message": "Use logging instead of print statements",
      "file": "examples/triggers/file_watcher.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 21,
      "message": "Use logging instead of print statements",
      "file": "examples/triggers/file_watcher.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 30,
      "message": "Use logging instead of print statements",
      "file": "examples/triggers/file_watcher.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 31,
      "message": "Use logging instead of print statements",
      "file": "examples/triggers/file_watcher.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 39,
      "message": "Use logging instead of print statements",
      "file": "examples/triggers/file_watcher.py"
    },
    {
      "type": "undocumented_dependencies",
      "severity": "high",
      "message": "Third-party imports without requirements.txt: pygments.lexers.webmisc, pygments.lexers.esoteric, _pytest.hookspec, pygments.lexers, pygments.lexers.robotframework, warnings, shlex, pygments.filters, mypy.types, pygments.regexopt, pygments.lexers.configs, _pytest.config.argparsing, pygments.formatters.terminal, pydantic.v1.version, pygments.lexers.php, pygments.lexers.graphics, unicodedata, pydantic_core.core_schema, __future__, locale, pygments.lexers.iolang, pygments.lexers.sgf, pygments.lexers.urbi, pygments.cmdline, pygments.lexers.rust, pydantic_core._pydantic_core, hashlib, _pytest.main, _pytest.cacheprovider, pygments.formatters._mapping, pygments.lexers.ruby, mypy.plugins.common, pydantic._internal, pygments.lexers.dotnet, _pytest._py.error, pygments.lexers.jvm, _pytest._code, _pytest._io, pydantic._internal._internal_dataclass, argparse, _pytest._io.wcwidth, pygments.lexers.felix, REPL.REPLCompletions, pygments.lexers.mime, pydantic, importlib.machinery, _pytest.mark.structures, string, pygments.lexers.lisp, mypy.plugins, pydantic.v1.utils, collections.abc, threading, _pytest.capture, _pytest.freeze_support, zoneinfo, itertools, pydantic.v1.networks, logging, pygments.lexers._usd_builtins, pygments.console, _pytest.terminal, pygments.lexers.automation, mypy.nodes, bisect, pygments.scanner, pygments.lexers.ml, _pytest.assertion.util, _pytest.tracemalloc, pygments.lexers.css, pygments.lexers.installers, fractions, _pytest.config, contextlib, pygments.lexers._lilypond_builtins, pydantic.v1.color, agents.code_review_agent, pydantic.v1.schema, email.message, mypy.plugin, pydantic.color, _pytest.debugging, base64, pygments.lexers._ada_builtins, mypy.typevars, _pytest.outcomes, pydantic.v1.errors, ast, pickle, py, docutils.statemachine, pygments.lexers.smalltalk, _pytest._code.code, struct, packaging.licenses._spdx, operator, pygments.lexers.c_cpp, pydantic.v1.json, mypy.state, pygments.lexers.prolog, _pytest.python_api, _pytest.config.exceptions, pydantic.v1, pytest, email.feedparser, pydantic.v1.class_validators, pygments.lexers._openedge_builtins, _pytest._code.source, pydantic._internal._import_utils, pygments.lexers.r, _pytest.assertion, pygments.lexer, importlib, runpy, pygments.lexers.idl, mypy.typeops, _pytest._py.path, email.policy, tempfile, platform, importlib.abc, _pytest._io.saferepr, posixpath, _pytest.warning_types, email.parser, pygments.lexers.shell, pygments.formatter, pygments.lexers._csound_builtins, _pytest.legacypath, pygments.lexers.html, pygments.lexers.pawn, importlib.util, mypy.util, pydantic.v1.datetime_parse, pydantic.v1.parse, _pytest.stash, marshal, pygments.lexers.diff, agents.{module_name}, pygments.formatters.terminal256, pygments.lexers.modeling, pygments.style, keyword, _pytest.tmpdir, pygments.lexers.data, pygments.lexers.go, pygments.lexers.modula2, unittest, pygments.lexers.textedit, docutils.parsers.rst, pygments.lexers._julia_builtins, configparser, mypy.version, pygments.lexers.ooc, pygments.modeline, math, pygments.unistring, textwrap, codecs, _pytest._version, pygments.lexers.python, _pytest.nodes, reprlib, pygments.lexers.dsls, pydantic.warnings, _pytest.doctest, pydantic.types, pygments.lexers.scripting, dataclasses, _pytest.mark, pydantic_core, tokenize, pygments.lexers.console, abc, email.header, _pytest.reports, xml.etree.ElementTree, pygments.lexers.crystal, pygments.lexers.javascript, pygments.lexers.sql, docutils, pydantic.v1.env_settings, _pytest.scope, pygments.lexers.haxe, pygments.plugin, pydantic.version, pydantic.v1.main, pygments.styles, _pytest.monkeypatch, fnmatch, pydantic.v1.types, builtins, pygments.lexers.dylan, pygments.lexers.basic, pydantic.v1.config, _pytest.runner, pygments.lexers._mapping, collections, stat, mypy.errorcodes, uuid, pygments.lexers.theorem, pydantic.main, core.agent, click, atexit, pygments.styles._mapping, colorsys, typing_extensions, _pytest.pytester, _pytest.raises, pygments.formatters, functools, mypy.server.trigger, gc, pydantic.v1.tools, time, _pytest.fixtures, _pytest.compat, ipaddress, pluggy, pygments.lexers.d, importlib.metadata, _pytest, pygments.lexers._qlik_builtins, pygments, pygments.util, pydantic.v1.typing, inspect, errno, pygments.lexers.testing, enum, agents.test_runner_agent, _pytest.recwarn, typing_inspection.introspection, pygments.lexers.ecl, typing_inspection, weakref, pygments.token, bdb, pygments.lexers.factor, pygments.filter, pydantic.v1.fields, pygments.lexers.haskell, pygments.lexers.nimrod, sphinx.util.nodes, pydantic.v1.annotated_types, pprint, pydantic.v1.validators, core.tools, annotated_types, hypothesis.strategies, pygments.lexers.actionscript, shutil, pygments.lexers.ada, traceback, numbers, mypy.expandtype, pygments.lexers.objective, mypy.semanal, pygments.lexers.c_like, pygments.lexers.lilypond, pygments.lexers.julia, pygments.lexers.erlang, pygments.lexers.smv, pygments.lexers._scheme_builtins, pygments.lexers.rebol, _pytest.logging, mypy.type_visitor, pydantic.v1.error_wrappers, pygments.lexers.fortran, pygments.lexers.textfmts, sysconfig, contextvars, mypy.options, pygments.lexers.special, io, _pytest._io.pprint, pygments.lexers.snobol, core.triggers, pygments.lexers.make, pygments.lexers.business, pygments.lexers.web, pygments.lexers.lean, pygments.lexers.pascal, copy, _pytest.python, pygments.lexers.matlab, types, site, pygments.lexers.algebra, iniconfig, pygments.lexers.tcl, _pytest.config.compat, pygments.lexers.markup, pygments.formatters.latex, pygments.lexers.perl, pygments.lexers._css_builtins, pydantic.v1.decorator, decimal, _pytest.pathlib, pydantic.errors, _pytest.assertion.rewrite, _pytest.deprecated, pygments.lexers._stata_builtins, glob"
    },
    {
      "file": "/Users/dbraman/Documents/GitHub/12-factor-agents/agents/code_review_agent.py",
      "type": "dangerous_function",
      "severity": "high",
      "message": "Use of eval() or exec() is dangerous"
    },
    {
      "file": "/Users/dbraman/Documents/GitHub/12-factor-agents/agents/code_review_agent.py",
      "type": "unsafe_deserialization",
      "severity": "high",
      "message": "Unsafe deserialization with pickle"
    },
    {
      "file": "/Users/dbraman/Documents/GitHub/12-factor-agents/.venv/lib/python3.13/site-packages/typing_extensions.py",
      "type": "dangerous_function",
      "severity": "high",
      "message": "Use of eval() or exec() is dangerous"
    },
    {
      "file": "/Users/dbraman/Documents/GitHub/12-factor-agents/.venv/lib/python3.13/site-packages/packaging/_parser.py",
      "type": "dangerous_function",
      "severity": "high",
      "message": "Use of eval() or exec() is dangerous"
    },
    {
      "file": "/Users/dbraman/Documents/GitHub/12-factor-agents/.venv/lib/python3.13/site-packages/pluggy/_hooks.py",
      "type": "dangerous_function",
      "severity": "high",
      "message": "Use of eval() or exec() is dangerous"
    },
    {
      "file": "/Users/dbraman/Documents/GitHub/12-factor-agents/.venv/lib/python3.13/site-packages/pluggy/_manager.py",
      "type": "dangerous_function",
      "severity": "high",
      "message": "Use of eval() or exec() is dangerous"
    },
    {
      "file": "/Users/dbraman/Documents/GitHub/12-factor-agents/.venv/lib/python3.13/site-packages/pydantic/types.py",
      "type": "hardcoded_secret",
      "severity": "critical",
      "message": "Potential hardcoded secret detected"
    },
    {
      "file": "/Users/dbraman/Documents/GitHub/12-factor-agents/.venv/lib/python3.13/site-packages/typing_inspection/typing_objects.py",
      "type": "dangerous_function",
      "severity": "high",
      "message": "Use of eval() or exec() is dangerous"
    },
    {
      "file": "/Users/dbraman/Documents/GitHub/12-factor-agents/.venv/lib/python3.13/site-packages/_pytest/skipping.py",
      "type": "dangerous_function",
      "severity": "high",
      "message": "Use of eval() or exec() is dangerous"
    },
    {
      "file": "/Users/dbraman/Documents/GitHub/12-factor-agents/.venv/lib/python3.13/site-packages/_pytest/pytester.py",
      "type": "dangerous_function",
      "severity": "high",
      "message": "Use of eval() or exec() is dangerous"
    },
    {
      "file": "/Users/dbraman/Documents/GitHub/12-factor-agents/.venv/lib/python3.13/site-packages/_pytest/mark/__init__.py",
      "type": "dangerous_function",
      "severity": "high",
      "message": "Use of eval() or exec() is dangerous"
    },
    {
      "file": "/Users/dbraman/Documents/GitHub/12-factor-agents/.venv/lib/python3.13/site-packages/_pytest/mark/expression.py",
      "type": "dangerous_function",
      "severity": "high",
      "message": "Use of eval() or exec() is dangerous"
    },
    {
      "file": "/Users/dbraman/Documents/GitHub/12-factor-agents/.venv/lib/python3.13/site-packages/_pytest/_code/code.py",
      "type": "dangerous_function",
      "severity": "high",
      "message": "Use of eval() or exec() is dangerous"
    },
    {
      "file": "/Users/dbraman/Documents/GitHub/12-factor-agents/.venv/lib/python3.13/site-packages/_pytest/assertion/rewrite.py",
      "type": "dangerous_function",
      "severity": "high",
      "message": "Use of eval() or exec() is dangerous"
    },
    {
      "file": "/Users/dbraman/Documents/GitHub/12-factor-agents/.venv/lib/python3.13/site-packages/_pytest/_py/path.py",
      "type": "dangerous_function",
      "severity": "high",
      "message": "Use of eval() or exec() is dangerous"
    },
    {
      "file": "/Users/dbraman/Documents/GitHub/12-factor-agents/.venv/lib/python3.13/site-packages/_pytest/_py/path.py",
      "type": "unsafe_deserialization",
      "severity": "high",
      "message": "Unsafe deserialization with pickle"
    },
    {
      "file": "/Users/dbraman/Documents/GitHub/12-factor-agents/.venv/lib/python3.13/site-packages/pydantic/v1/utils.py",
      "type": "dangerous_function",
      "severity": "high",
      "message": "Use of eval() or exec() is dangerous"
    },
    {
      "file": "/Users/dbraman/Documents/GitHub/12-factor-agents/.venv/lib/python3.13/site-packages/pydantic/v1/parse.py",
      "type": "unsafe_deserialization",
      "severity": "high",
      "message": "Unsafe deserialization with pickle"
    },
    {
      "file": "/Users/dbraman/Documents/GitHub/12-factor-agents/.venv/lib/python3.13/site-packages/pydantic/_internal/_typing_extra.py",
      "type": "dangerous_function",
      "severity": "high",
      "message": "Use of eval() or exec() is dangerous"
    },
    {
      "file": "/Users/dbraman/Documents/GitHub/12-factor-agents/.venv/lib/python3.13/site-packages/pydantic/_internal/_namespace_utils.py",
      "type": "dangerous_function",
      "severity": "high",
      "message": "Use of eval() or exec() is dangerous"
    },
    {
      "file": "/Users/dbraman/Documents/GitHub/12-factor-agents/.venv/lib/python3.13/site-packages/pydantic/deprecated/parse.py",
      "type": "unsafe_deserialization",
      "severity": "high",
      "message": "Unsafe deserialization with pickle"
    },
    {
      "file": "/Users/dbraman/Documents/GitHub/12-factor-agents/.venv/lib/python3.13/site-packages/pygments/lexers/_julia_builtins.py",
      "type": "dangerous_function",
      "severity": "high",
      "message": "Use of eval() or exec() is dangerous"
    },
    {
      "file": "/Users/dbraman/Documents/GitHub/12-factor-agents/.venv/lib/python3.13/site-packages/pygments/lexers/__init__.py",
      "type": "dangerous_function",
      "severity": "high",
      "message": "Use of eval() or exec() is dangerous"
    },
    {
      "file": "/Users/dbraman/Documents/GitHub/12-factor-agents/.venv/lib/python3.13/site-packages/pygments/lexers/special.py",
      "type": "dangerous_function",
      "severity": "high",
      "message": "Use of eval() or exec() is dangerous"
    },
    {
      "file": "/Users/dbraman/Documents/GitHub/12-factor-agents/.venv/lib/python3.13/site-packages/pygments/formatters/__init__.py",
      "type": "dangerous_function",
      "severity": "high",
      "message": "Use of eval() or exec() is dangerous"
    },
    {
      "file": "/Users/dbraman/Documents/GitHub/12-factor-agents/.venv/lib/python3.13/site-packages/packaging/licenses/__init__.py",
      "type": "dangerous_function",
      "severity": "high",
      "message": "Use of eval() or exec() is dangerous"
    }
  ]
}