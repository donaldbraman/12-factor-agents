{
  "review_date": "2025-09-08T10:09:27.204405",
  "directory": "/Users/dbraman/Documents/GitHub/12-factor-agents",
  "files_reviewed": 575,
  "total_issues": 256,
  "issues_by_type": {
    "missing_type_hints": 63,
    "print_statement": 139,
    "hardcoded_path": 5,
    "todo_comment": 9,
    "missing_docstring": 2,
    "undocumented_dependencies": 1,
    "unsafe_deserialization": 13,
    "dangerous_function": 23,
    "hardcoded_secret": 1
  },
  "github_issues_created": [
    {
      "issue_number": "7",
      "url": "https://github.com/donaldbraman/12-factor-agents/issues/7",
      "title": "Fix: 139 print statement issues"
    },
    {
      "issue_number": "8",
      "url": "https://github.com/donaldbraman/12-factor-agents/issues/8",
      "title": "Fix: 5 hardcoded path issues"
    },
    {
      "issue_number": "9",
      "url": "https://github.com/donaldbraman/12-factor-agents/issues/9",
      "title": "Fix: 9 todo comment issues"
    },
    {
      "issue_number": "10",
      "url": "https://github.com/donaldbraman/12-factor-agents/issues/10",
      "title": "Fix: 2 missing docstring issues"
    },
    {
      "issue_number": "11",
      "url": "https://github.com/donaldbraman/12-factor-agents/issues/11",
      "title": "Fix: 13 unsafe deserialization issues"
    },
    {
      "issue_number": "12",
      "url": "https://github.com/donaldbraman/12-factor-agents/issues/12",
      "title": "Fix: 23 dangerous function issues"
    },
    {
      "issue_number": "13",
      "url": "https://github.com/donaldbraman/12-factor-agents/issues/13",
      "title": "Fix: Potential hardcoded secret detected"
    }
  ],
  "all_findings": [
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 95,
      "message": "Function lacks return type hint: def register_file_watcher(self, path: str, pattern: str = \"*\",",
      "file": "core/triggers.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 120,
      "message": "Function lacks return type hint: def register_schedule(self, cron_expr: str, handler: Callable,",
      "file": "core/triggers.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 163,
      "message": "Use logging instead of print statements",
      "file": "core/triggers.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 171,
      "message": "Use logging instead of print statements",
      "file": "core/triggers.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 265,
      "message": "Function lacks return type hint: def process_loop():",
      "file": "core/triggers.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 274,
      "message": "Function lacks return type hint: def watcher_loop():",
      "file": "core/triggers.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 284,
      "message": "Function lacks return type hint: def scheduler_loop():",
      "file": "core/triggers.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 36,
      "message": "Function lacks return type hint: def _load_all_prompts(self):",
      "file": "core/prompt_manager.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 41,
      "message": "Function lacks return type hint: def _load_prompt_file(self, path: Path):",
      "file": "core/prompt_manager.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 65,
      "message": "Use logging instead of print statements",
      "file": "core/prompt_manager.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 127,
      "message": "Use logging instead of print statements",
      "file": "core/prompt_manager.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 132,
      "message": "Function lacks return type hint: def register_prompt(self, name: str, template: str, metadata: Dict[str, Any] = None):",
      "file": "core/prompt_manager.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 152,
      "message": "Function lacks return type hint: def save_prompt(self, name: str, template: str, metadata: Dict[str, Any] = None):",
      "file": "core/prompt_manager.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 177,
      "message": "Function lacks return type hint: def clear_cache(self):",
      "file": "core/prompt_manager.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 18,
      "message": "Function lacks return type hint: def __lt__(self, other):",
      "file": "core/context.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 40,
      "message": "Function lacks return type hint: def set_system_prompt(self, prompt: str):",
      "file": "core/context.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 44,
      "message": "Function lacks return type hint: def add_context(self, content: str, priority: int = 5, source: str = \"user\"):",
      "file": "core/context.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 120,
      "message": "Function lacks return type hint: def clear(self):",
      "file": "core/context.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 124,
      "message": "Function lacks return type hint: def remove_old_context(self, keep_recent: int = 10):",
      "file": "core/context.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 184,
      "message": "Function lacks return type hint: def add(self, key: str, value: str):",
      "file": "core/context.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 87,
      "message": "Function lacks return type hint: def pause(self):",
      "file": "core/agent.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 105,
      "message": "Function lacks return type hint: def save_checkpoint(self):",
      "file": "core/agent.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 135,
      "message": "Function lacks return type hint: def add_context(self, content: str, priority: int = 5):",
      "file": "core/agent.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 184,
      "message": "Function lacks return type hint: def _load_agent_prompt(self):",
      "file": "core/agent.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 210,
      "message": "Function lacks return type hint: def set_prompt_variables(self, **variables):",
      "file": "core/agent.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 28,
      "message": "Function lacks return type hint: def update(self, tool_response: 'ToolResponse'):",
      "file": "core/state.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 66,
      "message": "Function lacks return type hint: def set(self, key: str, value: Any, state_type: str = \"business\"):",
      "file": "core/state.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 113,
      "message": "Function lacks return type hint: def clear_errors(self):",
      "file": "core/state.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 16,
      "message": "Function lacks return type hint: def test_base_agent(self):",
      "file": "tests/test_agents.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 23,
      "message": "Function lacks return type hint: def test_tool_response(self):",
      "file": "tests/test_agents.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 33,
      "message": "Function lacks return type hint: def test_unified_state(self):",
      "file": "tests/test_agents.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 42,
      "message": "Function lacks return type hint: def test_agent_context(self):",
      "file": "tests/test_agents.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 52,
      "message": "Function lacks return type hint: def test_repository_setup_agent(self):",
      "file": "tests/test_agents.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 59,
      "message": "Function lacks return type hint: def test_prompt_management_agent(self):",
      "file": "tests/test_agents.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 66,
      "message": "Function lacks return type hint: def test_event_system_agent(self):",
      "file": "tests/test_agents.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 422,
      "message": "Use logging instead of print statements",
      "file": "agents/uv_migration_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 427,
      "message": "Use logging instead of print statements",
      "file": "agents/uv_migration_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 430,
      "message": "Use logging instead of print statements",
      "file": "agents/uv_migration_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 434,
      "message": "Use logging instead of print statements",
      "file": "agents/uv_migration_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 435,
      "message": "Use logging instead of print statements",
      "file": "agents/uv_migration_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 436,
      "message": "Use logging instead of print statements",
      "file": "agents/uv_migration_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 439,
      "message": "Use logging instead of print statements",
      "file": "agents/uv_migration_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 441,
      "message": "Use logging instead of print statements",
      "file": "agents/uv_migration_agent.py"
    },
    {
      "type": "hardcoded_path",
      "severity": "medium",
      "line": 273,
      "message": "Hardcoded path detected",
      "file": "agents/issue_fixer_agent.py"
    },
    {
      "type": "hardcoded_path",
      "severity": "medium",
      "line": 274,
      "message": "Hardcoded path detected",
      "file": "agents/issue_fixer_agent.py"
    },
    {
      "type": "hardcoded_path",
      "severity": "medium",
      "line": 275,
      "message": "Hardcoded path detected",
      "file": "agents/issue_fixer_agent.py"
    },
    {
      "type": "todo_comment",
      "severity": "low",
      "line": 324,
      "message": "Unresolved comment: \"\"\"Resolve NOTE comments\"\"\"",
      "file": "agents/issue_fixer_agent.py"
    },
    {
      "type": "todo_comment",
      "severity": "low",
      "line": 329,
      "message": "Unresolved comment: description=\"Resolve or document NOTE comments\"",
      "file": "agents/issue_fixer_agent.py"
    },
    {
      "type": "todo_comment",
      "severity": "low",
      "line": 333,
      "message": "Unresolved comment: \"\"\"Resolve NOTE comments in directory\"\"\"",
      "file": "agents/issue_fixer_agent.py"
    },
    {
      "type": "todo_comment",
      "severity": "low",
      "line": 345,
      "message": "Unresolved comment: if 'NOTE' in line or 'FIXME' in line:",
      "file": "agents/issue_fixer_agent.py"
    },
    {
      "type": "todo_comment",
      "severity": "low",
      "line": 347,
      "message": "Unresolved comment: if 'NOTE' in line:",
      "file": "agents/issue_fixer_agent.py"
    },
    {
      "type": "todo_comment",
      "severity": "low",
      "line": 348,
      "message": "Unresolved comment: new_line = line.replace('NOTE', 'NOTE')",
      "file": "agents/issue_fixer_agent.py"
    },
    {
      "type": "todo_comment",
      "severity": "low",
      "line": 500,
      "message": "Unresolved comment: # Resolve NOTE comments",
      "file": "agents/issue_fixer_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 553,
      "message": "Use logging instead of print statements",
      "file": "agents/issue_fixer_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 587,
      "message": "Use logging instead of print statements",
      "file": "agents/issue_fixer_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 594,
      "message": "Use logging instead of print statements",
      "file": "agents/issue_fixer_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 595,
      "message": "Use logging instead of print statements",
      "file": "agents/issue_fixer_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 597,
      "message": "Use logging instead of print statements",
      "file": "agents/issue_fixer_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 107,
      "message": "Use logging instead of print statements",
      "file": "agents/issue_processor_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 110,
      "message": "Use logging instead of print statements",
      "file": "agents/issue_processor_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 217,
      "message": "Use logging instead of print statements",
      "file": "agents/issue_processor_agent.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 289,
      "message": "Function lacks return type hint: def test_base_agent():",
      "file": "agents/issue_processor_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 294,
      "message": "Use logging instead of print statements",
      "file": "agents/issue_processor_agent.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 297,
      "message": "Function lacks return type hint: def test_tool_response():",
      "file": "agents/issue_processor_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 302,
      "message": "Use logging instead of print statements",
      "file": "agents/issue_processor_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 308,
      "message": "Use logging instead of print statements",
      "file": "agents/issue_processor_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 474,
      "message": "Use logging instead of print statements",
      "file": "agents/issue_processor_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 487,
      "message": "Use logging instead of print statements",
      "file": "agents/issue_processor_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 494,
      "message": "Use logging instead of print statements",
      "file": "agents/issue_processor_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 500,
      "message": "Use logging instead of print statements",
      "file": "agents/issue_processor_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 506,
      "message": "Use logging instead of print statements",
      "file": "agents/issue_processor_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 508,
      "message": "Use logging instead of print statements",
      "file": "agents/issue_processor_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 516,
      "message": "Use logging instead of print statements",
      "file": "agents/issue_processor_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 522,
      "message": "Use logging instead of print statements",
      "file": "agents/issue_processor_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 526,
      "message": "Use logging instead of print statements",
      "file": "agents/issue_processor_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 562,
      "message": "Use logging instead of print statements",
      "file": "agents/issue_processor_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 569,
      "message": "Use logging instead of print statements",
      "file": "agents/issue_processor_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 570,
      "message": "Use logging instead of print statements",
      "file": "agents/issue_processor_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 572,
      "message": "Use logging instead of print statements",
      "file": "agents/issue_processor_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 287,
      "message": "Use logging instead of print statements",
      "file": "agents/component_migration_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 292,
      "message": "Use logging instead of print statements",
      "file": "agents/component_migration_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 298,
      "message": "Use logging instead of print statements",
      "file": "agents/component_migration_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 299,
      "message": "Use logging instead of print statements",
      "file": "agents/component_migration_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 301,
      "message": "Use logging instead of print statements",
      "file": "agents/component_migration_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 303,
      "message": "Use logging instead of print statements",
      "file": "agents/component_migration_agent.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 123,
      "message": "Function lacks return type hint: def _load_all_prompts(self):",
      "file": "agents/prompt_management_agent.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 128,
      "message": "Function lacks return type hint: def _load_prompt_file(self, path: Path):",
      "file": "agents/prompt_management_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 152,
      "message": "Use logging instead of print statements",
      "file": "agents/prompt_management_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 214,
      "message": "Use logging instead of print statements",
      "file": "agents/prompt_management_agent.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 219,
      "message": "Function lacks return type hint: def register_prompt(self, name: str, template: str, metadata: Dict[str, Any] = None):",
      "file": "agents/prompt_management_agent.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 239,
      "message": "Function lacks return type hint: def save_prompt(self, name: str, template: str, metadata: Dict[str, Any] = None):",
      "file": "agents/prompt_management_agent.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 264,
      "message": "Function lacks return type hint: def clear_cache(self):",
      "file": "agents/prompt_management_agent.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 352,
      "message": "Function lacks return type hint: def _load_agent_prompt(self):",
      "file": "agents/prompt_management_agent.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 378,
      "message": "Function lacks return type hint: def set_prompt_variables(self, **variables):",
      "file": "agents/prompt_management_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 664,
      "message": "Use logging instead of print statements",
      "file": "agents/prompt_management_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 670,
      "message": "Use logging instead of print statements",
      "file": "agents/prompt_management_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 671,
      "message": "Use logging instead of print statements",
      "file": "agents/prompt_management_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 673,
      "message": "Use logging instead of print statements",
      "file": "agents/prompt_management_agent.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 284,
      "message": "Function lacks return type hint: def test_base_agent(self):",
      "file": "agents/testing_agent.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 291,
      "message": "Function lacks return type hint: def test_tool_response(self):",
      "file": "agents/testing_agent.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 301,
      "message": "Function lacks return type hint: def test_unified_state(self):",
      "file": "agents/testing_agent.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 310,
      "message": "Function lacks return type hint: def test_agent_context(self):",
      "file": "agents/testing_agent.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 320,
      "message": "Function lacks return type hint: def test_repository_setup_agent(self):",
      "file": "agents/testing_agent.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 327,
      "message": "Function lacks return type hint: def test_prompt_management_agent(self):",
      "file": "agents/testing_agent.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 334,
      "message": "Function lacks return type hint: def test_event_system_agent(self):",
      "file": "agents/testing_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 454,
      "message": "Use logging instead of print statements",
      "file": "agents/testing_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 460,
      "message": "Use logging instead of print statements",
      "file": "agents/testing_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 462,
      "message": "Use logging instead of print statements",
      "file": "agents/testing_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 466,
      "message": "Use logging instead of print statements",
      "file": "agents/testing_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 472,
      "message": "Use logging instead of print statements",
      "file": "agents/testing_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 474,
      "message": "Use logging instead of print statements",
      "file": "agents/testing_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 480,
      "message": "Use logging instead of print statements",
      "file": "agents/testing_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 483,
      "message": "Use logging instead of print statements",
      "file": "agents/testing_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 489,
      "message": "Use logging instead of print statements",
      "file": "agents/testing_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 491,
      "message": "Use logging instead of print statements",
      "file": "agents/testing_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 495,
      "message": "Use logging instead of print statements",
      "file": "agents/testing_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 501,
      "message": "Use logging instead of print statements",
      "file": "agents/testing_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 503,
      "message": "Use logging instead of print statements",
      "file": "agents/testing_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 507,
      "message": "Use logging instead of print statements",
      "file": "agents/testing_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 508,
      "message": "Use logging instead of print statements",
      "file": "agents/testing_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 509,
      "message": "Use logging instead of print statements",
      "file": "agents/testing_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 512,
      "message": "Use logging instead of print statements",
      "file": "agents/testing_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 514,
      "message": "Use logging instead of print statements",
      "file": "agents/testing_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 516,
      "message": "Use logging instead of print statements",
      "file": "agents/testing_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 517,
      "message": "Use logging instead of print statements",
      "file": "agents/testing_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 518,
      "message": "Use logging instead of print statements",
      "file": "agents/testing_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 519,
      "message": "Use logging instead of print statements",
      "file": "agents/testing_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 520,
      "message": "Use logging instead of print statements",
      "file": "agents/testing_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 556,
      "message": "Use logging instead of print statements",
      "file": "agents/testing_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 562,
      "message": "Use logging instead of print statements",
      "file": "agents/testing_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 564,
      "message": "Use logging instead of print statements",
      "file": "agents/testing_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 569,
      "message": "Use logging instead of print statements",
      "file": "agents/testing_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 167,
      "message": "Use logging instead of print statements",
      "file": "agents/issue_orchestrator_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 361,
      "message": "Use logging instead of print statements",
      "file": "agents/issue_orchestrator_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 366,
      "message": "Use logging instead of print statements",
      "file": "agents/issue_orchestrator_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 367,
      "message": "Use logging instead of print statements",
      "file": "agents/issue_orchestrator_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 368,
      "message": "Use logging instead of print statements",
      "file": "agents/issue_orchestrator_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 369,
      "message": "Use logging instead of print statements",
      "file": "agents/issue_orchestrator_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 398,
      "message": "Use logging instead of print statements",
      "file": "agents/issue_orchestrator_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 408,
      "message": "Use logging instead of print statements",
      "file": "agents/issue_orchestrator_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 410,
      "message": "Use logging instead of print statements",
      "file": "agents/issue_orchestrator_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 460,
      "message": "Use logging instead of print statements",
      "file": "agents/issue_orchestrator_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 461,
      "message": "Use logging instead of print statements",
      "file": "agents/issue_orchestrator_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 462,
      "message": "Use logging instead of print statements",
      "file": "agents/issue_orchestrator_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 467,
      "message": "Use logging instead of print statements",
      "file": "agents/issue_orchestrator_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 470,
      "message": "Use logging instead of print statements",
      "file": "agents/issue_orchestrator_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 471,
      "message": "Use logging instead of print statements",
      "file": "agents/issue_orchestrator_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 473,
      "message": "Use logging instead of print statements",
      "file": "agents/issue_orchestrator_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 477,
      "message": "Use logging instead of print statements",
      "file": "agents/issue_orchestrator_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 478,
      "message": "Use logging instead of print statements",
      "file": "agents/issue_orchestrator_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 479,
      "message": "Use logging instead of print statements",
      "file": "agents/issue_orchestrator_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 481,
      "message": "Use logging instead of print statements",
      "file": "agents/issue_orchestrator_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 482,
      "message": "Use logging instead of print statements",
      "file": "agents/issue_orchestrator_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 483,
      "message": "Use logging instead of print statements",
      "file": "agents/issue_orchestrator_agent.py"
    },
    {
      "type": "todo_comment",
      "severity": "low",
      "line": 52,
      "message": "Unresolved comment: # Check for NOTE/FIXME comments",
      "file": "agents/code_review_agent.py"
    },
    {
      "type": "todo_comment",
      "severity": "low",
      "line": 54,
      "message": "Unresolved comment: if 'NOTE' in line or 'FIXME' in line:",
      "file": "agents/code_review_agent.py"
    },
    {
      "type": "hardcoded_path",
      "severity": "medium",
      "line": 63,
      "message": "Hardcoded path detected",
      "file": "agents/code_review_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 361,
      "message": "Use logging instead of print statements",
      "file": "agents/code_review_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 378,
      "message": "Use logging instead of print statements",
      "file": "agents/code_review_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 387,
      "message": "Use logging instead of print statements",
      "file": "agents/code_review_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 396,
      "message": "Use logging instead of print statements",
      "file": "agents/code_review_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 434,
      "message": "Use logging instead of print statements",
      "file": "agents/code_review_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 436,
      "message": "Use logging instead of print statements",
      "file": "agents/code_review_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 606,
      "message": "Use logging instead of print statements",
      "file": "agents/code_review_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 613,
      "message": "Use logging instead of print statements",
      "file": "agents/code_review_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 614,
      "message": "Use logging instead of print statements",
      "file": "agents/code_review_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 616,
      "message": "Use logging instead of print statements",
      "file": "agents/code_review_agent.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 127,
      "message": "Function lacks return type hint: def register_file_watcher(self, path: str, pattern: str = \"*\",",
      "file": "agents/event_system_agent.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 152,
      "message": "Function lacks return type hint: def register_schedule(self, cron_expr: str, handler: Callable,",
      "file": "agents/event_system_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 195,
      "message": "Use logging instead of print statements",
      "file": "agents/event_system_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 203,
      "message": "Use logging instead of print statements",
      "file": "agents/event_system_agent.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 297,
      "message": "Function lacks return type hint: def process_loop():",
      "file": "agents/event_system_agent.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 306,
      "message": "Function lacks return type hint: def watcher_loop():",
      "file": "agents/event_system_agent.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 316,
      "message": "Function lacks return type hint: def scheduler_loop():",
      "file": "agents/event_system_agent.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 490,
      "message": "Function lacks return type hint: def cli():",
      "file": "agents/event_system_agent.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 499,
      "message": "Function lacks return type hint: def emit(event_type, data, source):",
      "file": "agents/event_system_agent.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 515,
      "message": "Function lacks return type hint: def list():",
      "file": "agents/event_system_agent.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 530,
      "message": "Function lacks return type hint: def process():",
      "file": "agents/event_system_agent.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 539,
      "message": "Function lacks return type hint: def history(limit):",
      "file": "agents/event_system_agent.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 555,
      "message": "Function lacks return type hint: def cleanup(days):",
      "file": "agents/event_system_agent.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 566,
      "message": "Function lacks return type hint: def watch(path, pattern, event):",
      "file": "agents/event_system_agent.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 676,
      "message": "Function lacks return type hint: def on_file_changed(event):",
      "file": "agents/event_system_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 679,
      "message": "Use logging instead of print statements",
      "file": "agents/event_system_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 684,
      "message": "Use logging instead of print statements",
      "file": "agents/event_system_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 693,
      "message": "Use logging instead of print statements",
      "file": "agents/event_system_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 694,
      "message": "Use logging instead of print statements",
      "file": "agents/event_system_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 702,
      "message": "Use logging instead of print statements",
      "file": "agents/event_system_agent.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 721,
      "message": "Function lacks return type hint: def daily_review(event):",
      "file": "agents/event_system_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 723,
      "message": "Use logging instead of print statements",
      "file": "agents/event_system_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 727,
      "message": "Use logging instead of print statements",
      "file": "agents/event_system_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 735,
      "message": "Use logging instead of print statements",
      "file": "agents/event_system_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 736,
      "message": "Use logging instead of print statements",
      "file": "agents/event_system_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 744,
      "message": "Use logging instead of print statements",
      "file": "agents/event_system_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 815,
      "message": "Use logging instead of print statements",
      "file": "agents/event_system_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 821,
      "message": "Use logging instead of print statements",
      "file": "agents/event_system_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 822,
      "message": "Use logging instead of print statements",
      "file": "agents/event_system_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 825,
      "message": "Use logging instead of print statements",
      "file": "agents/event_system_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 828,
      "message": "Use logging instead of print statements",
      "file": "agents/event_system_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 830,
      "message": "Use logging instead of print statements",
      "file": "agents/event_system_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 445,
      "message": "Use logging instead of print statements",
      "file": "agents/repository_setup_agent.py"
    },
    {
      "type": "hardcoded_path",
      "severity": "medium",
      "line": 449,
      "message": "Hardcoded path detected",
      "file": "agents/repository_setup_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 452,
      "message": "Use logging instead of print statements",
      "file": "agents/repository_setup_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 453,
      "message": "Use logging instead of print statements",
      "file": "agents/repository_setup_agent.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 455,
      "message": "Use logging instead of print statements",
      "file": "agents/repository_setup_agent.py"
    },
    {
      "type": "missing_docstring",
      "severity": "low",
      "line": 1,
      "message": "Module lacks docstring",
      "file": "examples/triggers/daily_schedule.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 13,
      "message": "Function lacks return type hint: def daily_review(event):",
      "file": "examples/triggers/daily_schedule.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 15,
      "message": "Use logging instead of print statements",
      "file": "examples/triggers/daily_schedule.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 19,
      "message": "Use logging instead of print statements",
      "file": "examples/triggers/daily_schedule.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 27,
      "message": "Use logging instead of print statements",
      "file": "examples/triggers/daily_schedule.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 28,
      "message": "Use logging instead of print statements",
      "file": "examples/triggers/daily_schedule.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 36,
      "message": "Use logging instead of print statements",
      "file": "examples/triggers/daily_schedule.py"
    },
    {
      "type": "missing_docstring",
      "severity": "low",
      "line": 1,
      "message": "Module lacks docstring",
      "file": "examples/triggers/file_watcher.py"
    },
    {
      "type": "missing_type_hints",
      "severity": "low",
      "line": 13,
      "message": "Function lacks return type hint: def on_file_changed(event):",
      "file": "examples/triggers/file_watcher.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 16,
      "message": "Use logging instead of print statements",
      "file": "examples/triggers/file_watcher.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 21,
      "message": "Use logging instead of print statements",
      "file": "examples/triggers/file_watcher.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 30,
      "message": "Use logging instead of print statements",
      "file": "examples/triggers/file_watcher.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 31,
      "message": "Use logging instead of print statements",
      "file": "examples/triggers/file_watcher.py"
    },
    {
      "type": "print_statement",
      "severity": "low",
      "line": 39,
      "message": "Use logging instead of print statements",
      "file": "examples/triggers/file_watcher.py"
    },
    {
      "type": "undocumented_dependencies",
      "severity": "high",
      "message": "Third-party imports without requirements.txt: core.state, pygments.lexers.sgf, pygments.lexers.idl, functools, email.message, mypy.plugins.common, core.agent, pygments.lexers._scheme_builtins, _pytest.raises, pygments.lexers.erlang, pygments.style, runpy, pydantic.v1.utils, pygments.formatters._mapping, pygments.lexers.dsls, importlib.metadata, pygments.lexers.modeling, pygments.lexers.esoteric, pygments.lexers.installers, pygments.lexers.smalltalk, copy, pydantic.color, pygments.lexers.haxe, configparser, itertools, pydantic.v1.class_validators, _pytest.python, pygments.lexer, agents.test_runner_agent, hashlib, pygments.lexers._css_builtins, pygments.lexers.modula2, marshal, collections.abc, pygments.formatters, pygments.formatters.latex, fnmatch, _pytest.stash, _pytest.pytester, pygments.lexers.crystal, pygments.lexers.d, _pytest.pathlib, sysconfig, reprlib, pygments.lexers, _pytest.config, _pytest.outcomes, traceback, core.triggers, pygments.lexers.pascal, pygments.lexers.ooc, pprint, agents.{module_name}, codecs, pydantic.v1.validators, inspect, _pytest.debugging, pydantic, gc, sphinx.util.nodes, mypy.nodes, pygments.lexers.lean, time, pygments.lexers.web, dataclasses, packaging.licenses._spdx, pygments.lexers._csound_builtins, textwrap, mypy.options, importlib, pygments.lexers.dotnet, pygments.lexers.haskell, REPL.REPLCompletions, pygments.lexers.lisp, pydantic_core._pydantic_core, pygments.lexers.actionscript, pydantic.v1.typing, pydantic.v1.types, _pytest.tracemalloc, pydantic.v1.decorator, pygments.lexers.factor, ast, pygments.lexers.php, docutils.parsers.rst, pydantic.main, _pytest.config.compat, pygments.lexers._stata_builtins, keyword, core.tools, pydantic._internal._import_utils, _pytest.freeze_support, mypy.version, pygments.lexers.markup, _pytest.doctest, pygments.lexers.jvm, pygments.lexers.c_like, pygments.lexers.objective, core.context, pydantic.v1, locale, zoneinfo, pydantic_core.core_schema, pygments.console, pygments.filters, warnings, _pytest.assertion.rewrite, pygments.lexers.shell, pygments.lexers.rebol, pygments.lexers.r, pygments.token, math, _pytest.recwarn, pygments.lexers.console, threading, _pytest.terminal, pydantic.v1.errors, pygments.lexers.matlab, pygments.styles, _pytest._io.wcwidth, pygments.unistring, abc, _pytest.tmpdir, pygments.lexers.robotframework, bisect, _pytest.nodes, _pytest._code.source, _pytest.main, numbers, stat, _pytest._version, pygments.lexers.ada, pydantic.v1.json, _pytest._io.pprint, mypy.errorcodes, pytest, pydantic_core, pygments.lexers._lilypond_builtins, typing_extensions, pygments.lexers.textedit, hypothesis.strategies, mypy.typevars, pydantic.v1.fields, pydantic.v1.annotated_types, _pytest.config.exceptions, pygments.lexers.lilypond, pydantic.errors, tempfile, errno, pygments.lexers.ruby, pygments.lexers.python, pygments.lexers.javascript, _pytest._py.path, mypy.state, pydantic.v1.parse, pygments.lexers.pawn, pygments.util, pydantic.version, pydantic.v1.tools, pygments.lexers.snobol, posixpath, py, pydantic.v1.error_wrappers, typing_inspection, mypy.semanal, shlex, pydantic.v1.version, pygments.lexers.perl, platform, pygments.lexers.go, glob, pygments.lexers.c_cpp, pygments.lexers.mime, _pytest._io, unicodedata, _pytest.capture, _pytest.fixtures, pygments.lexers.prolog, email.parser, pygments.lexers.felix, pygments.lexers.theorem, pygments.regexopt, pygments.lexers.css, pygments.lexers.data, pygments.lexers.special, agents.code_review_agent, mypy.plugins, pydantic._internal, pygments.lexers._mapping, _pytest.python_api, pygments.lexers.ecl, _pytest.mark, _pytest.assertion.util, pygments.lexers.ml, bdb, shutil, docutils, pydantic.v1.env_settings, _pytest._code, pygments.lexers.basic, _pytest.config.argparsing, _pytest.reports, pygments.lexers.rust, pygments.formatter, pydantic.v1.networks, iniconfig, xml.etree.ElementTree, email.feedparser, pydantic.v1.main, typing_inspection.introspection, pydantic.v1.schema, argparse, pygments.lexers.configs, pygments.lexers._qlik_builtins, contextvars, _pytest.runner, site, struct, pygments.lexers.dylan, colorsys, mypy.expandtype, pydantic.v1.datetime_parse, builtins, mypy.type_visitor, logging, contextlib, ipaddress, weakref, pickle, pydantic.types, _pytest.legacypath, importlib.util, pygments.cmdline, io, _pytest.hookspec, pygments, pydantic.warnings, pygments.lexers.webmisc, pygments.lexers.diff, pygments.lexers.nimrod, pygments.lexers.fortran, _pytest.monkeypatch, pygments.lexers.scripting, base64, pygments.lexers.smv, email.policy, atexit, __future__, _pytest.compat, _pytest.assertion, annotated_types, _pytest._code.code, pygments.modeline, _pytest.logging, pygments.plugin, pygments.lexers.sql, pygments.lexers._julia_builtins, pygments.lexers.make, pygments.lexers.tcl, pygments.scanner, mypy.plugin, docutils.statemachine, _pytest._py.error, _pytest.cacheprovider, operator, pydantic.v1.config, click, pygments.filter, importlib.machinery, _pytest.deprecated, pydantic.v1.color, pygments.lexers.julia, decimal, pydantic._internal._internal_dataclass, mypy.types, pygments.lexers.graphics, pygments.lexers.urbi, pygments.lexers._usd_builtins, pygments.formatters.terminal, pygments.lexers._openedge_builtins, pygments.lexers._ada_builtins, pygments.formatters.terminal256, pygments.lexers.textfmts, email.header, pygments.lexers.testing, unittest, _pytest, mypy.util, types, _pytest.scope, _pytest.warning_types, pluggy, fractions, pygments.lexers.algebra, importlib.abc, pygments.lexers.iolang, mypy.typeops, tokenize, _pytest._io.saferepr, pygments.lexers.business, enum, string, uuid, mypy.server.trigger, pygments.lexers.html, _pytest.mark.structures, pygments.styles._mapping, collections, pygments.lexers.automation"
    },
    {
      "file": "/Users/dbraman/Documents/GitHub/12-factor-agents/core/triggers.py",
      "type": "unsafe_deserialization",
      "severity": "high",
      "message": "Unsafe deserialization with pickle"
    },
    {
      "file": "/Users/dbraman/Documents/GitHub/12-factor-agents/core/tools.py",
      "type": "unsafe_deserialization",
      "severity": "high",
      "message": "Unsafe deserialization with pickle"
    },
    {
      "file": "/Users/dbraman/Documents/GitHub/12-factor-agents/core/agent.py",
      "type": "unsafe_deserialization",
      "severity": "high",
      "message": "Unsafe deserialization with pickle"
    },
    {
      "file": "/Users/dbraman/Documents/GitHub/12-factor-agents/agents/issue_fixer_agent.py",
      "type": "dangerous_function",
      "severity": "high",
      "message": "Use of eval() or exec() is dangerous"
    },
    {
      "file": "/Users/dbraman/Documents/GitHub/12-factor-agents/agents/issue_fixer_agent.py",
      "type": "unsafe_deserialization",
      "severity": "high",
      "message": "Unsafe deserialization with pickle"
    },
    {
      "file": "/Users/dbraman/Documents/GitHub/12-factor-agents/agents/issue_processor_agent.py",
      "type": "unsafe_deserialization",
      "severity": "high",
      "message": "Unsafe deserialization with pickle"
    },
    {
      "file": "/Users/dbraman/Documents/GitHub/12-factor-agents/agents/testing_agent.py",
      "type": "dangerous_function",
      "severity": "high",
      "message": "Use of eval() or exec() is dangerous"
    },
    {
      "file": "/Users/dbraman/Documents/GitHub/12-factor-agents/agents/issue_orchestrator_agent.py",
      "type": "unsafe_deserialization",
      "severity": "high",
      "message": "Unsafe deserialization with pickle"
    },
    {
      "file": "/Users/dbraman/Documents/GitHub/12-factor-agents/agents/code_review_agent.py",
      "type": "dangerous_function",
      "severity": "high",
      "message": "Use of eval() or exec() is dangerous"
    },
    {
      "file": "/Users/dbraman/Documents/GitHub/12-factor-agents/agents/code_review_agent.py",
      "type": "unsafe_deserialization",
      "severity": "high",
      "message": "Unsafe deserialization with pickle"
    },
    {
      "file": "/Users/dbraman/Documents/GitHub/12-factor-agents/agents/event_system_agent.py",
      "type": "unsafe_deserialization",
      "severity": "high",
      "message": "Unsafe deserialization with pickle"
    },
    {
      "file": "/Users/dbraman/Documents/GitHub/12-factor-agents/.venv/lib/python3.13/site-packages/typing_extensions.py",
      "type": "dangerous_function",
      "severity": "high",
      "message": "Use of eval() or exec() is dangerous"
    },
    {
      "file": "/Users/dbraman/Documents/GitHub/12-factor-agents/.venv/lib/python3.13/site-packages/packaging/_parser.py",
      "type": "dangerous_function",
      "severity": "high",
      "message": "Use of eval() or exec() is dangerous"
    },
    {
      "file": "/Users/dbraman/Documents/GitHub/12-factor-agents/.venv/lib/python3.13/site-packages/pluggy/_hooks.py",
      "type": "dangerous_function",
      "severity": "high",
      "message": "Use of eval() or exec() is dangerous"
    },
    {
      "file": "/Users/dbraman/Documents/GitHub/12-factor-agents/.venv/lib/python3.13/site-packages/pluggy/_manager.py",
      "type": "dangerous_function",
      "severity": "high",
      "message": "Use of eval() or exec() is dangerous"
    },
    {
      "file": "/Users/dbraman/Documents/GitHub/12-factor-agents/.venv/lib/python3.13/site-packages/pydantic/types.py",
      "type": "hardcoded_secret",
      "severity": "critical",
      "message": "Potential hardcoded secret detected"
    },
    {
      "file": "/Users/dbraman/Documents/GitHub/12-factor-agents/.venv/lib/python3.13/site-packages/typing_inspection/typing_objects.py",
      "type": "dangerous_function",
      "severity": "high",
      "message": "Use of eval() or exec() is dangerous"
    },
    {
      "file": "/Users/dbraman/Documents/GitHub/12-factor-agents/.venv/lib/python3.13/site-packages/_pytest/skipping.py",
      "type": "dangerous_function",
      "severity": "high",
      "message": "Use of eval() or exec() is dangerous"
    },
    {
      "file": "/Users/dbraman/Documents/GitHub/12-factor-agents/.venv/lib/python3.13/site-packages/_pytest/pytester.py",
      "type": "dangerous_function",
      "severity": "high",
      "message": "Use of eval() or exec() is dangerous"
    },
    {
      "file": "/Users/dbraman/Documents/GitHub/12-factor-agents/.venv/lib/python3.13/site-packages/_pytest/cacheprovider.py",
      "type": "unsafe_deserialization",
      "severity": "high",
      "message": "Unsafe deserialization with pickle"
    },
    {
      "file": "/Users/dbraman/Documents/GitHub/12-factor-agents/.venv/lib/python3.13/site-packages/_pytest/mark/__init__.py",
      "type": "dangerous_function",
      "severity": "high",
      "message": "Use of eval() or exec() is dangerous"
    },
    {
      "file": "/Users/dbraman/Documents/GitHub/12-factor-agents/.venv/lib/python3.13/site-packages/_pytest/mark/expression.py",
      "type": "dangerous_function",
      "severity": "high",
      "message": "Use of eval() or exec() is dangerous"
    },
    {
      "file": "/Users/dbraman/Documents/GitHub/12-factor-agents/.venv/lib/python3.13/site-packages/_pytest/_code/code.py",
      "type": "dangerous_function",
      "severity": "high",
      "message": "Use of eval() or exec() is dangerous"
    },
    {
      "file": "/Users/dbraman/Documents/GitHub/12-factor-agents/.venv/lib/python3.13/site-packages/_pytest/assertion/rewrite.py",
      "type": "dangerous_function",
      "severity": "high",
      "message": "Use of eval() or exec() is dangerous"
    },
    {
      "file": "/Users/dbraman/Documents/GitHub/12-factor-agents/.venv/lib/python3.13/site-packages/_pytest/_py/path.py",
      "type": "dangerous_function",
      "severity": "high",
      "message": "Use of eval() or exec() is dangerous"
    },
    {
      "file": "/Users/dbraman/Documents/GitHub/12-factor-agents/.venv/lib/python3.13/site-packages/pydantic/v1/config.py",
      "type": "unsafe_deserialization",
      "severity": "high",
      "message": "Unsafe deserialization with pickle"
    },
    {
      "file": "/Users/dbraman/Documents/GitHub/12-factor-agents/.venv/lib/python3.13/site-packages/pydantic/v1/tools.py",
      "type": "unsafe_deserialization",
      "severity": "high",
      "message": "Unsafe deserialization with pickle"
    },
    {
      "file": "/Users/dbraman/Documents/GitHub/12-factor-agents/.venv/lib/python3.13/site-packages/pydantic/v1/utils.py",
      "type": "dangerous_function",
      "severity": "high",
      "message": "Use of eval() or exec() is dangerous"
    },
    {
      "file": "/Users/dbraman/Documents/GitHub/12-factor-agents/.venv/lib/python3.13/site-packages/pydantic/v1/parse.py",
      "type": "unsafe_deserialization",
      "severity": "high",
      "message": "Unsafe deserialization with pickle"
    },
    {
      "file": "/Users/dbraman/Documents/GitHub/12-factor-agents/.venv/lib/python3.13/site-packages/pydantic/_internal/_typing_extra.py",
      "type": "dangerous_function",
      "severity": "high",
      "message": "Use of eval() or exec() is dangerous"
    },
    {
      "file": "/Users/dbraman/Documents/GitHub/12-factor-agents/.venv/lib/python3.13/site-packages/pydantic/_internal/_namespace_utils.py",
      "type": "dangerous_function",
      "severity": "high",
      "message": "Use of eval() or exec() is dangerous"
    },
    {
      "file": "/Users/dbraman/Documents/GitHub/12-factor-agents/.venv/lib/python3.13/site-packages/pydantic/deprecated/parse.py",
      "type": "unsafe_deserialization",
      "severity": "high",
      "message": "Unsafe deserialization with pickle"
    },
    {
      "file": "/Users/dbraman/Documents/GitHub/12-factor-agents/.venv/lib/python3.13/site-packages/pygments/lexers/_julia_builtins.py",
      "type": "dangerous_function",
      "severity": "high",
      "message": "Use of eval() or exec() is dangerous"
    },
    {
      "file": "/Users/dbraman/Documents/GitHub/12-factor-agents/.venv/lib/python3.13/site-packages/pygments/lexers/__init__.py",
      "type": "dangerous_function",
      "severity": "high",
      "message": "Use of eval() or exec() is dangerous"
    },
    {
      "file": "/Users/dbraman/Documents/GitHub/12-factor-agents/.venv/lib/python3.13/site-packages/pygments/lexers/special.py",
      "type": "dangerous_function",
      "severity": "high",
      "message": "Use of eval() or exec() is dangerous"
    },
    {
      "file": "/Users/dbraman/Documents/GitHub/12-factor-agents/.venv/lib/python3.13/site-packages/pygments/formatters/__init__.py",
      "type": "dangerous_function",
      "severity": "high",
      "message": "Use of eval() or exec() is dangerous"
    },
    {
      "file": "/Users/dbraman/Documents/GitHub/12-factor-agents/.venv/lib/python3.13/site-packages/packaging/licenses/__init__.py",
      "type": "dangerous_function",
      "severity": "high",
      "message": "Use of eval() or exec() is dangerous"
    }
  ]
}