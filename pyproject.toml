[build-system]
requires = ["setuptools>=45", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "12-factor-agents"
version = "1.0.0"
description = "12-Factor compliant AI agent framework"
requires-python = ">=3.9"
dependencies = [
    "jinja2>=3.1.6",
    "psutil>=7.0.0",
    "pydantic>=2.0",
    "pytest-asyncio>=1.1.0",
    "pyyaml>=6.0.2",
    "semver>=3.0.0",
    "PyGithub>=2.1.1",
    "anthropic>=0.8.0",
    "flask>=3.0.0",
]

[project.scripts]
agent = "bin.agent:main"
event = "bin.event:main"

[project.optional-dependencies]
dev = [
    "pytest>=7.0",
    "pytest-cov>=4.0.0",
    "black>=23.0",
    "ruff>=0.1",
]

[tool.setuptools.packages.find]
include = ["agents*", "core*", "bin*", "orchestration*"]

[tool.uv]
package = true
dev-dependencies = [
    "pre-commit>=4.3.0",
    "pytest>=7.0",
    "pytest-cov>=4.0.0",
]

[tool.pytest.ini_options]
minversion = "7.0"
addopts = [
    "--strict-markers",
    "--strict-config",
    "--disable-warnings",
]
testpaths = ["tests"]
markers = [
    "integration: marks tests as integration tests",
    "performance: marks tests as performance tests",
    "slow: marks tests as slow running",
]

[tool.coverage.run]
source = ["agents", "core", "bin", "orchestration"]
omit = [
    "tests/*",
    "*/test_*.py",
    "*/__pycache__/*",
    "*/migrations/*",
    "setup.py",
    "*/venv/*",
    "*/.venv/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
ignore_errors = true
show_missing = true
precision = 2
fail_under = 10

[tool.coverage.html]
directory = "htmlcov"

[tool.coverage.xml]
output = "coverage.xml"
